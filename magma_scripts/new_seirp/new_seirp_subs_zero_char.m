SetNthreads(64);
Q := RationalField();
SetVerbose("Faugere", 2);
P<s_8, i_8, s_7, i_7, e_7, s_6, i_6, e_6, s_5, i_5, e_5, s_4, i_4, e_4, s_3, i_3, e_3, s_2, i_2, e_2, s_1, i_1, e_1, s_0, i_0, e_0, z_aux, w_aux, a_e, a_i, b, k, mu, rho>:= PolynomialRing(Q, 34, "grevlex");
G := ideal< P | -i_0^3-s_0^3+442521954810329, b*i_0^3-e_0^3*k+i_0^3*mu+i_1^3, a_e*e_0^3*s_0^3+a_i*i_0^3*s_0^3+s_1^3, -i_1^3-s_1^3-38844024670734164468163164914737818043936354, -e_1^3*k+(b+mu)*i_1^3+i_2^3, a_e*s_0^3*e_1^3+a_i*s_0^3*i_1^3+(a_e*e_0^3+a_i*i_0^3)*s_1^3+s_2^3, -a_e*e_0^3*s_0^3-a_i*i_0^3*s_0^3+e_0^3*rho^3+e_0^3*k+e_1^3, -i_2^3-s_2^3+7578346402131008106194117517769542774438422073403399496233681863180934458, -e_2^3*k+(b+mu)*i_2^3+i_3^3, (e_0^3*s_2^3+2*e_1^3*s_1^3+e_2^3*s_0^3)*a_e+(i_0^3*s_2^3+2*i_1^3*s_1^3+i_2^3*s_0^3)*a_i+s_3^3, (-a_e*s_0^3+rho^3+k)*e_1^3-a_e*e_0^3*s_1^3+(-i_0^3*s_1^3-i_1^3*s_0^3)*a_i+e_2^3, -i_3^3-s_3^3-1143551594651985975171195043193961456544842716906607176726516568213824197537618556327479463932264014606, -e_3^3*k+(b+mu)*i_3^3+i_4^3, (e_0^3*s_3^3+3*e_1^3*s_2^3+3*e_2^3*s_1^3+e_3^3*s_0^3)*a_e+(i_0^3*s_3^3+3*i_1^3*s_2^3+3*i_2^3*s_1^3+i_3^3*s_0^3)*a_i+s_4^3, (-e_0^3*s_2^3-2*e_1^3*s_1^3-e_2^3*s_0^3)*a_e+(-i_0^3*s_2^3-2*i_1^3*s_1^3-i_2^3*s_0^3)*a_i+(rho^3+k)*e_2^3+e_3^3, -i_4^3-s_4^3+27054490156381049662186597391277640005429849441459668016113987250159577711227367192121270504847349379257409613532021658822789158002, -e_4^3*k+(b+mu)*i_4^3+i_5^3, (e_0^3*s_4^3+4*e_1^3*s_3^3+6*e_2^3*s_2^3+4*e_3^3*s_1^3+e_4^3*s_0^3)*a_e+(i_0^3*s_4^3+4*i_1^3*s_3^3+6*i_2^3*s_2^3+4*i_3^3*s_1^3+i_4^3*s_0^3)*a_i+s_5^3, (-e_0^3*s_3^3-3*e_1^3*s_2^3-3*e_2^3*s_1^3-e_3^3*s_0^3)*a_e+(-i_0^3*s_3^3-3*i_1^3*s_2^3-3*i_2^3*s_1^3-i_3^3*s_0^3)*a_i+(rho^3+k)*e_3^3+e_4^3, -i_5^3-s_5^3+72414558131284794155056336643136777776322915933301925248550776552258943790478872759943551364271393696764424376855366893252498824346998562553021616316771050685946, -e_5^3*k+(b+mu)*i_5^3+i_6^3, (e_0^3*s_5^3+5*e_1^3*s_4^3+10*e_2^3*s_3^3+10*e_3^3*s_2^3+5*e_4^3*s_1^3+e_5^3*s_0^3)*a_e+(i_0^3*s_5^3+5*i_1^3*s_4^3+10*i_2^3*s_3^3+10*i_3^3*s_2^3+5*i_4^3*s_1^3+i_5^3*s_0^3)*a_i+s_6^3, (-e_0^3*s_4^3-4*e_1^3*s_3^3-6*e_2^3*s_2^3-4*e_3^3*s_1^3-e_4^3*s_0^3)*a_e+(-i_0^3*s_4^3-4*i_1^3*s_3^3-6*i_2^3*s_2^3-4*i_3^3*s_1^3-i_4^3*s_0^3)*a_i+(rho^3+k)*e_4^3+e_5^3, -i_6^3-s_6^3-34532978677738688174571270918296003239533832279887675218377626973638936700226591422594003535842295826903768578340541514550654648559583512854491616409851667937530331664776578790696250632218902, -e_6^3*k+(b+mu)*i_6^3+i_7^3, (e_0^3*s_6^3+6*e_1^3*s_5^3+15*e_2^3*s_4^3+20*e_3^3*s_3^3+15*e_4^3*s_2^3+6*e_5^3*s_1^3+e_6^3*s_0^3)*a_e+(i_0^3*s_6^3+6*i_1^3*s_5^3+15*i_2^3*s_4^3+20*i_3^3*s_3^3+15*i_4^3*s_2^3+6*i_5^3*s_1^3+i_6^3*s_0^3)*a_i+s_7^3, (-e_0^3*s_5^3-5*e_1^3*s_4^3-10*e_2^3*s_3^3-10*e_3^3*s_2^3-5*e_4^3*s_1^3-e_5^3*s_0^3)*a_e+(-i_0^3*s_5^3-5*i_1^3*s_4^3-10*i_2^3*s_3^3-10*i_3^3*s_2^3-5*i_4^3*s_1^3-i_5^3*s_0^3)*a_i+(rho^3+k)*e_5^3+e_6^3, -i_7^3-s_7^3+6576392486134193113021546115990707877720401196374674977354112361782087439461609089056383940823233411841693645705921865178321758382433288962837617419875641247860789172843497597164187073134991147506627162305470733759453634, -e_7^3*k+(b+mu)*i_7^3+i_8^3, (e_0^3*s_7^3+7*e_1^3*s_6^3+21*e_2^3*s_5^3+35*e_3^3*s_4^3+35*e_4^3*s_3^3+21*e_5^3*s_2^3+7*e_6^3*s_1^3+e_7^3*s_0^3)*a_e+(i_0^3*s_7^3+7*i_1^3*s_6^3+21*i_2^3*s_5^3+35*i_3^3*s_4^3+35*i_4^3*s_3^3+21*i_5^3*s_2^3+7*i_6^3*s_1^3+i_7^3*s_0^3)*a_i+s_8^3, (-e_0^3*s_6^3-6*e_1^3*s_5^3-15*e_2^3*s_4^3-20*e_3^3*s_3^3-15*e_4^3*s_2^3-6*e_5^3*s_1^3-e_6^3*s_0^3)*a_e+(-i_0^3*s_6^3-6*i_1^3*s_5^3-15*i_2^3*s_4^3-20*i_3^3*s_3^3-15*i_4^3*s_2^3-6*i_5^3*s_1^3-i_6^3*s_0^3)*a_i+(rho^3+k)*e_6^3+e_7^3, -i_8^3-s_8^3+3119448569554222806943995271144356190678221463480602619604369247930278291829394240933558491804353041228383168062585110741237283912823579525807638608193790278245793908280225772260980582488507408839695308189314098244209730372940924884900647680397332642, z_aux^3-1>;
// {e_0 = e_0^3, e_1 = e_1^3, e_2 = e_2^3, e_3 = e_3^3, e_4 = e_4^3, e_5 = e_5^3, e_6 = e_6^3, e_7 = e_7^3, i_0 = i_0^3, i_1 = i_1^3, i_2 = i_2^3, i_3 = i_3^3, i_4 = i_4^3, i_5 = i_5^3, i_6 = i_6^3, i_7 = i_7^3, i_8 = i_8^3, rho = rho^3, s_0 = s_0^3, s_1 = s_1^3, s_2 = s_2^3, s_3 = s_3^3, s_4 = s_4^3, s_5 = s_5^3, s_6 = s_6^3, s_7 = s_7^3, s_8 = s_8^3, z_aux = z_aux^3}
time GroebnerBasis(G);
quit;