    |\^/|     Maple 2021 (X86 64 LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2021
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
# baseline 492
> kernelopts(printbytes=false, assertlevel=1):
> interface(echo=0, prettyprint=0):
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in SubsByDepth) `out` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `mem` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `cpu_time` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `real_time` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in WriteScripts) `weights` is implicitly declared local
|imports/create_substitutions.mpl:111|
Warning, (in WriteScripts) `max_degree` is implicitly declared local
|imports/create_substitutions.mpl:112|
Warning, (in WriteScripts) `new_weights` is implicitly declared local
|imports/create_substitutions.mpl:113|
Warning, (in WriteScripts) `each` is implicitly declared local
|imports/create_substitutions.mpl:113|

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [x4(t), x5(t), x6(t), x7(t)]
Output variables:         [y1(t), y2(t)]
Input variables:          []
Parameters in equations:  [k10, k5, k6, k7, k8, k9]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [k10, k5, k6, k7, k8, k9, x4(0), x5(0), x6(0)]
Nonidentifiable parameter:  [x7(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters {x7(0)}
Number of possible combinations 1
Picked the best choice [x7_0] based on heuristic:

=======================================================
4. Randomizing the truncated system
=======================================================
Prep CPU Time (sub_transc=true):	 1.951
Prep Real Elapsed Time (sub_transc=true):	 1.836
memory used=204.40MiB, alloc change=72.00MiB, cpu time=1.98s, real time=1.86s, gc time=335.49ms


GetPolySystem Usage (real, cpu, memory):	1.860,	1.975,	214330400

States for substitution:	[x5_ = 0, k7 = 1, x4_ = 0, x6_ = 1, k8 = 1, k10 = 2, k9 = 2, k5 = 1, k6 = 1]
NonID parameters:	[x7_0]
Substitutions:	[x5_ = 1, z_aux = 2, x4_ = 1, x6_ = 2, k10 = 3, k9 = 3]
memory used=243.24MiB, alloc change=72.00MiB, cpu time=2.38s, real time=2.27s, gc time=335.49ms
all_subs, system_vars[1], system_vars[2], alg_indep, original_et_hat := {k10 =
k10^3, k9 = k9^3, x4_0 = x4_0, x4_1 = x4_1, x4_2 = x4_2, x4_3 = x4_3, x4_4 = 
x4_4, x4_5 = x4_5, x5_0 = x5_0, x5_1 = x5_1, x5_2 = x5_2, x5_3 = x5_3, x5_4 = 
x5_4, x5_5 = x5_5, x5_6 = x5_6, x6_0 = x6_0^2, x6_1 = x6_1^2, x6_2 = x6_2^2, 
x6_3 = x6_3^2, x6_4 = x6_4^2, x6_5 = x6_5^2, z_aux = z_aux^2}, [11302309961734-
x4_0, k5*x4_0+k6*x4_1+x4_0*x4_1, 7003013305734-x5_0, -k5*x4_0*x6_0^2+k6*x5_1*
x6_0^2+x4_0*x5_1*x6_0^2-k5*k8*x4_0-k5*x4_0*x5_0+k6*k7*x5_0+k6*k8*x5_1+k6*x5_0*
x5_1+k7*x4_0*x5_0+k8*x4_0*x5_1+x4_0*x5_0*x5_1, -x4_1-7677307795354297882967669/
847579664387, x4_1^2+x4_1*k5+(k6+x4_0)*x4_2, -x5_1+
32761656998424660448488936122758814669/7917532403392280545039859, (k6+x4_0)*
x5_1^2+((x6_1^2-k5+k7)*x4_0+(x6_0^2+k8+x5_0)*x4_1+k6*(x6_1^2+k7))*x5_1+((x6_0^2
+k8+x5_0)*x5_2-k5*x6_1^2)*x4_0+((-k5+k7)*x5_0-k5*(x6_0^2+k8))*x4_1+k6*x5_2*(
x6_0^2+k8+x5_0), k10^3*k9^3*x6_0^4+k10^3*k8*k9^3*x6_0^2+k10^3*k9^3*x5_0*x6_0^2-
k9^3*x6_0^6-k8*k9^3*x6_0^4-k9^3*x5_0*x6_0^4+k10^3*x6_0^2*x6_1^2+k10^3*k8*x6_1^2
+k10^3*x5_0*x6_1^2-k10^3*k7*x5_0, -x4_2+
1470110165065399577146988360680987462747762779243/
4262256924400020688263282926847660221, (k5+3*x4_1)*x4_2+(k6+x4_0)*x4_3, -x5_2-\
6995855048641672622146354630417004906013727233741530390934403582221752634446353\
6214308851894683991/
294812162849111140196627195495749255647394975458593346320772937796799419021, 2*
x4_1*x5_1^2+((3*k6+3*x4_0)*x5_2+x6_2^2*x4_0+(2*x6_1^2-2*k5+2*k7)*x4_1+(x6_0^2+
k8+x5_0)*x4_2+x6_2^2*k6)*x5_1+((2*x6_1^2-k5+k7)*x4_0+(2*x6_0^2+2*k8+2*x5_0)*
x4_1+2*k6*(x6_1^2+1/2*k7))*x5_2+(-k5*x6_2^2+x5_3*(x6_0^2+k8+x5_0))*x4_0-2*k5*
x4_1*x6_1^2+((-x6_0^2-k8-x5_0)*k5+k7*x5_0)*x4_2+x5_3*k6*(x6_0^2+k8+x5_0), (x6_1
^4+((2*x6_0^2+k8+x5_0)*k9^3+x5_1)*x6_1^2+k9^3*x6_0^2*x5_1+x6_2^2*x6_0^2-x5_1*k7
+x6_2^2*(k8+x5_0))*k10^3-2*x6_0^2*k9^3*((k8+x5_0+3/2*x6_0^2)*x6_1^2+1/2*x5_1*
x6_0^2), -x5_3+2179601522794332290877595387882465959753509470558544294154870145\
4062142814347295978039368543510230502146838915986349202348004375958435592953343\
610619685286962426/109774367739287409240904003025872141130531642839876166403645\
56815755171651632707373980683969076785941770256069223407252243699, 3*x4_2*x5_1^
2+((x6_3^2+4*x5_3)*x4_0+9*x4_1*x5_2+4*x5_3*k6+3*x6_2^2*x4_1-3*x4_2*k5+x6_3^2*k6
+(3*x6_1^2+3*k7)*x4_2+x4_3*(x6_0^2+k8+x5_0))*x5_1+(3*x5_2^2+3*x6_2^2*x5_2+(3*
x6_1^2-k5+k7)*x5_3-k5*x6_3^2+x5_4*(x6_0^2+k8+x5_0))*x4_0+3*k6*x5_2^2+((6*x6_1^2
-3*k5+3*k7)*x4_1+3*x6_2^2*k6+3*(x6_0^2+k8+x5_0)*x4_2)*x5_2+((3*x6_0^2+3*k8+3*
x5_0)*x4_1+3*k6*(x6_1^2+1/3*k7))*x5_3-3*k5*x4_1*x6_2^2+(-3*x6_1^2*x4_2-x4_3*(
x6_0^2+k8+x5_0))*k5+x5_4*(x6_0^2+k8+x5_0)*k6+k7*x4_3*x5_0, (((2*x6_2^2+x5_2)*
x6_0^2+2*x6_1^4+2*x5_1*x6_1^2+x6_2^2*(k8+x5_0))*k10^3+(-3*x6_2^2-x5_2)*x6_0^4+(
-6*x6_1^4-4*x5_1*x6_1^2-2*x6_2^2*(k8+x5_0))*x6_0^2-2*x6_1^4*(k8+x5_0))*k9^3-k10
^3*(-x6_3^2*x6_0^2+(-3*x6_2^2-x5_2)*x6_1^2+x5_2*k7-2*x5_1*x6_2^2-x6_3^2*k8-x6_3
^2*x5_0), -x5_4-145773384848216679698907442704430528114381801739137435333369388\
6593576824395849378152817908810287885178690239325779748096314706857017793719367\
3841520482408311451155581757680604535072177803533041422906110135043782027503892\
9421/89924736250455549886888520474178405574739245895709447938341109480494030967\
6994709165471957387601114293986744404526970072303430535186548384542460769832340\
8731452434477986647582, 4*x4_3*x5_1^2+(18*x4_2*x5_2+(x6_4^2+5*x5_4)*x4_0+(4*
x6_3^2+16*x5_3)*x4_1-4*x4_3*k5+5*x5_4*k6+k6*x6_4^2+6*x6_2^2*x4_2+(4*x6_1^2+4*k7
)*x4_3+x4_4*(x6_0^2+k8+x5_0))*x5_1+12*x4_1*x5_2^2+((4*x6_3^2+10*x5_3)*x4_0+12*
x6_2^2*x4_1+10*x5_3*k6-6*x4_2*k5+4*x6_3^2*k6+(12*x6_1^2+6*k7)*x4_2+4*x4_3*(x6_0
^2+k8+x5_0))*x5_2+(6*x6_2^2*x5_3+(-x6_4^2-x5_4)*k5+(4*x6_1^2+k7)*x5_4+x5_5*(
x6_0^2+k8+x5_0))*x4_0+((12*x6_1^2-4*k5+4*k7)*x5_3-4*k5*x6_3^2+4*x5_4*(x6_0^2+k8
+x5_0))*x4_1+(6*x6_2^2*k6+6*(x6_0^2+k8+x5_0)*x4_2)*x5_3+(-6*x6_2^2*x4_2-4*x6_1^
2*x4_3-x4_4*(x6_0^2+k8+x5_0))*k5+4*k6*(x6_1^2+1/4*k7)*x5_4+x5_5*(x6_0^2+k8+x5_0
)*k6+k7*x4_4*x5_0, (k5+4*x4_1)*x4_3+(k6+x4_0)*x4_4+3*x4_2^2, (((2*x6_3^2+x5_3)*
x6_0^2+(6*x6_2^2+3*x5_2)*x6_1^2+3*x5_1*x6_2^2+x6_3^2*(k8+x5_0))*k10^3+(-3*x6_3^
2-x5_3)*x6_0^4+((-18*x6_2^2-6*x5_2)*x6_1^2-6*x5_1*x6_2^2-2*x6_3^2*(k8+x5_0))*
x6_0^2-6*(x6_1^4+x5_1*x6_1^2+x6_2^2*(k8+x5_0))*x6_1^2)*k9^3-k10^3*(-x6_4^2*x6_0
^2+(-4*x6_3^2-x5_3)*x6_1^2+x5_3*k7-3*x6_2^4-3*x6_2^2*x5_2-3*x5_1*x6_3^2-x6_4^2*
k8-x6_4^2*x5_0), -x5_5+60045108047596736930550532667505071388629407815174400666\
1973176792298719319609883824200840720004748013930910095508252415734404158361533\
4809241498450456518019824136997956943124977686255133836714652332365480820679060\
128154521001587644485245779020387855230600447975370839204001175778420247/478339\
9790476210499749647046465199268467375112542919483525014882026144670080230576107\
0073435879846686797952987117704737038519541256994865396518990757533605426573315\
699357458152237018302635753260657513667707627557996103710094, 5*x4_4*x5_1^2+(30
*x4_3*x5_2+(x6_5^2+6*x5_5)*x4_0+40*x4_2*x5_3-5*x4_4*k5+(5*x6_4^2+25*x5_4)*x4_1+
(x6_5^2+6*x5_5)*k6+10*x6_3^2*x4_2+10*x6_2^2*x4_3+x4_5*x5_0+(5*x6_1^2+5*k7)*x4_4
+x4_5*(x6_0^2+k8))*x5_1+30*x4_2*x5_2^2+((5*x6_4^2+15*x5_4)*x4_0+50*x4_1*x5_3-10
*x4_3*k5+20*x4_1*x6_3^2+(5*x6_4^2+15*x5_4)*k6+30*x6_2^2*x4_2+(20*x6_1^2+10*k7)*
x4_3+5*x4_4*(x6_0^2+k8+x5_0))*x5_2+(10*x5_3^2+10*x6_3^2*x5_3+(-x6_5^2-x5_5)*k5+
10*x6_2^2*x5_4+(5*x6_1^2+k7)*x5_5+x5_6*(x6_0^2+k8+x5_0))*x4_0+10*k6*x5_3^2+(-10
*x4_2*k5+30*x6_2^2*x4_1+10*x6_3^2*k6+(30*x6_1^2+10*k7)*x4_2+10*x4_3*(x6_0^2+k8+
x5_0))*x5_3+((-5*x6_4^2-5*x5_4)*x4_1-10*x6_3^2*x4_2-10*x6_2^2*x4_3-x4_5*x5_0-5*
x6_1^2*x4_4-x4_5*(x6_0^2+k8))*k5+((20*x6_1^2+5*k7)*x5_4+5*x5_5*(x6_0^2+k8+x5_0)
)*x4_1+(10*x6_2^2*x5_4+(5*x6_1^2+k7)*x5_5+x5_6*(x6_0^2+k8+x5_0))*k6+10*x5_4*(
x6_0^2+k8+x5_0)*x4_2+k7*x4_5*x5_0, (k5+5*x4_1)*x4_4+(k6+x4_0)*x4_5+10*x4_3*x4_2
, (((2*x6_4^2+x5_4)*x6_0^2+(8*x6_3^2+4*x5_3)*x6_1^2+6*x6_2^4+6*x6_2^2*x5_2+4*
x5_1*x6_3^2+x6_4^2*(k8+x5_0))*k10^3+(-3*x6_4^2-x5_4)*x6_0^4+((-24*x6_3^2-8*x5_3
)*x6_1^2-18*x6_2^4-12*x6_2^2*x5_2-8*x5_1*x6_3^2-2*x6_4^2*(k8+x5_0))*x6_0^2+(-36
*x6_2^2-12*x5_2)*x6_1^4+(-24*x5_1*x6_2^2-8*x6_3^2*(k8+x5_0))*x6_1^2-6*x6_2^4*(
k8+x5_0))*k9^3-(-x6_0^2*x6_5^2+(-5*x6_4^2-x5_4)*x6_1^2+(-10*x6_3^2-4*x5_3)*x6_2
^2+x5_4*k7-6*x6_3^2*x5_2-4*x5_1*x6_4^2-x6_5^2*k8-x5_0*x6_5^2)*k10^3, -x4_3+
11004980186706583706014770560649240581922655387319118837115447129789866546/
21433777676502927177285638737651377780087919301783471918464643, -x4_4+242767551\
7050467933027250812812823820650248073969849915393444157619931809996369372135936\
55689050951/2155697479688763314498607630192330306178338631183589374597774624813\
87104130186227516538, -x4_5+502761442426727446181538358455612124336472551712417\
172069718719532727315829667877739377865057754666861241402513942116262823/154863\
4287856131430248517178134240478176180306311414127855417943118756431988533222692\
91636765290525644993947722, -x5_6-838239078665866470149068845987775751036508445\
1365516699397385140522905139593110704680307712747014046401083396247640810365254\
2932837295912713072434127156793618672447823936049055996933511922916082870026498\
8131617985462684234478436824555331853191969465726615630264399795959599888655933\
4367965010270891371784421443743948455575033232853701403999507610224/97961385111\
4697896947570280892413530574702737089719158621027842521963181748365751603627883\
0395251529800774841498782313802603170620771751732859500052310527708170686582853\
3034177836662086382258622004419878927511398770936652469656532419808665941670538\
26386458690971138103111923, z_aux^2*(k6+x4_0)*(x6_0^2+k8+x5_0)*k10^3-1], [x5_6,
x6_5, x5_5, x4_5, x6_4, x5_4, x4_4, x6_3, x5_3, x4_3, x6_2, x5_2, x4_2, x6_1, 
x5_1, x4_1, x6_0, x5_0, x4_0, z_aux, w_aux, k10, k5, k6, k7, k8, k9], [x7_0], [
11302309961734-x4_0, k5*x4_0+k6*x4_1+x4_0*x4_1, 7003013305734-x5_0, -k5*k8*x4_0
-k5*x4_0*x5_0-k5*x4_0*x6_0+k6*k7*x5_0+k6*k8*x5_1+k6*x5_0*x5_1+k6*x5_1*x6_0+k7*
x4_0*x5_0+k8*x4_0*x5_1+x4_0*x5_0*x5_1+x4_0*x5_1*x6_0, -x4_1-\
7677307795354297882967669/847579664387, x4_1^2+x4_1*k5+(k6+x4_0)*x4_2, -x5_1+
32761656998424660448488936122758814669/7917532403392280545039859, (k6+x4_0)*
x5_1^2+((-k5+x6_1+k7)*x4_0+(k8+x5_0+x6_0)*x4_1+k6*(x6_1+k7))*x5_1+((k8+x5_0+
x6_0)*x5_2-k5*x6_1)*x4_0+((-k5+k7)*x5_0-k5*(x6_0+k8))*x4_1+k6*x5_2*(k8+x5_0+
x6_0), k10*k8*k9*x6_0+k10*k9*x5_0*x6_0+k10*k9*x6_0^2-k8*k9*x6_0^2-k9*x5_0*x6_0^
2-k9*x6_0^3-k10*k7*x5_0+k10*k8*x6_1+k10*x5_0*x6_1+k10*x6_0*x6_1, -x4_2+
1470110165065399577146988360680987462747762779243/
4262256924400020688263282926847660221, (k5+3*x4_1)*x4_2+(k6+x4_0)*x4_3, -x5_2-\
6995855048641672622146354630417004906013727233741530390934403582221752634446353\
6214308851894683991/
294812162849111140196627195495749255647394975458593346320772937796799419021, 2*
x4_1*x5_1^2+((3*k6+3*x4_0)*x5_2+x6_2*x4_0+(-2*k5+2*x6_1+2*k7)*x4_1+(k8+x5_0+
x6_0)*x4_2+x6_2*k6)*x5_1+((-k5+2*x6_1+k7)*x4_0+(2*x6_0+2*k8+2*x5_0)*x4_1+2*k6*(
x6_1+1/2*k7))*x5_2+(-k5*x6_2+x5_3*(k8+x5_0+x6_0))*x4_0-2*k5*x4_1*x6_1+((-x6_0-
k8-x5_0)*k5+k7*x5_0)*x4_2+x5_3*k6*(k8+x5_0+x6_0), (x6_1^2+((k8+x5_0+2*x6_0)*k9+
x5_1)*x6_1+k9*x5_1*x6_0+x6_2*x6_0-x5_1*k7+x6_2*(k8+x5_0))*k10-2*x6_0*k9*((k8+
x5_0+3/2*x6_0)*x6_1+1/2*x5_1*x6_0), -x5_3+2179601522794332290877595387882465959\
7535094705585442941548701454062142814347295978039368543510230502146838915986349\
202348004375958435592953343610619685286962426/109774367739287409240904003025872\
1411305316428398761664036455681575517165163270737398068396907678594177025606922\
3407252243699, 3*x4_2*x5_1^2+((4*x5_3+x6_3)*x4_0+9*x4_1*x5_2+4*x5_3*k6+3*x6_2*
x4_1-3*x4_2*k5+x6_3*k6+(3*x6_1+3*k7)*x4_2+x4_3*(k8+x5_0+x6_0))*x5_1+(3*x5_2^2+3
*x6_2*x5_2+(-k5+3*x6_1+k7)*x5_3-k5*x6_3+x5_4*(k8+x5_0+x6_0))*x4_0+3*k6*x5_2^2+(
(-3*k5+6*x6_1+3*k7)*x4_1+3*x6_2*k6+3*(k8+x5_0+x6_0)*x4_2)*x5_2+((3*x6_0+3*k8+3*
x5_0)*x4_1+3*k6*(x6_1+1/3*k7))*x5_3-3*k5*x4_1*x6_2+(-3*x6_1*x4_2-x4_3*(k8+x5_0+
x6_0))*k5+x5_4*(k8+x5_0+x6_0)*k6+k7*x4_3*x5_0, (((2*x6_2+x5_2)*x6_0+2*x6_1^2+2*
x5_1*x6_1+x6_2*(k8+x5_0))*k10+(-3*x6_2-x5_2)*x6_0^2+(-6*x6_1^2-4*x5_1*x6_1-2*
x6_2*(k8+x5_0))*x6_0-2*x6_1^2*(k8+x5_0))*k9-k10*(-x6_3*x6_0+(-3*x6_2-x5_2)*x6_1
+x5_2*k7-2*x5_1*x6_2-x6_3*k8-x6_3*x5_0), -x5_4-14577338484821667969890744270443\
0528114381801739137435333369388659357682439584937815281790881028788517869023932\
5779748096314706857017793719367384152048240831145115558175768060453507217780353\
30414229061101350437820275038929421/8992473625045554988688852047417840557473924\
5895709447938341109480494030967699470916547195738760111429398674440452697007230\
34305351865483845424607698323408731452434477986647582, 4*x4_3*x5_1^2+(18*x4_2*
x5_2+(5*x5_4+x6_4)*x4_0+(16*x5_3+4*x6_3)*x4_1-4*x4_3*k5+5*x5_4*k6+k6*x6_4+6*
x6_2*x4_2+(4*x6_1+4*k7)*x4_3+x4_4*(k8+x5_0+x6_0))*x5_1+12*x4_1*x5_2^2+((10*x5_3
+4*x6_3)*x4_0+12*x6_2*x4_1+10*x5_3*k6-6*x4_2*k5+4*x6_3*k6+(12*x6_1+6*k7)*x4_2+4
*x4_3*(k8+x5_0+x6_0))*x5_2+(6*x6_2*x5_3+(-x5_4-x6_4)*k5+(4*x6_1+k7)*x5_4+x5_5*(
k8+x5_0+x6_0))*x4_0+((-4*k5+12*x6_1+4*k7)*x5_3-4*k5*x6_3+4*x5_4*(k8+x5_0+x6_0))
*x4_1+(6*x6_2*k6+6*(k8+x5_0+x6_0)*x4_2)*x5_3+(-6*x6_2*x4_2-4*x6_1*x4_3-x4_4*(k8
+x5_0+x6_0))*k5+4*k6*(x6_1+1/4*k7)*x5_4+x5_5*(k8+x5_0+x6_0)*k6+k7*x4_4*x5_0, (
k5+4*x4_1)*x4_3+(k6+x4_0)*x4_4+3*x4_2^2, (((2*x6_3+x5_3)*x6_0+(6*x6_2+3*x5_2)*
x6_1+3*x5_1*x6_2+x6_3*(k8+x5_0))*k10+(-3*x6_3-x5_3)*x6_0^2+((-18*x6_2-6*x5_2)*
x6_1-6*x5_1*x6_2-2*x6_3*(k8+x5_0))*x6_0-6*(x6_1^2+x5_1*x6_1+x6_2*(k8+x5_0))*
x6_1)*k9-k10*(-x6_4*x6_0+(-4*x6_3-x5_3)*x6_1+x5_3*k7-3*x6_2^2-3*x6_2*x5_2-3*
x5_1*x6_3-x6_4*k8-x6_4*x5_0), -x5_5+6004510804759673693055053266750507138862940\
7815174400666197317679229871931960988382420084072000474801393091009550825241573\
4404158361533480924149845045651801982413699795694312497768625513383671465233236\
5480820679060128154521001587644485245779020387855230600447975370839204001175778\
420247/478339979047621049974964704646519926846737511254291948352501488202614467\
0080230576107007343587984668679795298711770473703851954125699486539651899075753\
3605426573315699357458152237018302635753260657513667707627557996103710094, 5*
x4_4*x5_1^2+(30*x4_3*x5_2+(6*x5_5+x6_5)*x4_0+40*x4_2*x5_3-5*x4_4*k5+(25*x5_4+5*
x6_4)*x4_1+(6*x5_5+x6_5)*k6+10*x6_3*x4_2+10*x6_2*x4_3+x4_5*x5_0+(5*x6_1+5*k7)*
x4_4+x4_5*(x6_0+k8))*x5_1+30*x4_2*x5_2^2+((15*x5_4+5*x6_4)*x4_0+50*x4_1*x5_3-10
*x4_3*k5+20*x4_1*x6_3+(15*x5_4+5*x6_4)*k6+30*x6_2*x4_2+(20*x6_1+10*k7)*x4_3+5*
x4_4*(k8+x5_0+x6_0))*x5_2+(10*x5_3^2+10*x6_3*x5_3+(-x5_5-x6_5)*k5+10*x6_2*x5_4+
(5*x6_1+k7)*x5_5+x5_6*(k8+x5_0+x6_0))*x4_0+10*k6*x5_3^2+(-10*x4_2*k5+30*x6_2*
x4_1+10*x6_3*k6+(30*x6_1+10*k7)*x4_2+10*x4_3*(k8+x5_0+x6_0))*x5_3+((-5*x5_4-5*
x6_4)*x4_1-10*x6_3*x4_2-10*x6_2*x4_3-x4_5*x5_0-5*x6_1*x4_4-x4_5*(x6_0+k8))*k5+(
(20*x6_1+5*k7)*x5_4+5*x5_5*(k8+x5_0+x6_0))*x4_1+(10*x6_2*x5_4+(5*x6_1+k7)*x5_5+
x5_6*(k8+x5_0+x6_0))*k6+10*x5_4*(k8+x5_0+x6_0)*x4_2+k7*x4_5*x5_0, (k5+5*x4_1)*
x4_4+(k6+x4_0)*x4_5+10*x4_3*x4_2, (((2*x6_4+x5_4)*x6_0+(8*x6_3+4*x5_3)*x6_1+6*
x6_2^2+6*x6_2*x5_2+4*x5_1*x6_3+x6_4*(k8+x5_0))*k10+(-3*x6_4-x5_4)*x6_0^2+((-24*
x6_3-8*x5_3)*x6_1-18*x6_2^2-12*x6_2*x5_2-8*x5_1*x6_3-2*x6_4*(k8+x5_0))*x6_0+(-\
36*x6_2-12*x5_2)*x6_1^2+(-24*x5_1*x6_2-8*x6_3*(k8+x5_0))*x6_1-6*x6_2^2*(k8+x5_0
))*k9-(-x6_0*x6_5+(-5*x6_4-x5_4)*x6_1+(-10*x6_3-4*x5_3)*x6_2+x5_4*k7-6*x5_2*
x6_3-4*x5_1*x6_4-x6_5*k8-x5_0*x6_5)*k10, -x4_3+
11004980186706583706014770560649240581922655387319118837115447129789866546/
21433777676502927177285638737651377780087919301783471918464643, -x4_4+242767551\
7050467933027250812812823820650248073969849915393444157619931809996369372135936\
55689050951/2155697479688763314498607630192330306178338631183589374597774624813\
87104130186227516538, -x4_5+502761442426727446181538358455612124336472551712417\
172069718719532727315829667877739377865057754666861241402513942116262823/154863\
4287856131430248517178134240478176180306311414127855417943118756431988533222692\
91636765290525644993947722, -x5_6-838239078665866470149068845987775751036508445\
1365516699397385140522905139593110704680307712747014046401083396247640810365254\
2932837295912713072434127156793618672447823936049055996933511922916082870026498\
8131617985462684234478436824555331853191969465726615630264399795959599888655933\
4367965010270891371784421443743948455575033232853701403999507610224/97961385111\
4697896947570280892413530574702737089719158621027842521963181748365751603627883\
0395251529800774841498782313802603170620771751732859500052310527708170686582853\
3034177836662086382258622004419878927511398770936652469656532419808665941670538\
26386458690971138103111923, z_aux*(k6+x4_0)*(k8+x5_0+x6_0)*k10-1]

SubsByDepth Usage (real, cpu, memory):	2.267,	2.382,	255053952


=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [x4(t), x5(t), x6(t), x7(t)]
Output variables:         [y1(t), y2(t)]
Input variables:          []
Parameters in equations:  [k10, k5, k6, k7, k8, k9]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [k10, k5, k6, k7, k8, k9, x4(0), x5(0), x6(0)]
Nonidentifiable parameter:  [x7(0)]

=======================================================
4. Randomizing the truncated system
=======================================================
Prep CPU Time (sub_transc=false):	 1.869
Prep Real Elapsed Time (sub_transc=false):	 1.709
memory used=168.97MiB, alloc change=0 bytes, cpu time=1.87s, real time=1.71s, gc time=446.04ms


GetPolySystem Usage (real, cpu, memory):	1.710,	1.870,	177174232

States for substitution:	[x5_ = 0, k7 = 1, x4_ = 0, x6_ = 1, k8 = 1, k10 = 2, k9 = 2, k5 = 1, k6 = 1]
NonID parameters:	[x7_0]
Substitutions:	[x5_ = 1, z_aux = 2, x4_ = 1, x6_ = 2, k10 = 3, k9 = 3]
memory used=205.04MiB, alloc change=0 bytes, cpu time=2.21s, real time=2.05s, gc time=446.04ms
all_subs, system_vars[1], system_vars[2], alg_indep, original_et_hat := {k10 =
k10^3, k9 = k9^3, x4_0 = x4_0, x4_1 = x4_1, x4_2 = x4_2, x4_3 = x4_3, x4_4 = 
x4_4, x4_5 = x4_5, x5_0 = x5_0, x5_1 = x5_1, x5_2 = x5_2, x5_3 = x5_3, x5_4 = 
x5_4, x5_5 = x5_5, x5_6 = x5_6, x6_0 = x6_0^2, x6_1 = x6_1^2, x6_2 = x6_2^2, 
x6_3 = x6_3^2, x6_4 = x6_4^2, x6_5 = x6_5^2, z_aux = z_aux^2}, [7480880075770-
x4_0, k5*x4_0+k6*x4_1+x4_0*x4_1, 6140270651061-x5_0, -k5*x4_0*x6_0^2+k6*x5_1*
x6_0^2+x4_0*x5_1*x6_0^2-k5*k8*x4_0-k5*x4_0*x5_0+k6*k7*x5_0+k6*k8*x5_1+k6*x5_0*
x5_1+k7*x4_0*x5_0+k8*x4_0*x5_1+x4_0*x5_0*x5_1, -x4_1-147864774365447512200875/
1258682806493, x4_1^2+x4_1*k5+(k6+x4_0)*x4_2, -x5_1-\
5280383053923822499109001990719542055/17671565588888506642112332, (k6+x4_0)*
x5_1^2+((x6_1^2-k5+k7)*x4_0+(x6_0^2+k8+x5_0)*x4_1+k6*(x6_1^2+k7))*x5_1+((x6_0^2
+k8+x5_0)*x5_2-k5*x6_1^2)*x4_0+((-k5+k7)*x5_0-k5*(x6_0^2+k8))*x4_1+k6*x5_2*(
x6_0^2+k8+x5_0), k10^3*k9^3*x6_0^4+k10^3*k8*k9^3*x6_0^2+k10^3*k9^3*x5_0*x6_0^2-
k9^3*x6_0^6-k8*k9^3*x6_0^4-k9^3*x5_0*x6_0^4+k10^3*x6_0^2*x6_1^2+k10^3*k8*x6_1^2
+k10^3*x5_0*x6_1^2-k10^3*k7*x5_0, -x4_2+
22280274793451385318564520110324333944495628125/
23929308321296990272129885868523661884, (k5+3*x4_1)*x4_2+(k6+x4_0)*x4_3, -x5_2+
4231617199142387944058577523633341383047577219066001570555166340795371628471793\
642835839734506205/
49893191816846352183218330580619081320215220340149325262750272459627638528, 2*
x4_1*x5_1^2+((3*k6+3*x4_0)*x5_2+x6_2^2*x4_0+(2*x6_1^2-2*k5+2*k7)*x4_1+(x6_0^2+
k8+x5_0)*x4_2+x6_2^2*k6)*x5_1+((2*x6_1^2-k5+k7)*x4_0+(2*x6_0^2+2*k8+2*x5_0)*
x4_1+2*k6*(x6_1^2+1/2*k7))*x5_2+(-k5*x6_2^2+x5_3*(x6_0^2+k8+x5_0))*x4_0-2*k5*
x4_1*x6_1^2+((-x6_0^2-k8-x5_0)*k5+k7*x5_0)*x4_2+x5_3*k6*(x6_0^2+k8+x5_0), (x6_1
^4+((2*x6_0^2+k8+x5_0)*k9^3+x5_1)*x6_1^2+k9^3*x6_0^2*x5_1+x6_2^2*x6_0^2-x5_1*k7
+x6_2^2*(k8+x5_0))*k10^3-2*x6_0^2*k9^3*((k8+x5_0+3/2*x6_0^2)*x6_1^2+1/2*x5_1*
x6_0^2), -x5_3+2654035335538905294117617802712225053360542866071076446297651101\
7213932699814591011604584673779390473475586819933259513909050927484680830145669\
967140442194715/234777405275838562287304281640069153122868872283710865817689323\
16671761848967601581768375067068561597304170140691168305152, 3*x4_2*x5_1^2+((
x6_3^2+4*x5_3)*x4_0+9*x4_1*x5_2+4*x5_3*k6+3*x6_2^2*x4_1-3*x4_2*k5+x6_3^2*k6+(3*
x6_1^2+3*k7)*x4_2+x4_3*(x6_0^2+k8+x5_0))*x5_1+(3*x5_2^2+3*x6_2^2*x5_2+(3*x6_1^2
-k5+k7)*x5_3-k5*x6_3^2+x5_4*(x6_0^2+k8+x5_0))*x4_0+3*k6*x5_2^2+((6*x6_1^2-3*k5+
3*k7)*x4_1+3*x6_2^2*k6+3*(x6_0^2+k8+x5_0)*x4_2)*x5_2+((3*x6_0^2+3*k8+3*x5_0)*
x4_1+3*k6*(x6_1^2+1/3*k7))*x5_3-3*k5*x4_1*x6_2^2+(-3*x6_1^2*x4_2-x4_3*(x6_0^2+
k8+x5_0))*k5+x5_4*(x6_0^2+k8+x5_0)*k6+k7*x4_3*x5_0, (((2*x6_2^2+x5_2)*x6_0^2+2*
x6_1^4+2*x5_1*x6_1^2+x6_2^2*(k8+x5_0))*k10^3+(-3*x6_2^2-x5_2)*x6_0^4+(-6*x6_1^4
-4*x5_1*x6_1^2-2*x6_2^2*(k8+x5_0))*x6_0^2-2*x6_1^4*(k8+x5_0))*k9^3-k10^3*(-x6_3
^2*x6_0^2+(-3*x6_2^2-x5_2)*x6_1^2+x5_2*k7-2*x5_1*x6_2^2-x6_3^2*k8-x6_3^2*x5_0),
-x5_4+4640410935473208872346686961629134897859710924236409280691647520766502163\
5905656211886658472868269218979110628795674895966526782129281395867921647731373\
7823880897118464840197015593891148634306007613957876602427301252415/22095371340\
6020371783216710469357018393357414664397637437352007844974429761909893068762061\
4294747425022249446277514348273627158089576773265447860737998916661174591658393\
6, 4*x4_3*x5_1^2+(18*x4_2*x5_2+(x6_4^2+5*x5_4)*x4_0+(4*x6_3^2+16*x5_3)*x4_1-4*
x4_3*k5+5*x5_4*k6+k6*x6_4^2+6*x6_2^2*x4_2+(4*x6_1^2+4*k7)*x4_3+x4_4*(x6_0^2+k8+
x5_0))*x5_1+12*x4_1*x5_2^2+((4*x6_3^2+10*x5_3)*x4_0+12*x6_2^2*x4_1+10*x5_3*k6-6
*x4_2*k5+4*x6_3^2*k6+(12*x6_1^2+6*k7)*x4_2+4*x4_3*(x6_0^2+k8+x5_0))*x5_2+(6*
x6_2^2*x5_3+(-x6_4^2-x5_4)*k5+(4*x6_1^2+k7)*x5_4+x5_5*(x6_0^2+k8+x5_0))*x4_0+((
12*x6_1^2-4*k5+4*k7)*x5_3-4*k5*x6_3^2+4*x5_4*(x6_0^2+k8+x5_0))*x4_1+(6*x6_2^2*
k6+6*(x6_0^2+k8+x5_0)*x4_2)*x5_3+(-6*x6_2^2*x4_2-4*x6_1^2*x4_3-x4_4*(x6_0^2+k8+
x5_0))*k5+4*k6*(x6_1^2+1/4*k7)*x5_4+x5_5*(x6_0^2+k8+x5_0)*k6+k7*x4_4*x5_0, (k5+
4*x4_1)*x4_3+(k6+x4_0)*x4_4+3*x4_2^2, (((2*x6_3^2+x5_3)*x6_0^2+(6*x6_2^2+3*x5_2
)*x6_1^2+3*x5_1*x6_2^2+x6_3^2*(k8+x5_0))*k10^3+(-3*x6_3^2-x5_3)*x6_0^4+((-18*
x6_2^2-6*x5_2)*x6_1^2-6*x5_1*x6_2^2-2*x6_3^2*(k8+x5_0))*x6_0^2-6*(x6_1^4+x5_1*
x6_1^2+x6_2^2*(k8+x5_0))*x6_1^2)*k9^3-k10^3*(-x6_4^2*x6_0^2+(-4*x6_3^2-x5_3)*
x6_1^2+x5_3*k7-3*x6_2^4-3*x6_2^2*x5_2-3*x5_1*x6_3^2-x6_4^2*k8-x6_4^2*x5_0), -
x5_5+34570354263508572519035370646481423351423542290718213559401542255358138349\
1339327162615043294369877544086138467134217480961577639900526935864188151764455\
5919886390328613715227159794134240512203674842251545186115945825254357036528791\
238814481207692684158157885789141054269076928795/668391301318792051111907863262\
5367106190400335260512205122352218392924611185257336440751262543575082845997066\
4216743069007664756338374596335776606754340327651085632871134884462823778848609\
98835830307259611775074566144, 5*x4_4*x5_1^2+(30*x4_3*x5_2+(x6_5^2+6*x5_5)*x4_0
+40*x4_2*x5_3-5*x4_4*k5+(5*x6_4^2+25*x5_4)*x4_1+(x6_5^2+6*x5_5)*k6+10*x6_3^2*
x4_2+10*x6_2^2*x4_3+x4_5*x5_0+(5*x6_1^2+5*k7)*x4_4+x4_5*(x6_0^2+k8))*x5_1+30*
x4_2*x5_2^2+((5*x6_4^2+15*x5_4)*x4_0+50*x4_1*x5_3-10*x4_3*k5+20*x4_1*x6_3^2+(5*
x6_4^2+15*x5_4)*k6+30*x6_2^2*x4_2+(20*x6_1^2+10*k7)*x4_3+5*x4_4*(x6_0^2+k8+x5_0
))*x5_2+(10*x5_3^2+10*x6_3^2*x5_3+(-x6_5^2-x5_5)*k5+10*x6_2^2*x5_4+(5*x6_1^2+k7
)*x5_5+x5_6*(x6_0^2+k8+x5_0))*x4_0+10*k6*x5_3^2+(-10*x4_2*k5+30*x6_2^2*x4_1+10*
x6_3^2*k6+(30*x6_1^2+10*k7)*x4_2+10*x4_3*(x6_0^2+k8+x5_0))*x5_3+((-5*x6_4^2-5*
x5_4)*x4_1-10*x6_3^2*x4_2-10*x6_2^2*x4_3-x4_5*x5_0-5*x6_1^2*x4_4-x4_5*(x6_0^2+
k8))*k5+((20*x6_1^2+5*k7)*x5_4+5*x5_5*(x6_0^2+k8+x5_0))*x4_1+(10*x6_2^2*x5_4+(5
*x6_1^2+k7)*x5_5+x5_6*(x6_0^2+k8+x5_0))*k6+10*x5_4*(x6_0^2+k8+x5_0)*x4_2+k7*
x4_5*x5_0, (k5+5*x4_1)*x4_4+(k6+x4_0)*x4_5+10*x4_3*x4_2, (((2*x6_4^2+x5_4)*x6_0
^2+(8*x6_3^2+4*x5_3)*x6_1^2+6*x6_2^4+6*x6_2^2*x5_2+4*x5_1*x6_3^2+x6_4^2*(k8+
x5_0))*k10^3+(-3*x6_4^2-x5_4)*x6_0^4+((-24*x6_3^2-8*x5_3)*x6_1^2-18*x6_2^4-12*
x6_2^2*x5_2-8*x5_1*x6_3^2-2*x6_4^2*(k8+x5_0))*x6_0^2+(-36*x6_2^2-12*x5_2)*x6_1^
4+(-24*x5_1*x6_2^2-8*x6_3^2*(k8+x5_0))*x6_1^2-6*x6_2^4*(k8+x5_0))*k9^3-(-x6_0^2
*x6_5^2+(-5*x6_4^2-x5_4)*x6_1^2+(-10*x6_3^2-4*x5_3)*x6_2^2+x5_4*k7-6*x6_3^2*
x5_2-4*x5_1*x6_4^2-x6_5^2*k8-x5_0*x6_5^2)*k10^3, -x4_3+
1077247402792410734354024860517528204916216095751118076102799055390625/
151643128775001103591021018423685595343606355610130508376753264, -x4_4-60289842\
7474781475221647092931070099469624747828196543769016372245765836978646335547832\
03125/9609821644617090706455685668618940204291294475217281934297470784138809333\
41646756343744, -x4_5-456767394297423789460590734202650864191970928252025406705\
46615422787425911812173323894085056066656171021430029296875/7829830990000141961\
0303768256999296394780085411782775510324855992837323624719950775379065377590124\
23020728031488, -x5_6+100234259596783125085393898896168892036657692908078748193\
5971534121292838714950142327973059300849335962520890945725180132589962501382830\
1357210007947615544504901430293609773220788593679853775428925074281420053187975\
8221470968024252394019746878512765774184100002291168003275659982750545154018458\
520146464653742366125296783529522053182018805545/629036426487280075003771718465\
1648532591405100222641108632767011524755220898392491093753607708775622382988542\
8631233970337426776829156827825413511485359689626358841635732610529666758102989\
25566539883721506121636671881402654765930029020704235701289136385027569876992,
z_aux^2*(k6+x4_0)*(x6_0^2+k8+x5_0)*k10^3-1], [x5_6, x6_5, x5_5, x4_5, x6_4, 
x5_4, x4_4, x6_3, x5_3, x4_3, x6_2, x5_2, x4_2, x6_1, x5_1, x4_1, x6_0, x5_0, 
x4_0, z_aux, w_aux, k10, k5, k6, k7, k8, k9], [], [7480880075770-x4_0, k5*x4_0+
k6*x4_1+x4_0*x4_1, 6140270651061-x5_0, -k5*k8*x4_0-k5*x4_0*x5_0-k5*x4_0*x6_0+k6
*k7*x5_0+k6*k8*x5_1+k6*x5_0*x5_1+k6*x5_1*x6_0+k7*x4_0*x5_0+k8*x4_0*x5_1+x4_0*
x5_0*x5_1+x4_0*x5_1*x6_0, -x4_1-147864774365447512200875/1258682806493, x4_1^2+
x4_1*k5+(k6+x4_0)*x4_2, -x5_1-5280383053923822499109001990719542055/
17671565588888506642112332, (k6+x4_0)*x5_1^2+((-k5+x6_1+k7)*x4_0+(k8+x5_0+x6_0)
*x4_1+k6*(x6_1+k7))*x5_1+((k8+x5_0+x6_0)*x5_2-k5*x6_1)*x4_0+((-k5+k7)*x5_0-k5*(
x6_0+k8))*x4_1+k6*x5_2*(k8+x5_0+x6_0), k10*k8*k9*x6_0+k10*k9*x5_0*x6_0+k10*k9*
x6_0^2-k8*k9*x6_0^2-k9*x5_0*x6_0^2-k9*x6_0^3-k10*k7*x5_0+k10*k8*x6_1+k10*x5_0*
x6_1+k10*x6_0*x6_1, -x4_2+22280274793451385318564520110324333944495628125/
23929308321296990272129885868523661884, (k5+3*x4_1)*x4_2+(k6+x4_0)*x4_3, -x5_2+
4231617199142387944058577523633341383047577219066001570555166340795371628471793\
642835839734506205/
49893191816846352183218330580619081320215220340149325262750272459627638528, 2*
x4_1*x5_1^2+((3*k6+3*x4_0)*x5_2+x6_2*x4_0+(-2*k5+2*x6_1+2*k7)*x4_1+(k8+x5_0+
x6_0)*x4_2+x6_2*k6)*x5_1+((-k5+2*x6_1+k7)*x4_0+(2*x6_0+2*k8+2*x5_0)*x4_1+2*k6*(
x6_1+1/2*k7))*x5_2+(-k5*x6_2+x5_3*(k8+x5_0+x6_0))*x4_0-2*k5*x4_1*x6_1+((-x6_0-
k8-x5_0)*k5+k7*x5_0)*x4_2+x5_3*k6*(k8+x5_0+x6_0), (x6_1^2+((k8+x5_0+2*x6_0)*k9+
x5_1)*x6_1+k9*x5_1*x6_0+x6_2*x6_0-x5_1*k7+x6_2*(k8+x5_0))*k10-2*x6_0*k9*((k8+
x5_0+3/2*x6_0)*x6_1+1/2*x5_1*x6_0), -x5_3+2654035335538905294117617802712225053\
3605428660710764462976511017213932699814591011604584673779390473475586819933259\
513909050927484680830145669967140442194715/234777405275838562287304281640069153\
1228688722837108658176893231667176184896760158176837506706856159730417014069116\
8305152, 3*x4_2*x5_1^2+((4*x5_3+x6_3)*x4_0+9*x4_1*x5_2+4*x5_3*k6+3*x6_2*x4_1-3*
x4_2*k5+x6_3*k6+(3*x6_1+3*k7)*x4_2+x4_3*(k8+x5_0+x6_0))*x5_1+(3*x5_2^2+3*x6_2*
x5_2+(-k5+3*x6_1+k7)*x5_3-k5*x6_3+x5_4*(k8+x5_0+x6_0))*x4_0+3*k6*x5_2^2+((-3*k5
+6*x6_1+3*k7)*x4_1+3*x6_2*k6+3*(k8+x5_0+x6_0)*x4_2)*x5_2+((3*x6_0+3*k8+3*x5_0)*
x4_1+3*k6*(x6_1+1/3*k7))*x5_3-3*k5*x4_1*x6_2+(-3*x6_1*x4_2-x4_3*(k8+x5_0+x6_0))
*k5+x5_4*(k8+x5_0+x6_0)*k6+k7*x4_3*x5_0, (((2*x6_2+x5_2)*x6_0+2*x6_1^2+2*x5_1*
x6_1+x6_2*(k8+x5_0))*k10+(-3*x6_2-x5_2)*x6_0^2+(-6*x6_1^2-4*x5_1*x6_1-2*x6_2*(
k8+x5_0))*x6_0-2*x6_1^2*(k8+x5_0))*k9-k10*(-x6_3*x6_0+(-3*x6_2-x5_2)*x6_1+x5_2*
k7-2*x5_1*x6_2-x6_3*k8-x6_3*x5_0), -x5_4+46404109354732088723466869616291348978\
5971092423640928069164752076650216359056562118866584728682692189791106287956748\
9596652678212928139586792164773137378238808971184648401970155938911486343060076\
13957876602427301252415/2209537134060203717832167104693570183933574146643976374\
3735200784497442976190989306876206142947474250222494462775143482736271580895767\
732654478607379989166611745916583936, 4*x4_3*x5_1^2+(18*x4_2*x5_2+(5*x5_4+x6_4)
*x4_0+(16*x5_3+4*x6_3)*x4_1-4*x4_3*k5+5*x5_4*k6+k6*x6_4+6*x6_2*x4_2+(4*x6_1+4*
k7)*x4_3+x4_4*(k8+x5_0+x6_0))*x5_1+12*x4_1*x5_2^2+((10*x5_3+4*x6_3)*x4_0+12*
x6_2*x4_1+10*x5_3*k6-6*x4_2*k5+4*x6_3*k6+(12*x6_1+6*k7)*x4_2+4*x4_3*(k8+x5_0+
x6_0))*x5_2+(6*x6_2*x5_3+(-x5_4-x6_4)*k5+(4*x6_1+k7)*x5_4+x5_5*(k8+x5_0+x6_0))*
x4_0+((-4*k5+12*x6_1+4*k7)*x5_3-4*k5*x6_3+4*x5_4*(k8+x5_0+x6_0))*x4_1+(6*x6_2*
k6+6*(k8+x5_0+x6_0)*x4_2)*x5_3+(-6*x6_2*x4_2-4*x6_1*x4_3-x4_4*(k8+x5_0+x6_0))*
k5+4*k6*(x6_1+1/4*k7)*x5_4+x5_5*(k8+x5_0+x6_0)*k6+k7*x4_4*x5_0, (k5+4*x4_1)*
x4_3+(k6+x4_0)*x4_4+3*x4_2^2, (((2*x6_3+x5_3)*x6_0+(6*x6_2+3*x5_2)*x6_1+3*x5_1*
x6_2+x6_3*(k8+x5_0))*k10+(-3*x6_3-x5_3)*x6_0^2+((-18*x6_2-6*x5_2)*x6_1-6*x5_1*
x6_2-2*x6_3*(k8+x5_0))*x6_0-6*(x6_1^2+x5_1*x6_1+x6_2*(k8+x5_0))*x6_1)*k9-k10*(-
x6_4*x6_0+(-4*x6_3-x5_3)*x6_1+x5_3*k7-3*x6_2^2-3*x6_2*x5_2-3*x5_1*x6_3-x6_4*k8-
x6_4*x5_0), -x5_5+3457035426350857251903537064648142335142354229071821355940154\
2255358138349133932716261504329436987754408613846713421748096157763990052693586\
4188151764455591988639032861371522715979413424051220367484225154518611594582525\
4357036528791238814481207692684158157885789141054269076928795/66839130131879205\
1111907863262536710619040033526051220512235221839292461118525733644075126254357\
5082845997066421674306900766475633837459633577660675434032765108563287113488446\
282377884860998835830307259611775074566144, 5*x4_4*x5_1^2+(30*x4_3*x5_2+(6*x5_5
+x6_5)*x4_0+40*x4_2*x5_3-5*x4_4*k5+(25*x5_4+5*x6_4)*x4_1+(6*x5_5+x6_5)*k6+10*
x6_3*x4_2+10*x6_2*x4_3+x4_5*x5_0+(5*x6_1+5*k7)*x4_4+x4_5*(x6_0+k8))*x5_1+30*
x4_2*x5_2^2+((15*x5_4+5*x6_4)*x4_0+50*x4_1*x5_3-10*x4_3*k5+20*x4_1*x6_3+(15*
x5_4+5*x6_4)*k6+30*x6_2*x4_2+(20*x6_1+10*k7)*x4_3+5*x4_4*(k8+x5_0+x6_0))*x5_2+(
10*x5_3^2+10*x6_3*x5_3+(-x5_5-x6_5)*k5+10*x6_2*x5_4+(5*x6_1+k7)*x5_5+x5_6*(k8+
x5_0+x6_0))*x4_0+10*k6*x5_3^2+(-10*x4_2*k5+30*x6_2*x4_1+10*x6_3*k6+(30*x6_1+10*
k7)*x4_2+10*x4_3*(k8+x5_0+x6_0))*x5_3+((-5*x5_4-5*x6_4)*x4_1-10*x6_3*x4_2-10*
x6_2*x4_3-x4_5*x5_0-5*x6_1*x4_4-x4_5*(x6_0+k8))*k5+((20*x6_1+5*k7)*x5_4+5*x5_5*
(k8+x5_0+x6_0))*x4_1+(10*x6_2*x5_4+(5*x6_1+k7)*x5_5+x5_6*(k8+x5_0+x6_0))*k6+10*
x5_4*(k8+x5_0+x6_0)*x4_2+k7*x4_5*x5_0, (k5+5*x4_1)*x4_4+(k6+x4_0)*x4_5+10*x4_3*
x4_2, (((2*x6_4+x5_4)*x6_0+(8*x6_3+4*x5_3)*x6_1+6*x6_2^2+6*x6_2*x5_2+4*x5_1*
x6_3+x6_4*(k8+x5_0))*k10+(-3*x6_4-x5_4)*x6_0^2+((-24*x6_3-8*x5_3)*x6_1-18*x6_2^
2-12*x6_2*x5_2-8*x5_1*x6_3-2*x6_4*(k8+x5_0))*x6_0+(-36*x6_2-12*x5_2)*x6_1^2+(-\
24*x5_1*x6_2-8*x6_3*(k8+x5_0))*x6_1-6*x6_2^2*(k8+x5_0))*k9-(-x6_0*x6_5+(-5*x6_4
-x5_4)*x6_1+(-10*x6_3-4*x5_3)*x6_2+x5_4*k7-6*x5_2*x6_3-4*x5_1*x6_4-x6_5*k8-x5_0
*x6_5)*k10, -x4_3+
1077247402792410734354024860517528204916216095751118076102799055390625/
151643128775001103591021018423685595343606355610130508376753264, -x4_4-60289842\
7474781475221647092931070099469624747828196543769016372245765836978646335547832\
03125/9609821644617090706455685668618940204291294475217281934297470784138809333\
41646756343744, -x4_5-456767394297423789460590734202650864191970928252025406705\
46615422787425911812173323894085056066656171021430029296875/7829830990000141961\
0303768256999296394780085411782775510324855992837323624719950775379065377590124\
23020728031488, -x5_6+100234259596783125085393898896168892036657692908078748193\
5971534121292838714950142327973059300849335962520890945725180132589962501382830\
1357210007947615544504901430293609773220788593679853775428925074281420053187975\
8221470968024252394019746878512765774184100002291168003275659982750545154018458\
520146464653742366125296783529522053182018805545/629036426487280075003771718465\
1648532591405100222641108632767011524755220898392491093753607708775622382988542\
8631233970337426776829156827825413511485359689626358841635732610529666758102989\
25566539883721506121636671881402654765930029020704235701289136385027569876992,
z_aux*(k6+x4_0)*(k8+x5_0+x6_0)*k10-1]

SubsByDepth Usage (real, cpu, memory):	2.046,	2.206,	214995088

memory used=454.5MB, alloc=112.3MB, time=4.81
