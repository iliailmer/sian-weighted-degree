    |\^/|     Maple 2021 (X86 64 LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2021
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
> kernelopts(printbytes=false, assertlevel=1):
> interface(echo=0, prettyprint=0):
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:324|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:490|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:324|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:490|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:324|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:490|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:324|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:490|
Warning, (in WriteScripts) `weights` is implicitly declared local
|imports/create_substitutions.mpl:108|
Warning, (in WriteScripts) `max_degree` is implicitly declared local
|imports/create_substitutions.mpl:109|
Warning, (in WriteScripts) `new_weights` is implicitly declared local
|imports/create_substitutions.mpl:110|
Warning, (in WriteScripts) `each` is implicitly declared local
|imports/create_substitutions.mpl:110|
sigma := [diff(E(t),t) = -alphaEIs*E(t)+betaIa*Ia(t)*S(t)*Ninv+Is(t)*S(t)*Ninv*
betaIs+betaT*S(t)*Ninv*T(t)+S(t)*Ninv*betaH*H(t)-E(t)*alphaEIa, diff(H(t),t) =
-alphaHT*H(t)+Ia(t)*xi+Is(t)*alphaIsH-alphaHRd*H(t), diff(Is(t),t) = alphaEIs*E
(t)+Ia(t)*alphaIaIs-Is(t)*alphaIsT-Is(t)*alphaIsD-Is(t)*alphaIsH-Is(t)*
alphaIsRu, diff(D(t),t) = Is(t)*alphaIsD+T(t)*alphaTD, diff(S(t),t) = -betaIa*
Ia(t)*S(t)*Ninv-Is(t)*S(t)*Ninv*betaIs-betaT*S(t)*Ninv*T(t)-S(t)*Ninv*betaH*H(t
), diff(Ia(t),t) = -Ia(t)*alphaIaRu-Ia(t)*xi-Ia(t)*alphaIaIs+E(t)*alphaEIa, 
diff(Rd(t),t) = alphaTRd*T(t)+alphaHRd*H(t), diff(T(t),t) = alphaHT*H(t)+Is(t)*
alphaIsT-alphaTRd*T(t)-T(t)*alphaTD, y4(t) = D(t), y2(t) = T(t), y3(t) = Rd(t),
y5(t) = Ninv, y1(t) = H(t)]

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [E(t), H(t), Is(t), D(t), S(t), Ia(t), Rd(t), T(t)]
Output variables:         [y4(t), y2(t), y3(t), y5(t), y1(t)]
Input variables:          []
Parameters in equations:  [Ninv, alphaHT, alphaTD, betaH, betaIa, betaIs, betaT, xi, alphaEIa, alphaEIs, alphaHRd, alphaIaIs, alphaIaRu, alphaIsD, alphaIsH, alphaIsRu, alphaIsT, alphaTRd]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [Ninv, alphaHT, alphaTD, betaH, betaT, alphaHRd, alphaTRd, H(0), D(0), Rd(0), T(0)]
Nonidentifiable parameter:  [E(0), Ia(0), Is(0), S(0), betaIa, betaIs, xi, alphaEIa, alphaEIs, alphaIaIs, alphaIaRu, alphaIsD, alphaIsH, alphaIsRu, alphaIsT]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters {E(0), Ia(0)}
Number of possible combinations 1275
Collection [E_0, E_4] is not transcendence basis
Collection [E_0, S_4] is not transcendence basis
Collection [E_0, S_7] is not transcendence basis
Collection [E_2, E_1] is not transcendence basis
Collection [E_2, E_7] is not transcendence basis
Collection [E_2, S_3] is not transcendence basis
Collection [E_3, E_9] is not transcendence basis
Collection [E_3, S_4] is not transcendence basis
Collection [E_3, S_7] is not transcendence basis
Collection [E_4, E_8] is not transcendence basis
Collection [E_4, S_6] is not transcendence basis
Collection [E_5, E_3] is not transcendence basis
Collection [E_6, E_3] is not transcendence basis
Collection [E_7, E_1] is not transcendence basis
Collection [E_7, E_9] is not transcendence basis
Collection [E_7, S_3] is not transcendence basis
Collection [E_8, E_4] is not transcendence basis
Collection [E_8, E_7] is not transcendence basis
Collection [E_8, S_1] is not transcendence basis
Collection [E_9, S_1] is not transcendence basis
Collection [Ia_0, Ia_9] is not transcendence basis
Collection [Ia_0, betaIa] is not transcendence basis
Collection [Ia_1, Ia_4] is not transcendence basis
Collection [Ia_3, Ia_0] is not transcendence basis
Collection [Ia_6, Ia_1] is not transcendence basis
Collection [Ia_7, Ia_9] is not transcendence basis
Collection [Ia_9, xi] is not transcendence basis
Collection [Is_1, Is_3] is not transcendence basis
Collection [Is_1, betaIs] is not transcendence basis
Collection [Is_1, alphaIsRu] is not transcendence basis
Collection [Is_10, Is_3] is not transcendence basis
Collection [Is_3, Is_4] is not transcendence basis
Collection [Is_3, alphaIsD] is not transcendence basis
Collection [Is_4, alphaIsH] is not transcendence basis
Collection [Is_5, Is_8] is not transcendence basis
Collection [Is_7, betaIs] is not transcendence basis
Collection [Is_7, alphaIsH] is not transcendence basis
Collection [Is_8, Is_2] is not transcendence basis
Collection [Is_8, Is_7] is not transcendence basis
Collection [Is_8, alphaIsH] is not transcendence basis
Collection [Is_8, alphaIsT] is not transcendence basis
Collection [Is_9, Is_10] is not transcendence basis
Collection [S_1, E_1] is not transcendence basis
Collection [S_2, S_8] is not transcendence basis
Collection [S_3, S_8] is not transcendence basis
Collection [S_4, S_3] is not transcendence basis
Collection [S_5, S_3] is not transcendence basis
Collection [S_6, S_0] is not transcendence basis
Collection [S_7, S_0] is not transcendence basis
Collection [S_8, E_0] is not transcendence basis
Collection [betaIa, Ia_1] is not transcendence basis
Collection [betaIa, xi] is not transcendence basis
Collection [xi, Ia_2] is not transcendence basis
Collection [xi, betaIa] is not transcendence basis
Collection [alphaIsD, alphaIsRu] is not transcendence basis
Collection [alphaIsH, Is_5] is not transcendence basis
Collection [alphaIsH, Is_9] is not transcendence basis
Collection [alphaIsH, alphaIsD] is not transcendence basis
Collection [alphaIsRu, Is_1] is not transcendence basis
Collection [alphaIsRu, betaIs] is not transcendence basis
Collection [alphaIsT, Is_3] is not transcendence basis
Picked the best choice [S_4, betaIs] based on heuristic:
Algebraically independent parameters among nonidentifiable: {betaIs}
Algebraically independent parameters among derivatives: {S_4}

=== Input info ===
State variables:          [betaIs(t), E(t), H(t), Is(t), D(t), S(t), Ia(t), Rd(t), T(t)]
Output variables:         [y4(t), y2(t), y3(t), y5(t), y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [Ninv, alphaHT, alphaTD, betaH, betaIa, betaT, xi, alphaEIa, alphaEIs, alphaHRd, alphaIaIs, alphaIaRu, alphaIsD, alphaIsH, alphaIsRu, alphaIsT, alphaTRd]
===================


=======================================================
4. Randomizing the truncated system
=======================================================
States for substitution:	[S_ = 3, alphaTRd = 1, alphaIaIs = 2, alphaIaRu = 2, Ia_ = 1, betaIa = 3, betaT = 3, alphaTD = 1, alphaEIs = 2, alphaHT = 1, xi = 1, alphaIsD = 1, alphaHRd = 1, Ninv = 0, E_ = 2, betaH = 3, T_ = 0, betaIs_ = 0, Rd_ = 0, alphaIsRu = 2, H_ = 0, D_ = 0, alphaIsH = 1, alphaEIa = 2, alphaIsT = 1, Is_ = 1]
NonID parameters:	[E_0, Ia_0, Is_0, S_0, betaIa, betaIs, xi, alphaEIa, alphaEIs, alphaIaIs, alphaIaRu, alphaIsD, alphaIsH, alphaIsRu, alphaIsT]
Substitutions:	[S_ = 4, z_aux = 3, Ia_ = 2, betaT = 4, E_ = 3, betaH = 4, T_ = 1, betaIs_ = 1, H_ = 1, Is_ = 2]

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [E(t), H(t), Is(t), D(t), S(t), Ia(t), Rd(t), T(t)]
Output variables:         [y4(t), y2(t), y3(t), y5(t), y1(t)]
Input variables:          []
Parameters in equations:  [Ninv, alphaHT, alphaTD, betaH, betaIa, betaIs, betaT, xi, alphaEIa, alphaEIs, alphaHRd, alphaIaIs, alphaIaRu, alphaIsD, alphaIsH, alphaIsRu, alphaIsT, alphaTRd]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [Ninv, alphaHT, alphaTD, betaH, betaT, alphaHRd, alphaTRd, H(0), D(0), Rd(0), T(0)]
Nonidentifiable parameter:  [E(0), Ia(0), Is(0), S(0), betaIa, betaIs, xi, alphaEIa, alphaEIs, alphaIaIs, alphaIaRu, alphaIsD, alphaIsH, alphaIsRu, alphaIsT]

=======================================================
4. Randomizing the truncated system
=======================================================
States for substitution:	[S_ = 3, alphaTRd = 1, alphaIaIs = 2, alphaIaRu = 2, Ia_ = 1, betaIa = 3, betaT = 3, alphaTD = 1, betaIs = 3, alphaEIs = 2, alphaHT = 1, xi = 1, alphaIsD = 1, alphaHRd = 1, Ninv = 0, E_ = 2, betaH = 3, T_ = 0, Rd_ = 0, alphaIsRu = 2, H_ = 0, D_ = 0, alphaIsH = 1, alphaEIa = 2, alphaIsT = 1, Is_ = 1]
NonID parameters:	[E_0, Ia_0, Is_0, S_0, betaIa, betaIs, xi, alphaEIa, alphaEIs, alphaIaIs, alphaIaRu, alphaIsD, alphaIsH, alphaIsRu, alphaIsT]
Substitutions:	[S_ = 4, z_aux = 3, Ia_ = 2, betaT = 4, E_ = 3, betaH = 4, T_ = 1, H_ = 1, Is_ = 2]
memory used=27957.1MB, alloc=211.8MB, time=274.96
