    |\^/|     Maple 2021 (X86 64 LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2021
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
> kernelopts(printbytes=false, assertlevel=1):
> interface(echo=0, prettyprint=0):
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in SubsByDepth) `out` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `mem` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `cpu_time` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `real_time` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in WriteScripts) `weights` is implicitly declared local
|imports/create_substitutions.mpl:111|
Warning, (in WriteScripts) `max_degree` is implicitly declared local
|imports/create_substitutions.mpl:112|
Warning, (in WriteScripts) `new_weights` is implicitly declared local
|imports/create_substitutions.mpl:113|
Warning, (in WriteScripts) `each` is implicitly declared local
|imports/create_substitutions.mpl:113|

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [x1(t), x2(t), x3(t), x4(t)]
Output variables:         [y1(t), y2(t)]
Input variables:          []
Parameters in equations:  [beta, c, d, k1, k2, mu1, mu2, q1, q2, s]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [beta, c, d, mu2, s, x1(0), x4(0)]
Nonidentifiable parameter:  [k1, k2, mu1, q1, q2, x2(0), x3(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters {k1, k2}
Number of possible combinations 190
Collection [k1, mu1] is not transcendence basis
Collection [k2, q2] is not transcendence basis
Collection [k2, x3_0] is not transcendence basis
Collection [k2, x3_1] is not transcendence basis
Collection [k2, x3_2] is not transcendence basis
Collection [k2, x3_3] is not transcendence basis
Collection [k2, x3_4] is not transcendence basis
Collection [k2, x3_5] is not transcendence basis
Collection [k2, x3_6] is not transcendence basis
Collection [k2, x3_7] is not transcendence basis
Collection [q1, x2_0] is not transcendence basis
Collection [q1, x2_1] is not transcendence basis
Collection [q1, x2_2] is not transcendence basis
Collection [q1, x2_3] is not transcendence basis
Collection [q1, x2_4] is not transcendence basis
Collection [q1, x2_5] is not transcendence basis
Collection [q1, x2_6] is not transcendence basis
Collection [q2, x3_0] is not transcendence basis
Collection [q2, x3_1] is not transcendence basis
Collection [q2, x3_2] is not transcendence basis
Collection [q2, x3_3] is not transcendence basis
Collection [q2, x3_4] is not transcendence basis
Collection [q2, x3_5] is not transcendence basis
Collection [q2, x3_6] is not transcendence basis
Collection [q2, x3_7] is not transcendence basis
Collection [x2_0, x2_1] is not transcendence basis
Collection [x2_0, x2_2] is not transcendence basis
Collection [x2_0, x2_3] is not transcendence basis
Collection [x2_0, x2_4] is not transcendence basis
Collection [x2_0, x2_5] is not transcendence basis
Collection [x2_0, x2_6] is not transcendence basis
Collection [x2_1, x2_2] is not transcendence basis
Collection [x2_1, x2_3] is not transcendence basis
Collection [x2_1, x2_4] is not transcendence basis
Collection [x2_1, x2_5] is not transcendence basis
Collection [x2_1, x2_6] is not transcendence basis
Collection [x2_2, x2_3] is not transcendence basis
Collection [x2_2, x2_4] is not transcendence basis
Collection [x2_2, x2_5] is not transcendence basis
Collection [x2_2, x2_6] is not transcendence basis
Collection [x2_3, x2_4] is not transcendence basis
Collection [x2_3, x2_5] is not transcendence basis
Collection [x2_3, x2_6] is not transcendence basis
Collection [x2_4, x2_5] is not transcendence basis
Collection [x2_4, x2_6] is not transcendence basis
Collection [x2_5, x2_6] is not transcendence basis
Collection [x3_0, x3_1] is not transcendence basis
Collection [x3_0, x3_2] is not transcendence basis
Collection [x3_0, x3_3] is not transcendence basis
Collection [x3_0, x3_4] is not transcendence basis
Collection [x3_0, x3_5] is not transcendence basis
Collection [x3_0, x3_6] is not transcendence basis
Collection [x3_0, x3_7] is not transcendence basis
Collection [x3_1, x3_2] is not transcendence basis
Collection [x3_1, x3_3] is not transcendence basis
Collection [x3_1, x3_4] is not transcendence basis
Collection [x3_1, x3_5] is not transcendence basis
Collection [x3_1, x3_6] is not transcendence basis
Collection [x3_1, x3_7] is not transcendence basis
Collection [x3_2, x3_3] is not transcendence basis
Collection [x3_2, x3_4] is not transcendence basis
Collection [x3_2, x3_5] is not transcendence basis
Collection [x3_2, x3_6] is not transcendence basis
Collection [x3_2, x3_7] is not transcendence basis
Collection [x3_3, x3_4] is not transcendence basis
Collection [x3_3, x3_5] is not transcendence basis
Collection [x3_3, x3_6] is not transcendence basis
Collection [x3_3, x3_7] is not transcendence basis
Collection [x3_4, x3_5] is not transcendence basis
Collection [x3_4, x3_6] is not transcendence basis
Collection [x3_4, x3_7] is not transcendence basis
Collection [x3_5, x3_6] is not transcendence basis
Collection [x3_5, x3_7] is not transcendence basis
Collection [x3_6, x3_7] is not transcendence basis
Picked the best choice [q1, q2] based on heuristic:

=======================================================
4. Randomizing the truncated system
=======================================================
Prep CPU Time (sub_transc=true):	 15.577
Prep Real Elapsed Time (sub_transc=true):	 14.765
memory used=1.53GiB, alloc change=79.72MiB, cpu time=15.60s, real time=14.78s, gc time=1.85s


GetPolySystem Usage (real, cpu, memory):	14.784,	15.596,	1641481064

States for substitution:	[q2 = 2, d = 1, s = 1, mu2 = 2, c = 1, q1 = 3, x2_ = 2, x1_ = 0, x4_ = 0, x3_ = 1, k1 = 2, k2 = 1, mu1 = 3, beta = 1]
NonID parameters:	[k1, k2, mu1, q1, q2, x2_0, x3_0]
Substitutions:	[x2_ = 3, z_aux = 3, x1_ = 1, x4_ = 1, x3_ = 2]
memory used=1.53GiB, alloc change=79.72MiB, cpu time=15.66s, real time=14.84s, gc time=1.85s
all_subs, system_vars[1], system_vars[2], alg_indep, original_et_hat := {x1_0 =
x1_0, x1_1 = x1_1, x1_2 = x1_2, x1_3 = x1_3, x1_4 = x1_4, x1_5 = x1_5, x1_6 = 
x1_6, x2_0 = x2_0^3, x2_1 = x2_1^3, x2_2 = x2_2^3, x2_3 = x2_3^3, x2_4 = x2_4^3
, x2_5 = x2_5^3, x2_6 = x2_6^3, x3_0 = x3_0^2, x3_1 = x3_1^2, x3_2 = x3_2^2, 
x3_3 = x3_3^2, x3_4 = x3_4^2, x3_5 = x3_5^2, x3_6 = x3_6^2, x3_7 = x3_7^2, x4_0
= x4_0, x4_1 = x4_1, x4_2 = x4_2, x4_3 = x4_3, x4_4 = x4_4, x4_5 = x4_5, x4_6 =
x4_6, x4_7 = x4_7, x4_8 = x4_8, z_aux = z_aux^3}, [4161981104699732189-x1_0, 
beta*x1_0*x4_0+d*x1_0-s+x1_1, 720595365518530223-x4_0, -k2*x3_0^2+c*x4_0+x4_1,
-x1_1-14166617939597538407795661068020079063728134352067350506, (beta*x4_0+d)*
x1_1+x1_2+beta*x1_0*x4_1, -x4_1+4570485872155361241776728065410648033, -k2*x3_1
^2+c*x4_1+x4_2, -k1*x2_0^3-3047904756486615073*beta*x1_0*x4_0+mu2*x3_0^2+x3_1^2
, -x1_2+48220561025590212598039075227453430295137539496755135465566770680106185\
973953090034891843035, (x1_0*x4_2+2*x1_1*x4_1+x1_2*x4_0)*beta+d*x1_2+x1_3, -
x4_2+42701353272825106304590356886131605070452831596036552944386370831542062929\
65897070898125938, -k2*x3_2^2+c*x4_2+x4_3, -3047904756486615073*(x1_0*x4_1+x1_1
*x4_0)*beta-x2_1^3*k1+mu2*x3_1^2+x3_2^2, k1*x2_0^3+mu1*x2_0^3-\
3419475493552295859*beta*x1_0*x4_0+x2_1^3, -x1_3-248083078020527367253963859392\
2809682673957137919247847308105567321098852395857743982754146779337718486468395\
97992779066038254007, (x1_0*x4_3+3*x1_1*x4_2+3*x1_2*x4_1+x1_3*x4_0)*beta+d*x1_3
+x1_4, -x4_3-145347550145482796384911525172525045663180074382051480298591335225\
78076958864917662821319000685519595406545301598304402171273102, -k2*x3_3^2+c*
x4_3+x4_4, -3047904756486615073*(x1_0*x4_2+2*x1_1*x4_1+x1_2*x4_0)*beta-x2_2^3*
k1+mu2*x3_2^2+x3_3^2, -3419475493552295859*(x1_0*x4_1+x1_1*x4_0)*beta+(k1+mu1)*
x2_1^3+x2_2^3, -x4_4+7477778535944143876499290638132987859193228774848164469063\
8285527837480908336343403823349796422133996938732401048866023324396671218550452\
542004657815275754326014878, -k2*x3_4^2+c*x4_4+x4_5, -3047904756486615073*(x1_0
*x4_3+3*x1_1*x4_2+3*x1_2*x4_1+x1_3*x4_0)*beta-x2_3^3*k1+mu2*x3_3^2+x3_4^2, -\
3419475493552295859*(x1_0*x4_2+2*x1_1*x4_1+x1_2*x4_0)*beta+(k1+mu1)*x2_2^3+x2_3
^3, -x4_5-599052554631419388277767979139131481452251545186738645243048529154281\
9791663556595023250374512234167624655584259743921277779898176442440834876557068\
84678275254872517175758359899120217566331296390649692, -k2*x3_5^2+c*x4_5+x4_6,
-3047904756486615073*(x1_0*x4_4+4*x1_1*x4_3+6*x1_2*x4_2+4*x1_3*x4_1+x1_4*x4_0)*
beta-x2_4^3*k1+mu2*x3_4^2+x3_5^2, -3419475493552295859*(x1_0*x4_3+3*x1_1*x4_2+3
*x1_2*x4_1+x1_3*x4_0)*beta+(k1+mu1)*x2_3^3+x2_4^3, -x4_6+5413916104633829969025\
4484311255205961982265355297032050853135673060858686896826502061136033875764889\
0789222813893299143346390212141581226626370554681616716877172330475069953632916\
0704255915937337998201110045404982122895033086229532713268, -k2*x3_6^2+c*x4_6+
x4_7, -3047904756486615073*(x1_0*x4_5+5*x1_1*x4_4+10*x1_2*x4_3+10*x1_3*x4_2+5*
x1_4*x4_1+x1_5*x4_0)*beta-x2_5^3*k1+mu2*x3_5^2+x3_6^2, (x1_0*x4_4+4*x1_1*x4_3+6
*x1_2*x4_2+4*x1_3*x4_1+x1_4*x4_0)*beta+d*x1_4+x1_5, -3419475493552295859*(x1_0*
x4_4+4*x1_1*x4_3+6*x1_2*x4_2+4*x1_3*x4_1+x1_4*x4_0)*beta+(k1+mu1)*x2_4^3+x2_5^3
, -x4_7-54581493747502435381313979506606132451720487433391906317779544331976394\
6032623122158973650158406342786802864925002505879465888346575076832466466039585\
6490957306226119504368627798622481492507289816105476809540728276297660477434190\
2136973489871899021332262873337647138315492812, -k2*x3_7^2+c*x4_7+x4_8, -\
18287428538919690438*(x1_5*x4_1+1/6*x1_6*x4_0+5/2*x4_2*x1_4+10/3*x4_3*x1_3+5/2*
x4_4*x1_2+x4_5*x1_1+1/6*x4_6*x1_0)*beta-x2_6^3*k1+mu2*x3_6^2+x3_7^2, (x1_0*x4_5
+5*x1_1*x4_4+10*x1_2*x4_3+10*x1_3*x4_2+5*x1_4*x4_1+x1_5*x4_0)*beta+d*x1_5+x1_6,
-3419475493552295859*(x1_0*x4_5+5*x1_1*x4_4+10*x1_2*x4_3+10*x1_3*x4_2+5*x1_4*
x4_1+x1_5*x4_0)*beta+(k1+mu1)*x2_5^3+x2_6^3, -x1_4+1987419137042663874427636532\
0673612831489521621343539322450589471676417074956819965015724436781842638191191\
73168649789291494440560438986869461494235778408287762906312, -x1_5-179612295941\
4288398280128154653083498800197052232720492019433560074271864487244697161342498\
0375945967314129185733716739221420502990256057038467547727536886075044084369889\
980252082140451827639770697304010, -x1_6+18107978066949959062824113613975499759\
4459799189568393677873330846016827039876112287700391091640790226070456595880329\
8657592303695711519069692917293631718366757719934476465477436258905744513043797\
44997488407480139493090284129430508921182966, -x4_8+651303733869595070550376674\
6099818281523146718855073849139205080831679344938757254741559063578027801066435\
6450792001247280787666659919160061868441206328360410716838473065748400453884847\
6889849016150151743677666903781280936987226515314105822196940311525833174887604\
175112422365717934622205401623381970636377623648, z_aux^3-1], [x4_8, x4_7, x3_7
, x4_6, x3_6, x2_6, x1_6, x4_5, x3_5, x2_5, x1_5, x4_4, x3_4, x2_4, x1_4, x4_3,
x3_3, x2_3, x1_3, x4_2, x3_2, x2_2, x1_2, x4_1, x3_1, x2_1, x1_1, x4_0, x3_0, 
x2_0, x1_0, z_aux, w_aux, beta, c, d, k1, k2, mu1, mu2, q1, q2, s], [q1, q2], [
4161981104699732189-x1_0, beta*x1_0*x4_0+d*x1_0-s+x1_1, 720595365518530223-x4_0
, c*x4_0-k2*x3_0+x4_1, -x1_1-\
14166617939597538407795661068020079063728134352067350506, (beta*x4_0+d)*x1_1+
x1_2+beta*x1_0*x4_1, -x4_1+4570485872155361241776728065410648033, c*x4_1-k2*
x3_1+x4_2, -3047904756486615073*beta*x1_0*x4_0-k1*x2_0+mu2*x3_0+x3_1, -x1_2+482\
2056102559021259803907522745343029513753949675513546556677068010618597395309003\
4891843035, (x1_0*x4_2+2*x1_1*x4_1+x1_2*x4_0)*beta+d*x1_2+x1_3, -x4_2+427013532\
7282510630459035688613160507045283159603655294438637083154206292965897070898125\
938, c*x4_2-k2*x3_2+x4_3, -3047904756486615073*(x1_0*x4_1+x1_1*x4_0)*beta-x2_1*
k1+mu2*x3_1+x3_2, -3419475493552295859*beta*x1_0*x4_0+k1*x2_0+mu1*x2_0+x2_1, -
x1_3-24808307802052736725396385939228096826739571379192478473081055673210988523\
9585774398275414677933771848646839597992779066038254007, (x1_0*x4_3+3*x1_1*x4_2
+3*x1_2*x4_1+x1_3*x4_0)*beta+d*x1_3+x1_4, -x4_3-1453475501454827963849115251725\
2504566318007438205148029859133522578076958864917662821319000685519595406545301\
598304402171273102, c*x4_3-k2*x3_3+x4_4, -3047904756486615073*(x1_0*x4_2+2*x1_1
*x4_1+x1_2*x4_0)*beta-x2_2*k1+mu2*x3_2+x3_3, -3419475493552295859*(x1_0*x4_1+
x1_1*x4_0)*beta+(k1+mu1)*x2_1+x2_2, -x4_4+7477778535944143876499290638132987859\
1932287748481644690638285527837480908336343403823349796422133996938732401048866\
023324396671218550452542004657815275754326014878, c*x4_4-k2*x3_4+x4_5, -\
3047904756486615073*(x1_0*x4_3+3*x1_1*x4_2+3*x1_2*x4_1+x1_3*x4_0)*beta-x2_3*k1+
mu2*x3_3+x3_4, -3419475493552295859*(x1_0*x4_2+2*x1_1*x4_1+x1_2*x4_0)*beta+(k1+
mu1)*x2_2+x2_3, -x4_5-599052554631419388277767979139131481452251545186738645243\
0485291542819791663556595023250374512234167624655584259743921277779898176442440\
83487655706884678275254872517175758359899120217566331296390649692, c*x4_5-k2*
x3_5+x4_6, -3047904756486615073*(x1_0*x4_4+4*x1_1*x4_3+6*x1_2*x4_2+4*x1_3*x4_1+
x1_4*x4_0)*beta-x2_4*k1+mu2*x3_4+x3_5, -3419475493552295859*(x1_0*x4_3+3*x1_1*
x4_2+3*x1_2*x4_1+x1_3*x4_0)*beta+(k1+mu1)*x2_3+x2_4, -x4_6+54139161046338299690\
2544843112552059619822653552970320508531356730608586868968265020611360338757648\
8907892228138932991433463902121415812266263705546816167168771723304750699536329\
160704255915937337998201110045404982122895033086229532713268, c*x4_6-k2*x3_6+
x4_7, -3047904756486615073*(x1_0*x4_5+5*x1_1*x4_4+10*x1_2*x4_3+10*x1_3*x4_2+5*
x1_4*x4_1+x1_5*x4_0)*beta-x2_5*k1+mu2*x3_5+x3_6, (x1_0*x4_4+4*x1_1*x4_3+6*x1_2*
x4_2+4*x1_3*x4_1+x1_4*x4_0)*beta+d*x1_4+x1_5, -3419475493552295859*(x1_0*x4_4+4
*x1_1*x4_3+6*x1_2*x4_2+4*x1_3*x4_1+x1_4*x4_0)*beta+(k1+mu1)*x2_4+x2_5, -x4_7-54\
5814937475024353813139795066061324517204874333919063177795443319763946032623122\
1589736501584063427868028649250025058794658883465750768324664660395856490957306\
2261195043686277986224814925072898161054768095407282762976604774341902136973489\
871899021332262873337647138315492812, c*x4_7-k2*x3_7+x4_8, -\
18287428538919690438*(x1_5*x4_1+1/6*x1_6*x4_0+5/2*x4_2*x1_4+10/3*x4_3*x1_3+5/2*
x4_4*x1_2+x4_5*x1_1+1/6*x4_6*x1_0)*beta-x2_6*k1+mu2*x3_6+x3_7, (x1_0*x4_5+5*
x1_1*x4_4+10*x1_2*x4_3+10*x1_3*x4_2+5*x1_4*x4_1+x1_5*x4_0)*beta+d*x1_5+x1_6, -\
3419475493552295859*(x1_0*x4_5+5*x1_1*x4_4+10*x1_2*x4_3+10*x1_3*x4_2+5*x1_4*
x4_1+x1_5*x4_0)*beta+(k1+mu1)*x2_5+x2_6, -x1_4+19874191370426638744276365320673\
6128314895216213435393224505894716764170749568199650157244367818426381911917316\
8649789291494440560438986869461494235778408287762906312, -x1_5-1796122959414288\
3982801281546530834988001970522327204920194335600742718644872446971613424980375\
9459673141291857337167392214205029902560570384675477275368860750440843698899802\
52082140451827639770697304010, -x1_6+181079780669499590628241136139754997594459\
7991895683936778733308460168270398761122877003910916407902260704565958803298657\
5923036957115190696929172936317183667577199344764654774362589057445130437974499\
7488407480139493090284129430508921182966, -x4_8+6513037338695950705503766746099\
8182815231467188550738491392050808316793449387572547415590635780278010664356450\
7920012472807876666599191600618684412063283604107168384730657484004538848476889\
8490161501517436776669037812809369872265153141058221969403115258331748876041751\
12422365717934622205401623381970636377623648, z_aux-1]

SubsByDepth Usage (real, cpu, memory):	14.843,	15.655,	1647216960


=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [x1(t), x2(t), x3(t), x4(t)]
Output variables:         [y1(t), y2(t)]
Input variables:          []
Parameters in equations:  [beta, c, d, k1, k2, mu1, mu2, q1, q2, s]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [beta, c, d, mu2, s, x1(0), x4(0)]
Nonidentifiable parameter:  [k1, k2, mu1, q1, q2, x2(0), x3(0)]

=======================================================
4. Randomizing the truncated system
=======================================================
Prep CPU Time (sub_transc=false):	 1.076
Prep Real Elapsed Time (sub_transc=false):	 1.022
memory used=111.18MiB, alloc change=0 bytes, cpu time=1.08s, real time=1.02s, gc time=145.60ms


GetPolySystem Usage (real, cpu, memory):	1.023,	1.077,	116582296

States for substitution:	[q2 = 2, d = 1, s = 1, mu2 = 2, c = 1, q1 = 3, x2_ = 2, x1_ = 0, x4_ = 0, x3_ = 1, k1 = 2, k2 = 1, mu1 = 3, beta = 1]
NonID parameters:	[k1, k2, mu1, q1, q2, x2_0, x3_0]
Substitutions:	[x2_ = 3, z_aux = 3, x1_ = 1, x4_ = 1, x3_ = 2]
memory used=115.75MiB, alloc change=0 bytes, cpu time=1.12s, real time=1.07s, gc time=145.60ms
all_subs, system_vars[1], system_vars[2], alg_indep, original_et_hat := {x1_0 =
x1_0, x1_1 = x1_1, x1_2 = x1_2, x1_3 = x1_3, x1_4 = x1_4, x1_5 = x1_5, x1_6 = 
x1_6, x2_0 = x2_0^3, x2_1 = x2_1^3, x2_2 = x2_2^3, x2_3 = x2_3^3, x2_4 = x2_4^3
, x2_5 = x2_5^3, x2_6 = x2_6^3, x3_0 = x3_0^2, x3_1 = x3_1^2, x3_2 = x3_2^2, 
x3_3 = x3_3^2, x3_4 = x3_4^2, x3_5 = x3_5^2, x3_6 = x3_6^2, x3_7 = x3_7^2, x4_0
= x4_0, x4_1 = x4_1, x4_2 = x4_2, x4_3 = x4_3, x4_4 = x4_4, x4_5 = x4_5, x4_6 =
x4_6, x4_7 = x4_7, x4_8 = x4_8, z_aux = z_aux^3}, [2484264299310016860-x1_0, 
beta*x1_0*x4_0+d*x1_0-s+x1_1, 848666345632688993-x4_0, -k2*x3_0^2+c*x4_0+x4_1,
-x1_1-3984633322692521237646715017374377667276244625144560817, (beta*x4_0+d)*
x1_1+x1_2+beta*x1_0*x4_1, -x4_1-202139915127460658330181026448821379, -k2*x3_1^
2+c*x4_1+x4_2, -beta*q2*x1_0*x4_0-k1*x2_0^3+mu2*x3_0^2+x3_1^2, -x1_2+6391148768\
1570060727987037473332882365620394656135729531777616444228353275943512923620622\
45, (x1_0*x4_2+2*x1_1*x4_1+x1_2*x4_0)*beta+d*x1_2+x1_3, -x4_2+13179886370681608\
17683651060707548106354558009067643223255850836100969493510232564164423369, -k2
*x3_2^2+c*x4_2+x4_3, -q2*(x1_0*x4_1+x1_1*x4_0)*beta-x2_1^3*k1+mu2*x3_1^2+x3_2^2
, -beta*q1*x1_0*x4_0+k1*x2_0^3+mu1*x2_0^3+x2_1^3, -x1_3-16439258465457072982397\
3101580861880404651163315141550014825723134423466581851596483418278679992192990\
70798602348791260941842323, (x1_0*x4_3+3*x1_1*x4_2+3*x1_2*x4_1+x1_3*x4_0)*beta+
d*x1_3+x1_4, -x4_3-211398660104341886007110254631972334275570053898507324715370\
9092157227836970457863173247797027988877038384720789624914150396709, -k2*x3_3^2
+c*x4_3+x4_4, -q2*(x1_0*x4_2+2*x1_1*x4_1+x1_2*x4_0)*beta-x2_2^3*k1+mu2*x3_2^2+
x3_3^2, -q1*(x1_0*x4_1+x1_1*x4_0)*beta+(k1+mu1)*x2_1^3+x2_2^3, -x4_4+5437578342\
7565669630502909670253863366677887009144195443273601675844730107637244335567982\
14259972521024890305689932854323176757612480200887096498213144536751198064, -k2
*x3_4^2+c*x4_4+x4_5, -q2*(x1_0*x4_3+3*x1_1*x4_2+3*x1_2*x4_1+x1_3*x4_0)*beta-
x2_3^3*k1+mu2*x3_3^2+x3_4^2, -q1*(x1_0*x4_2+2*x1_1*x4_1+x1_2*x4_0)*beta+(k1+mu1
)*x2_2^3+x2_3^3, -x4_5-21853780963216132974001369339860532909948666288012744804\
2978619143874939231372890292785811585877924956286106587290912932428268922172644\
67388559059545568765414022336245320878013975510549193865047061707, -k2*x3_5^2+c
*x4_5+x4_6, -q2*(x1_0*x4_4+4*x1_1*x4_3+6*x1_2*x4_2+4*x1_3*x4_1+x1_4*x4_0)*beta-
x2_4^3*k1+mu2*x3_4^2+x3_5^2, -q1*(x1_0*x4_3+3*x1_1*x4_2+3*x1_2*x4_1+x1_3*x4_0)*
beta+(k1+mu1)*x2_3^3+x2_4^3, -x4_6+96155351151238356546120569915962292085025575\
3423910040270977051443250575707662689842699720950880979278046105939735261952894\
8353359728936144407036259685078182092628667363784281108217276870656049874619481\
0242720941446811539521583142155886, -k2*x3_6^2+c*x4_6+x4_7, -q2*(x1_0*x4_5+5*
x1_1*x4_4+10*x1_2*x4_3+10*x1_3*x4_2+5*x1_4*x4_1+x1_5*x4_0)*beta-x2_5^3*k1+mu2*
x3_5^2+x3_6^2, (x1_0*x4_4+4*x1_1*x4_3+6*x1_2*x4_2+4*x1_3*x4_1+x1_4*x4_0)*beta+d
*x1_4+x1_5, -q1*(x1_0*x4_4+4*x1_1*x4_3+6*x1_2*x4_2+4*x1_3*x4_1+x1_4*x4_0)*beta+
(k1+mu1)*x2_4^3+x2_5^3, -x4_7-4757999606458544367676660176359281679570451148856\
0482171698404064395401768377253323161435166515786322275969925883770220400237410\
9796057212134385033179442559087014372827670480018902868580873380662849931990134\
307177649507085498355658552477420811197014436263623222213579380871, -k2*x3_7^2+
c*x4_7+x4_8, -6*(x1_5*x4_1+1/6*x1_6*x4_0+5/2*x4_2*x1_4+10/3*x4_3*x1_3+5/2*x4_4*
x1_2+x4_5*x1_1+1/6*x4_6*x1_0)*q2*beta-x2_6^3*k1+mu2*x3_6^2+x3_7^2, (x1_0*x4_5+5
*x1_1*x4_4+10*x1_2*x4_3+10*x1_3*x4_2+5*x1_4*x4_1+x1_5*x4_0)*beta+d*x1_5+x1_6, -
q1*(x1_0*x4_5+5*x1_1*x4_4+10*x1_2*x4_3+10*x1_3*x4_2+5*x1_4*x4_1+x1_5*x4_0)*beta
+(k1+mu1)*x2_5^3+x2_6^3, -x1_4+660698441578074791993337498622240395112369022037\
4931933512425821626446660441827753634788096439993039273773953750845284481132182\
3841328095847571507889601028472718727, -x1_5-2907034291317721396432687715111928\
2410920838807307041370905054794222205867575577933642297649685754375932797662148\
9147491681332249764889440164301435754317683052148276587521655153664189076649697\
040147825, -x1_6+14384709585528956630586896932399724883339805705258625928479911\
7963303050942442102064721710945814094028122077942723780503811194441207950819014\
9216906650202626887623363811169117187037646255859394365399500400140261341774539\
082057967765634160, -x4_8+28160378037955717332770669515767206914913711320992296\
5924924218352588353829006239994151162828151798347570357789390206888184353717059\
1393265439345414927017718884412291577574149568449150747896028877469973425314084\
0660200991694798678220330875094704184023099502664802312242696350175335103883981\
70356948832010662131, z_aux^3-1], [x4_8, x4_7, x3_7, x4_6, x3_6, x2_6, x1_6, 
x4_5, x3_5, x2_5, x1_5, x4_4, x3_4, x2_4, x1_4, x4_3, x3_3, x2_3, x1_3, x4_2, 
x3_2, x2_2, x1_2, x4_1, x3_1, x2_1, x1_1, x4_0, x3_0, x2_0, x1_0, z_aux, w_aux,
beta, c, d, k1, k2, mu1, mu2, q1, q2, s], [], [2484264299310016860-x1_0, beta*
x1_0*x4_0+d*x1_0-s+x1_1, 848666345632688993-x4_0, c*x4_0-k2*x3_0+x4_1, -x1_1-\
3984633322692521237646715017374377667276244625144560817, (beta*x4_0+d)*x1_1+
x1_2+beta*x1_0*x4_1, -x4_1-202139915127460658330181026448821379, c*x4_1-k2*x3_1
+x4_2, -beta*q2*x1_0*x4_0-k1*x2_0+mu2*x3_0+x3_1, -x1_2+639114876815700607279870\
3747333288236562039465613572953177761644422835327594351292362062245, (x1_0*x4_2
+2*x1_1*x4_1+x1_2*x4_0)*beta+d*x1_2+x1_3, -x4_2+1317988637068160817683651060707\
548106354558009067643223255850836100969493510232564164423369, c*x4_2-k2*x3_2+
x4_3, -q2*(x1_0*x4_1+x1_1*x4_0)*beta-x2_1*k1+mu2*x3_1+x3_2, -beta*q1*x1_0*x4_0+
k1*x2_0+mu1*x2_0+x2_1, -x1_3-16439258465457072982397310158086188040465116331514\
155001482572313442346658185159648341827867999219299070798602348791260941842323,
(x1_0*x4_3+3*x1_1*x4_2+3*x1_2*x4_1+x1_3*x4_0)*beta+d*x1_3+x1_4, -x4_3-211398660\
1043418860071102546319723342755700538985073247153709092157227836970457863173247\
797027988877038384720789624914150396709, c*x4_3-k2*x3_3+x4_4, -q2*(x1_0*x4_2+2*
x1_1*x4_1+x1_2*x4_0)*beta-x2_2*k1+mu2*x3_2+x3_3, -q1*(x1_0*x4_1+x1_1*x4_0)*beta
+(k1+mu1)*x2_1+x2_2, -x4_4+5437578342756566963050290967025386336667788700914419\
5443273601675844730107637244335567982142599725210248903056899328543231767576124\
80200887096498213144536751198064, c*x4_4-k2*x3_4+x4_5, -q2*(x1_0*x4_3+3*x1_1*
x4_2+3*x1_2*x4_1+x1_3*x4_0)*beta-x2_3*k1+mu2*x3_3+x3_4, -q1*(x1_0*x4_2+2*x1_1*
x4_1+x1_2*x4_0)*beta+(k1+mu1)*x2_2+x2_3, -x4_5-21853780963216132974001369339860\
5329099486662880127448042978619143874939231372890292785811585877924956286106587\
2909129324282689221726446738855905954556876541402233624532087801397551054919386\
5047061707, c*x4_5-k2*x3_5+x4_6, -q2*(x1_0*x4_4+4*x1_1*x4_3+6*x1_2*x4_2+4*x1_3*
x4_1+x1_4*x4_0)*beta-x2_4*k1+mu2*x3_4+x3_5, -q1*(x1_0*x4_3+3*x1_1*x4_2+3*x1_2*
x4_1+x1_3*x4_0)*beta+(k1+mu1)*x2_3+x2_4, -x4_6+96155351151238356546120569915962\
2920850255753423910040270977051443250575707662689842699720950880979278046105939\
7352619528948353359728936144407036259685078182092628667363784281108217276870656\
0498746194810242720941446811539521583142155886, c*x4_6-k2*x3_6+x4_7, -q2*(x1_0*
x4_5+5*x1_1*x4_4+10*x1_2*x4_3+10*x1_3*x4_2+5*x1_4*x4_1+x1_5*x4_0)*beta-x2_5*k1+
mu2*x3_5+x3_6, (x1_0*x4_4+4*x1_1*x4_3+6*x1_2*x4_2+4*x1_3*x4_1+x1_4*x4_0)*beta+d
*x1_4+x1_5, -q1*(x1_0*x4_4+4*x1_1*x4_3+6*x1_2*x4_2+4*x1_3*x4_1+x1_4*x4_0)*beta+
(k1+mu1)*x2_4+x2_5, -x4_7-47579996064585443676766601763592816795704511488560482\
1716984040643954017683772533231614351665157863222759699258837702204002374109796\
0572121343850331794425590870143728276704800189028685808733806628499319901343071\
77649507085498355658552477420811197014436263623222213579380871, c*x4_7-k2*x3_7+
x4_8, -6*(x1_5*x4_1+1/6*x1_6*x4_0+5/2*x4_2*x1_4+10/3*x4_3*x1_3+5/2*x4_4*x1_2+
x4_5*x1_1+1/6*x4_6*x1_0)*q2*beta-x2_6*k1+mu2*x3_6+x3_7, (x1_0*x4_5+5*x1_1*x4_4+
10*x1_2*x4_3+10*x1_3*x4_2+5*x1_4*x4_1+x1_5*x4_0)*beta+d*x1_5+x1_6, -q1*(x1_0*
x4_5+5*x1_1*x4_4+10*x1_2*x4_3+10*x1_3*x4_2+5*x1_4*x4_1+x1_5*x4_0)*beta+(k1+mu1)
*x2_5+x2_6, -x1_4+6606984415780747919933374986222403951123690220374931933512425\
8216264466604418277536347880964399930392737739537508452844811321823841328095847\
571507889601028472718727, -x1_5-29070342913177213964326877151119282410920838807\
3070413709050547942222058675755779336422976496857543759327976621489147491681332\
249764889440164301435754317683052148276587521655153664189076649697040147825, -
x1_6+14384709585528956630586896932399724883339805705258625928479911796330305094\
2442102064721710945814094028122077942723780503811194441207950819014921690665020\
2626887623363811169117187037646255859394365399500400140261341774539082057967765\
634160, -x4_8+28160378037955717332770669515767206914913711320992296592492421835\
2588353829006239994151162828151798347570357789390206888184353717059139326543934\
5414927017718884412291577574149568449150747896028877469973425314084066020099169\
4798678220330875094704184023099502664802312242696350175335103883981703569488320\
10662131, z_aux-1]

SubsByDepth Usage (real, cpu, memory):	1.069,	1.123,	121372216

memory used=1692.2MB, alloc=120.0MB, time=17.00
