    |\^/|     Maple 2021 (X86 64 LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2021
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
> kernelopts(printbytes=false, assertlevel=1):
> interface(echo=0, prettyprint=0):
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in SubsByDepth) `out` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `mem` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `cpu_time` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `real_time` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in WriteScripts) `weights` is implicitly declared local
|imports/create_substitutions.mpl:111|
Warning, (in WriteScripts) `max_degree` is implicitly declared local
|imports/create_substitutions.mpl:112|
Warning, (in WriteScripts) `new_weights` is implicitly declared local
|imports/create_substitutions.mpl:113|
Warning, (in WriteScripts) `each` is implicitly declared local
|imports/create_substitutions.mpl:113|
sigma := [diff(x1(t),t) = (-b*c*x1(t)-b*x1(t)*x4(t)+1)/(c+x4(t)), diff(x2(t),t)
= alpha*x1(t)-beta*x2(t), diff(x3(t),t) = gama*x2(t)-delta*x3(t), diff(x4(t),t)
= (gama*sgm*x2(t)*x4(t)-delta*sgm*x3(t)*x4(t))/x3(t), y(t) = x1(t)]

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [x1(t), x2(t), x3(t), x4(t)]
Output variables:         [y(t)]
Input variables:          []
Parameters in equations:  [alpha, b, beta, c, delta, gama, sgm]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [b, beta, c, delta, sgm, x1(0), x4(0)]
Nonidentifiable parameter:  [alpha, gama, x2(0), x3(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters {alpha, gama}
Number of possible combinations 153
Collection [alpha, x2_0] is not transcendence basis
Collection [alpha, x2_1] is not transcendence basis
Collection [alpha, x2_2] is not transcendence basis
Collection [alpha, x2_3] is not transcendence basis
Collection [alpha, x2_4] is not transcendence basis
Collection [alpha, x2_5] is not transcendence basis
Collection [alpha, x2_6] is not transcendence basis
Collection [alpha, x2_7] is not transcendence basis
Collection [x2_0, x2_1] is not transcendence basis
Collection [x2_0, x2_2] is not transcendence basis
Collection [x2_0, x2_3] is not transcendence basis
Collection [x2_0, x2_4] is not transcendence basis
Collection [x2_0, x2_5] is not transcendence basis
Collection [x2_0, x2_6] is not transcendence basis
Collection [x2_0, x2_7] is not transcendence basis
Collection [x2_1, x2_2] is not transcendence basis
Collection [x2_1, x2_3] is not transcendence basis
Collection [x2_1, x2_4] is not transcendence basis
Collection [x2_1, x2_5] is not transcendence basis
Collection [x2_1, x2_6] is not transcendence basis
Collection [x2_1, x2_7] is not transcendence basis
Collection [x2_2, x2_3] is not transcendence basis
Collection [x2_2, x2_4] is not transcendence basis
Collection [x2_2, x2_5] is not transcendence basis
Collection [x2_2, x2_6] is not transcendence basis
Collection [x2_2, x2_7] is not transcendence basis
Collection [x2_3, x2_4] is not transcendence basis
Collection [x2_3, x2_5] is not transcendence basis
Collection [x2_3, x2_6] is not transcendence basis
Collection [x2_3, x2_7] is not transcendence basis
Collection [x2_4, x2_5] is not transcendence basis
Collection [x2_4, x2_6] is not transcendence basis
Collection [x2_4, x2_7] is not transcendence basis
Collection [x2_5, x2_6] is not transcendence basis
Collection [x2_5, x2_7] is not transcendence basis
Collection [x2_6, x2_7] is not transcendence basis
Collection [x3_0, x3_1] is not transcendence basis
Collection [x3_0, x3_2] is not transcendence basis
Collection [x3_0, x3_3] is not transcendence basis
Collection [x3_0, x3_4] is not transcendence basis
Collection [x3_0, x3_5] is not transcendence basis
Collection [x3_0, x3_6] is not transcendence basis
Collection [x3_0, x3_7] is not transcendence basis
Collection [x3_1, x3_2] is not transcendence basis
Collection [x3_1, x3_3] is not transcendence basis
Collection [x3_1, x3_4] is not transcendence basis
Collection [x3_1, x3_5] is not transcendence basis
Collection [x3_1, x3_6] is not transcendence basis
Collection [x3_1, x3_7] is not transcendence basis
Collection [x3_2, x3_3] is not transcendence basis
Collection [x3_2, x3_4] is not transcendence basis
Collection [x3_2, x3_5] is not transcendence basis
Collection [x3_2, x3_6] is not transcendence basis
Collection [x3_2, x3_7] is not transcendence basis
Collection [x3_3, x3_4] is not transcendence basis
Collection [x3_3, x3_5] is not transcendence basis
Collection [x3_3, x3_6] is not transcendence basis
Collection [x3_3, x3_7] is not transcendence basis
Collection [x3_4, x3_5] is not transcendence basis
Collection [x3_4, x3_6] is not transcendence basis
Collection [x3_4, x3_7] is not transcendence basis
Collection [x3_5, x3_6] is not transcendence basis
Collection [x3_5, x3_7] is not transcendence basis
Collection [x3_6, x3_7] is not transcendence basis
Picked the best choice [gama, x3_0] based on heuristic:

=======================================================
4. Randomizing the truncated system
=======================================================
Prep CPU Time (sub_transc=true):	 13.896
Prep Real Elapsed Time (sub_transc=true):	 12.907
memory used=1.26GiB, alloc change=69.00MiB, cpu time=13.93s, real time=12.94s, gc time=2.40s


GetPolySystem Usage (real, cpu, memory):	12.945 	13.934 	1349912800

States for substitution:	[gama = 2, x1_ = 0, delta = 2, beta = 3, sgm = 2, b = 1, x4_ = 1, x2_ = 2, alpha = 3, c = 1, x3_ = 2]
NonID parameters:	[alpha, gama, x2_0, x3_0]
Substitutions:	[x1_ = 1, beta = 4, x4_ = 2, x2_ = 3, x3_ = 3, z_aux = 3]
memory used=1.28GiB, alloc change=69.00MiB, cpu time=14.22s, real time=13.23s, gc time=2.40s
all_subs, system_vars[1], system_vars[2], alg_indep, original_et_hat := {beta =
beta^4, x1_0 = x1_0, x1_1 = x1_1, x1_2 = x1_2, x1_3 = x1_3, x1_4 = x1_4, x1_5 =
x1_5, x1_6 = x1_6, x1_7 = x1_7, x1_8 = x1_8, x1_9 = x1_9, x2_0 = x2_0^3, x2_1 =
x2_1^3, x2_2 = x2_2^3, x2_3 = x2_3^3, x2_4 = x2_4^3, x2_5 = x2_5^3, x2_6 = x2_6
^3, x2_7 = x2_7^3, x3_1 = x3_1^3, x3_2 = x3_2^3, x3_3 = x3_3^3, x3_4 = x3_4^3,
x3_5 = x3_5^3, x3_6 = x3_6^3, x3_7 = x3_7^3, x4_0 = x4_0^2, x4_1 = x4_1^2, x4_2
= x4_2^2, x4_3 = x4_3^2, x4_4 = x4_4^2, x4_5 = x4_5^2, x4_6 = x4_6^2, x4_7 = 
x4_7^2, x4_8 = x4_8^2, z_aux = z_aux^3}, [8244461253201542848-x1_0, b*x1_0*x4_0
^2+b*c*x1_0+x1_1*x4_0^2+c*x1_1-1, -x1_1-\
297440291959506636566572574740557463145913670924708560319/10760700382299624185,
((x4_0^2+c)*b+x4_1^2)*x1_1+b*x1_0*x4_1^2+(x4_0^2+c)*x1_2, -5827051294395296804*
sgm*x2_0^3*x4_0^2+4424730020567427117*delta*sgm*x4_0^2+4424730020567427117*x4_1
^2, -x1_2+240598831775106557386165364965594186904580584361780069029500339918471\
711755001975159577640041683997548350283609/
2596194804853173321769483613335613712582689299437367075, ((x4_0^2+c)*x1_2+x1_0*
x4_2^2+2*x1_1*x4_1^2)*b+2*x1_2*x4_1^2+x1_1*x4_2^2+(x4_0^2+c)*x1_3, ((-\
5827051294395296804*x2_0^3+4424730020567427117*delta)*x4_1^2+x4_0^2*(delta*x3_1
^3-5827051294395296804*x2_1^3))*sgm+4424730020567427117*x4_2^2+x3_1^3*x4_1^2, 
beta^4*x2_0^3+x2_1^3-alpha*x1_0, -5827051294395296804*x2_0^3+x3_1^3+
4424730020567427117*delta, -x1_3-1497076101461135727915574603752439391418825644\
1327989647421496709484170724209626693581172569440531343728651836933371822810219\
306069364177646980067869592359644509991/481826477208295800005752671503511594455\
18605519286034523641145920631869942445072584471125, ((x4_0^2+c)*x1_3+3*x1_1*
x4_2^2+x4_3^2*x1_0+3*x1_2*x4_1^2)*b+3*x1_3*x4_1^2+x1_1*x4_3^2+3*x1_2*x4_2^2+(
x4_0^2+c)*x1_4, ((2*x3_1^3*x4_1^2+x3_2^3*x4_0^2+4424730020567427117*x4_2^2)*
delta-5827051294395296804*x4_2^2*x2_0^3-11654102588790593608*x4_1^2*x2_1^3-\
5827051294395296804*x2_2^3*x4_0^2)*sgm+x3_2^3*x4_1^2+2*x3_1^3*x4_2^2+
4424730020567427117*x4_3^2, beta^4*x2_1^3+x2_2^3-alpha*x1_1, delta*x3_1^3-\
5827051294395296804*x2_1^3+x3_2^3, -x1_4+35570842313084932282702165816929804780\
3208650796161293768140785046193012930516398354784453566392664923498592238951876\
8945424310922315977623397813521917239756161139410306389961168626568976198912886\
570395816017844342577797/196459983622890255370836502755860407404155881815530581\
1105600659640192217422840935011240227944314031576979349588923551803499375, ((
x4_0^2+c)*x1_4+4*x1_3*x4_1^2+6*x1_2*x4_2^2+4*x1_1*x4_3^2+x4_4^2*x1_0)*b+4*x1_4*
x4_1^2+x1_1*x4_4^2+4*x1_2*x4_3^2+6*x1_3*x4_2^2+(x4_0^2+c)*x1_5, ((3*x3_1^3*x4_2
^2+3*x3_2^3*x4_1^2+x3_3^3*x4_0^2+4424730020567427117*x4_3^2)*delta-\
5827051294395296804*x2_0^3*x4_3^2-17481153883185890412*x2_1^3*x4_2^2-\
17481153883185890412*x2_2^3*x4_1^2-5827051294395296804*x2_3^3*x4_0^2)*sgm+x3_3^
3*x4_1^2+3*x3_2^3*x4_2^2+3*x3_1^3*x4_3^2+4424730020567427117*x4_4^2, beta^4*
x2_2^3+x2_3^3-alpha*x1_2, delta*x3_2^3-5827051294395296804*x2_2^3+x3_3^3, -x1_5
+554833904878427929691740852962376546255864585113896964368357472928208707828103\
1059440279372573043997734314975559628900881905210181180229773583826265009990998\
1347705884963135319325612603804885643384210540954428877924257455117050414520865\
85860027974739052411816590044466669314210822023587975847/4739918134717982822444\
7118741027897761117447161274742234826430181240556686086018003877157455356729156\
9506325674852537524240413685517495983265996487229268254503125, ((x4_0^2+c)*x1_5
+5*x1_4*x4_1^2+10*x1_3*x4_2^2+10*x1_2*x4_3^2+5*x1_1*x4_4^2+x4_5^2*x1_0)*b+5*
x1_5*x4_1^2+x1_1*x4_5^2+5*x1_2*x4_4^2+10*x1_3*x4_3^2+10*x1_4*x4_2^2+(x4_0^2+c)*
x1_6, ((4*x3_1^3*x4_3^2+6*x3_2^3*x4_2^2+4*x3_3^3*x4_1^2+x3_4^3*x4_0^2+
4424730020567427117*x4_4^2)*delta-5827051294395296804*x2_0^3*x4_4^2-\
23308205177581187216*x2_1^3*x4_3^2-34962307766371780824*x2_2^3*x4_2^2-\
23308205177581187216*x2_3^3*x4_1^2-5827051294395296804*x2_4^3*x4_0^2)*sgm+6*
x3_2^3*x4_3^2+4*x3_3^3*x4_2^2+x3_4^3*x4_1^2+4*x3_1^3*x4_4^2+4424730020567427117
*x4_5^2, beta^4*x2_3^3+x2_4^3-alpha*x1_3, delta*x3_3^3-5827051294395296804*x2_3
^3+x3_4^3, -x1_6-37939196566609566894885984297351352644565137957029226268049227\
2643187619959826823535533659048791842510921317463398171062510938254994796133515\
6703016007857897089356648515148312810939862285563829917446205700906078621502539\
1686618356124795931449241313364334642935307941623550508540495561631473031628798\
322633818495361119777748055267484463310834495878301462189437368017/228716540737\
9247235569368111349981338475918648807611551718058457746925899212926944214140503\
1768386833170834364983563176367066115450795359838850346918906241690231654090190\
151518091567633341593496875, ((x4_0^2+c)*x1_6+6*x1_5*x4_1^2+15*x1_4*x4_2^2+20*
x1_3*x4_3^2+15*x1_2*x4_4^2+6*x1_1*x4_5^2+x4_6^2*x1_0)*b+6*x1_6*x4_1^2+x1_1*x4_6
^2+6*x1_2*x4_5^2+15*x1_3*x4_4^2+20*x1_4*x4_3^2+15*x1_5*x4_2^2+(x4_0^2+c)*x1_7,
((5*x3_1^3*x4_4^2+10*x3_2^3*x4_3^2+10*x3_3^3*x4_2^2+5*x3_4^3*x4_1^2+x3_5^3*x4_0
^2+4424730020567427117*x4_5^2)*delta-5827051294395296804*x2_0^3*x4_5^2-\
29135256471976484020*x2_1^3*x4_4^2-58270512943952968040*x2_2^3*x4_3^2-\
58270512943952968040*x2_3^3*x4_2^2-29135256471976484020*x2_4^3*x4_1^2-\
5827051294395296804*x2_5^3*x4_0^2)*sgm+5*x3_1^3*x4_5^2+10*x3_2^3*x4_4^2+10*x3_3
^3*x4_3^2+5*x3_4^3*x4_2^2+x3_5^3*x4_1^2+4424730020567427117*x4_6^2, beta^4*x2_4
^3+x2_5^3-alpha*x1_4, delta*x3_4^3-5827051294395296804*x2_4^3+x3_5^3, -x1_7-397\
6231134266174516762510170991720861257350456093442747355420754630612637789317979\
6696160899247626195374710521420472968807754304467739729732578326405727011242006\
8088008918237430296937410291888960699540539498214771551744697601386350185090737\
7412559850244502396750267407427070303618118428043516931409428705042954198235899\
7284778825051018850185063427627261517784883420251830811347961488651793525563648\
84268848622511313473053874857664540879439/7173608370063734773233072595291675253\
2649266407370475540286619628471470045105380228432996418689538779555977509490122\
2060589462549705009474346624512379614011631932458715845716225202895833038197205\
37480304040381524728853367431502703125, ((x4_0^2+c)*x1_7+7*x1_6*x4_1^2+21*x1_5*
x4_2^2+35*x1_4*x4_3^2+35*x1_3*x4_4^2+21*x1_2*x4_5^2+7*x1_1*x4_6^2+x4_7^2*x1_0)*
b+7*x1_7*x4_1^2+x1_1*x4_7^2+7*x1_2*x4_6^2+21*x1_3*x4_5^2+35*x1_4*x4_4^2+35*x1_5
*x4_3^2+21*x1_6*x4_2^2+(x4_0^2+c)*x1_8, ((6*x3_1^3*x4_5^2+15*x3_2^3*x4_4^2+20*
x3_3^3*x4_3^2+15*x3_4^3*x4_2^2+6*x3_5^3*x4_1^2+x3_6^3*x4_0^2+
4424730020567427117*x4_6^2)*delta-5827051294395296804*x2_0^3*x4_6^2-\
34962307766371780824*x2_1^3*x4_5^2-87405769415929452060*x2_2^3*x4_4^2-\
116541025887905936080*x2_3^3*x4_3^2-87405769415929452060*x2_4^3*x4_2^2-\
34962307766371780824*x2_5^3*x4_1^2-5827051294395296804*x2_6^3*x4_0^2)*sgm+
4424730020567427117*x4_7^2+6*x3_1^3*x4_6^2+15*x3_2^3*x4_5^2+20*x3_3^3*x4_4^2+15
*x3_4^3*x4_3^2+6*x3_5^3*x4_2^2+x3_6^3*x4_1^2, beta^4*x2_5^3+x2_6^3-alpha*x1_5,
delta*x3_5^3-5827051294395296804*x2_5^3+x3_6^3, -x1_8+1285440111241451533680092\
8232757900754591628822562507211855542347254262267253763932879509772545881608797\
8259840297065504654148625114783843439094625353004000583795013818904499985273874\
9459237631825705848761347412081568617488455427924729904139175567259563726035175\
7484469941864823998099280905375277163507537177916644965999165090486020783741751\
9382846235168462340260881108429236944186544303294894393176044602657737593977198\
2716331590077121649803815915850142468341676232064846016040510276405695377554794\
21473344136943/1730750241224598945328853889029201316714895980737998831431864555\
9027955516054387200570505587997042500311159316614293006247734296114413977970154\
7174243295968030382569936793994892227377292577823267977198491623732999840565837\
79880193542529013273021198281009237251086484375, ((x4_0^2+c)*x1_8+8*x1_7*x4_1^2
+28*x1_6*x4_2^2+56*x1_5*x4_3^2+70*x1_4*x4_4^2+56*x1_3*x4_5^2+28*x1_2*x4_6^2+8*
x1_1*x4_7^2+x4_8^2*x1_0)*b+8*x1_8*x4_1^2+x1_1*x4_8^2+8*x1_2*x4_7^2+28*x1_3*x4_6
^2+56*x1_4*x4_5^2+70*x1_5*x4_4^2+56*x1_6*x4_3^2+28*x1_7*x4_2^2+(x4_0^2+c)*x1_9,
((7*x3_1^3*x4_6^2+21*x3_2^3*x4_5^2+35*x3_3^3*x4_4^2+35*x3_4^3*x4_3^2+21*x3_5^3*
x4_2^2+7*x3_6^3*x4_1^2+x3_7^3*x4_0^2+4424730020567427117*x4_7^2)*delta-\
5827051294395296804*x2_0^3*x4_7^2-40789359060767077628*x2_1^3*x4_6^2-\
122368077182301232884*x2_2^3*x4_5^2-203946795303835388140*x2_3^3*x4_4^2-\
203946795303835388140*x2_4^3*x4_3^2-122368077182301232884*x2_5^3*x4_2^2-\
40789359060767077628*x2_6^3*x4_1^2-5827051294395296804*x2_7^3*x4_0^2)*sgm+
4424730020567427117*x4_8^2+7*x3_1^3*x4_7^2+21*x3_2^3*x4_6^2+35*x3_3^3*x4_5^2+35
*x3_4^3*x4_4^2+21*x3_5^3*x4_3^2+7*x3_6^3*x4_2^2+x3_7^3*x4_1^2, beta^4*x2_6^3+
x2_7^3-alpha*x1_6, delta*x3_6^3-5827051294395296804*x2_6^3+x3_7^3, -x1_9+186799\
6212902710253624114199666069963078115644048894068392449879617551951359167156608\
3486980191088851213887164927434704180323387425889728171388456538829807708333519\
7504122059342524200634558853760405406154658051442879858527856335608576341717155\
7607841894190471397055583076377530256681164486911294165327641822662130896974800\
5009225189022880416945401089332727202588731759883987303793263369450856338205735\
8171108540773289722049188277584025856660474225488743121029484705420310262251287\
0411519113993195133399213857954724294469367606656285133858662543579572023137453\
897721295816014072912191806/417571777405572754457668954864366192859336842082819\
9101037240228422047435859924119967747994514666704414024928832579965260007285714\
2990093904272158629356969127043077714215858287995738177588362324896246357783491\
3469705149235621128236582650417341034786967024058982475238138303979541102537244\
7266981567578125, z_aux^3*(x4_0^2+c)*x3_0-1], [x1_9, x4_8, x1_8, x4_7, x3_7, 
x2_7, x1_7, x4_6, x3_6, x2_6, x1_6, x4_5, x3_5, x2_5, x1_5, x4_4, x3_4, x2_4, 
x1_4, x4_3, x3_3, x2_3, x1_3, x4_2, x3_2, x2_2, x1_2, x4_1, x3_1, x2_1, x1_1, 
x4_0, x2_0, x1_0, z_aux, w_aux, alpha, b, beta, c, delta, gama, sgm], [gama, 
x3_0], [8244461253201542848-x1_0, b*c*x1_0+b*x1_0*x4_0+c*x1_1+x1_1*x4_0-1, -
x1_1-297440291959506636566572574740557463145913670924708560319/
10760700382299624185, ((c+x4_0)*b+x4_1)*x1_1+b*x1_0*x4_1+(c+x4_0)*x1_2, 
4424730020567427117*delta*sgm*x4_0-5827051294395296804*sgm*x2_0*x4_0+
4424730020567427117*x4_1, -x1_2+24059883177510655738616536496559418690458058436\
1780069029500339918471711755001975159577640041683997548350283609/
2596194804853173321769483613335613712582689299437367075, ((c+x4_0)*x1_2+x1_0*
x4_2+2*x1_1*x4_1)*b+2*x1_2*x4_1+x1_1*x4_2+(c+x4_0)*x1_3, ((4424730020567427117*
delta-5827051294395296804*x2_0)*x4_1+x4_0*(delta*x3_1-5827051294395296804*x2_1)
)*sgm+4424730020567427117*x4_2+x3_1*x4_1, -alpha*x1_0+beta*x2_0+x2_1, 
4424730020567427117*delta-5827051294395296804*x2_0+x3_1, -x1_3-1497076101461135\
7279155746037524393914188256441327989647421496709484170724209626693581172569440\
531343728651836933371822810219306069364177646980067869592359644509991/481826477\
2082958000057526715035115944551860551928603452364114592063186994244507258447112\
5, ((c+x4_0)*x1_3+3*x1_1*x4_2+x4_3*x1_0+3*x1_2*x4_1)*b+3*x1_3*x4_1+x1_1*x4_3+3*
x1_2*x4_2+(c+x4_0)*x1_4, ((2*x3_1*x4_1+x3_2*x4_0+4424730020567427117*x4_2)*
delta-5827051294395296804*x4_2*x2_0-11654102588790593608*x4_1*x2_1-\
5827051294395296804*x2_2*x4_0)*sgm+x3_2*x4_1+2*x3_1*x4_2+4424730020567427117*
x4_3, -alpha*x1_1+beta*x2_1+x2_2, delta*x3_1-5827051294395296804*x2_1+x3_2, -
x1_4+35570842313084932282702165816929804780320865079616129376814078504619301293\
0516398354784453566392664923498592238951876894542431092231597762339781352191723\
9756161139410306389961168626568976198912886570395816017844342577797/19645998362\
2890255370836502755860407404155881815530581110560065964019221742284093501124022\
7944314031576979349588923551803499375, ((c+x4_0)*x1_4+4*x1_3*x4_1+6*x1_2*x4_2+4
*x1_1*x4_3+x4_4*x1_0)*b+4*x1_4*x4_1+x1_1*x4_4+4*x1_2*x4_3+6*x1_3*x4_2+(c+x4_0)*
x1_5, ((3*x3_1*x4_2+3*x3_2*x4_1+x3_3*x4_0+4424730020567427117*x4_3)*delta-\
5827051294395296804*x2_0*x4_3-17481153883185890412*x2_1*x4_2-\
17481153883185890412*x2_2*x4_1-5827051294395296804*x2_3*x4_0)*sgm+x3_3*x4_1+3*
x3_2*x4_2+3*x3_1*x4_3+4424730020567427117*x4_4, -alpha*x1_2+beta*x2_2+x2_3, 
delta*x3_2-5827051294395296804*x2_2+x3_3, -x1_5+5548339048784279296917408529623\
7654625586458511389696436835747292820870782810310594402793725730439977343149755\
5962890088190521018118022977358382626500999099813477058849631353193256126038048\
8564338421054095442887792425745511705041452086585860027974739052411816590044466\
669314210822023587975847/473991813471798282244471187410278977611174471612747422\
3482643018124055668608601800387715745535672915695063256748525375242404136855174\
95983265996487229268254503125, ((c+x4_0)*x1_5+5*x1_4*x4_1+10*x1_3*x4_2+10*x1_2*
x4_3+5*x1_1*x4_4+x4_5*x1_0)*b+5*x1_5*x4_1+x1_1*x4_5+5*x1_2*x4_4+10*x1_3*x4_3+10
*x1_4*x4_2+(c+x4_0)*x1_6, ((4*x3_1*x4_3+6*x3_2*x4_2+4*x3_3*x4_1+x3_4*x4_0+
4424730020567427117*x4_4)*delta-5827051294395296804*x2_0*x4_4-\
23308205177581187216*x2_1*x4_3-34962307766371780824*x2_2*x4_2-\
23308205177581187216*x2_3*x4_1-5827051294395296804*x2_4*x4_0)*sgm+6*x3_2*x4_3+4
*x3_3*x4_2+x3_4*x4_1+4*x3_1*x4_4+4424730020567427117*x4_5, -alpha*x1_3+beta*
x2_3+x2_4, delta*x3_3-5827051294395296804*x2_3+x3_4, -x1_6-37939196566609566894\
8859842973513526445651379570292262680492272643187619959826823535533659048791842\
5109213174633981710625109382549947961335156703016007857897089356648515148312810\
9398622855638299174462057009060786215025391686618356124795931449241313364334642\
9353079416235505085404955616314730316287983226338184953611197777480552674844633\
10834495878301462189437368017/2287165407379247235569368111349981338475918648807\
6115517180584577469258992129269442141405031768386833170834364983563176367066115\
450795359838850346918906241690231654090190151518091567633341593496875, ((c+x4_0
)*x1_6+6*x1_5*x4_1+15*x1_4*x4_2+20*x1_3*x4_3+15*x1_2*x4_4+6*x1_1*x4_5+x4_6*x1_0
)*b+6*x1_6*x4_1+x1_1*x4_6+6*x1_2*x4_5+15*x1_3*x4_4+20*x1_4*x4_3+15*x1_5*x4_2+(c
+x4_0)*x1_7, ((5*x3_1*x4_4+10*x3_2*x4_3+10*x3_3*x4_2+5*x3_4*x4_1+x3_5*x4_0+
4424730020567427117*x4_5)*delta-5827051294395296804*x2_0*x4_5-\
29135256471976484020*x2_1*x4_4-58270512943952968040*x2_2*x4_3-\
58270512943952968040*x2_3*x4_2-29135256471976484020*x2_4*x4_1-\
5827051294395296804*x2_5*x4_0)*sgm+5*x3_1*x4_5+10*x3_2*x4_4+10*x3_3*x4_3+5*x3_4
*x4_2+x3_5*x4_1+4424730020567427117*x4_6, -alpha*x1_4+beta*x2_4+x2_5, delta*
x3_4-5827051294395296804*x2_4+x3_5, -x1_7-3976231134266174516762510170991720861\
2573504560934427473554207546306126377893179796696160899247626195374710521420472\
9688077543044677397297325783264057270112420068088008918237430296937410291888960\
6995405394982147715517446976013863501850907377412559850244502396750267407427070\
3036181184280435169314094287050429541982358997284778825051018850185063427627261\
5177848834202518308113479614886517935255636488426884862251131347305387485766454\
0879439/71736083700637347732330725952916752532649266407370475540286619628471470\
0451053802284329964186895387795559775094901222060589462549705009474346624512379\
6140116319324587158457162252028958330381972053748030404038152472885336743150270\
3125, ((c+x4_0)*x1_7+7*x1_6*x4_1+21*x1_5*x4_2+35*x1_4*x4_3+35*x1_3*x4_4+21*x1_2
*x4_5+7*x1_1*x4_6+x4_7*x1_0)*b+7*x1_7*x4_1+x1_1*x4_7+7*x1_2*x4_6+21*x1_3*x4_5+
35*x1_4*x4_4+35*x1_5*x4_3+21*x1_6*x4_2+(c+x4_0)*x1_8, ((6*x3_1*x4_5+15*x3_2*
x4_4+20*x3_3*x4_3+15*x3_4*x4_2+6*x3_5*x4_1+x3_6*x4_0+4424730020567427117*x4_6)*
delta-5827051294395296804*x2_0*x4_6-34962307766371780824*x2_1*x4_5-\
87405769415929452060*x2_2*x4_4-116541025887905936080*x2_3*x4_3-\
87405769415929452060*x2_4*x4_2-34962307766371780824*x2_5*x4_1-\
5827051294395296804*x2_6*x4_0)*sgm+4424730020567427117*x4_7+6*x3_1*x4_6+15*x3_2
*x4_5+20*x3_3*x4_4+15*x3_4*x4_3+6*x3_5*x4_2+x3_6*x4_1, -alpha*x1_5+beta*x2_5+
x2_6, delta*x3_5-5827051294395296804*x2_5+x3_6, -x1_8+1285440111241451533680092\
8232757900754591628822562507211855542347254262267253763932879509772545881608797\
8259840297065504654148625114783843439094625353004000583795013818904499985273874\
9459237631825705848761347412081568617488455427924729904139175567259563726035175\
7484469941864823998099280905375277163507537177916644965999165090486020783741751\
9382846235168462340260881108429236944186544303294894393176044602657737593977198\
2716331590077121649803815915850142468341676232064846016040510276405695377554794\
21473344136943/1730750241224598945328853889029201316714895980737998831431864555\
9027955516054387200570505587997042500311159316614293006247734296114413977970154\
7174243295968030382569936793994892227377292577823267977198491623732999840565837\
79880193542529013273021198281009237251086484375, ((c+x4_0)*x1_8+8*x1_7*x4_1+28*
x1_6*x4_2+56*x1_5*x4_3+70*x1_4*x4_4+56*x1_3*x4_5+28*x1_2*x4_6+8*x1_1*x4_7+x4_8*
x1_0)*b+8*x1_8*x4_1+x1_1*x4_8+8*x1_2*x4_7+28*x1_3*x4_6+56*x1_4*x4_5+70*x1_5*
x4_4+56*x1_6*x4_3+28*x1_7*x4_2+(c+x4_0)*x1_9, ((7*x3_1*x4_6+21*x3_2*x4_5+35*
x3_3*x4_4+35*x3_4*x4_3+21*x3_5*x4_2+7*x3_6*x4_1+x3_7*x4_0+4424730020567427117*
x4_7)*delta-5827051294395296804*x2_0*x4_7-40789359060767077628*x2_1*x4_6-\
122368077182301232884*x2_2*x4_5-203946795303835388140*x2_3*x4_4-\
203946795303835388140*x2_4*x4_3-122368077182301232884*x2_5*x4_2-\
40789359060767077628*x2_6*x4_1-5827051294395296804*x2_7*x4_0)*sgm+
4424730020567427117*x4_8+7*x3_1*x4_7+21*x3_2*x4_6+35*x3_3*x4_5+35*x3_4*x4_4+21*
x3_5*x4_3+7*x3_6*x4_2+x3_7*x4_1, -alpha*x1_6+beta*x2_6+x2_7, delta*x3_6-\
5827051294395296804*x2_6+x3_7, -x1_9+186799621290271025362411419966606996307811\
5644048894068392449879617551951359167156608348698019108885121388716492743470418\
0323387425889728171388456538829807708333519750412205934252420063455885376040540\
6154658051442879858527856335608576341717155760784189419047139705558307637753025\
6681164486911294165327641822662130896974800500922518902288041694540108933272720\
2588731759883987303793263369450856338205735817110854077328972204918827758402585\
6660474225488743121029484705420310262251287041151911399319513339921385795472429\
4469367606656285133858662543579572023137453897721295816014072912191806/41757177\
7405572754457668954864366192859336842082819910103724022842204743585992411996774\
7994514666704414024928832579965260007285714299009390427215862935696912704307771\
4215858287995738177588362324896246357783491346970514923562112823658265041734103\
47869670240589824752381383039795411025372447266981567578125, z_aux*(c+x4_0)*
x3_0-1]

SubsByDepth Usage (real, cpu, memory):	13.232 	14.221 	1377013744


=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [x1(t), x2(t), x3(t), x4(t)]
Output variables:         [y(t)]
Input variables:          []
Parameters in equations:  [alpha, b, beta, c, delta, gama, sgm]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [b, beta, c, delta, sgm, x1(0), x4(0)]
Nonidentifiable parameter:  [alpha, gama, x2(0), x3(0)]

=======================================================
4. Randomizing the truncated system
=======================================================
Prep CPU Time (sub_transc=false):	 2.489
Prep Real Elapsed Time (sub_transc=false):	 2.277
memory used=273.01MiB, alloc change=-4.00MiB, cpu time=2.49s, real time=2.28s, gc time=458.11ms


GetPolySystem Usage (real, cpu, memory):	2.278 	2.491 	286266496

States for substitution:	[gama = 2, x1_ = 0, delta = 2, beta = 3, sgm = 2, b = 1, x4_ = 1, x2_ = 2, alpha = 3, c = 1, x3_ = 2]
NonID parameters:	[alpha, gama, x2_0, x3_0]
Substitutions:	[x1_ = 1, beta = 4, x4_ = 2, x2_ = 3, x3_ = 3, z_aux = 3]
memory used=297.69MiB, alloc change=-4.00MiB, cpu time=2.75s, real time=2.54s, gc time=458.11ms
all_subs, system_vars[1], system_vars[2], alg_indep, original_et_hat := {beta =
beta^4, x1_0 = x1_0, x1_1 = x1_1, x1_2 = x1_2, x1_3 = x1_3, x1_4 = x1_4, x1_5 =
x1_5, x1_6 = x1_6, x1_7 = x1_7, x1_8 = x1_8, x1_9 = x1_9, x2_0 = x2_0^3, x2_1 =
x2_1^3, x2_2 = x2_2^3, x2_3 = x2_3^3, x2_4 = x2_4^3, x2_5 = x2_5^3, x2_6 = x2_6
^3, x2_7 = x2_7^3, x3_0 = x3_0^3, x3_1 = x3_1^3, x3_2 = x3_2^3, x3_3 = x3_3^3,
x3_4 = x3_4^3, x3_5 = x3_5^3, x3_6 = x3_6^3, x3_7 = x3_7^3, x4_0 = x4_0^2, x4_1
= x4_1^2, x4_2 = x4_2^2, x4_3 = x4_3^2, x4_4 = x4_4^2, x4_5 = x4_5^2, x4_6 = 
x4_6^2, x4_7 = x4_7^2, x4_8 = x4_8^2, z_aux = z_aux^3}, [7400218249800511418-
x1_0, b*x1_0*x4_0^2+b*c*x1_0+x1_1*x4_0^2+c*x1_1-1, -x1_1-\
150117169781192668913848235503665163629283777888694629819/8643537958766260865,
((x4_0^2+c)*b+x4_1^2)*x1_1+b*x1_0*x4_1^2+(x4_0^2+c)*x1_2, delta*sgm*x3_0^3*x4_0
^2-gama*sgm*x2_0^3*x4_0^2+x3_0^3*x4_1^2, -x1_2+29117069207891569824400124786923\
6773646259168030268962864471272126006450825486688917094799945003859616551300078\
1/71435573942222414935131730248195202956208354090519042950, ((x4_0^2+c)*x1_2+
x1_0*x4_2^2+2*x1_1*x4_1^2)*b+2*x1_2*x4_1^2+x1_1*x4_2^2+(x4_0^2+c)*x1_3, ((delta
*x3_0^3-gama*x2_0^3)*x4_1^2+x4_0^2*(delta*x3_1^3-gama*x2_1^3))*sgm+x3_0^3*x4_2^
2+x3_1^3*x4_1^2, beta^4*x2_0^3+x2_1^3-alpha*x1_0, delta*x3_0^3-gama*x2_0^3+x3_1
^3, -x1_3-197666464250898353714784235837239574026987968983307475824398040815725\
8889688222450207185342188660537967474071838848468722484136467651174106954691173\
90312311497022392553/2066358055092163688151919270439367335214065284994447625228\
063830551753110335398991824442394750, ((x4_0^2+c)*x1_3+3*x1_1*x4_2^2+x4_3^2*
x1_0+3*x1_2*x4_1^2)*b+3*x1_3*x4_1^2+x1_1*x4_3^2+3*x1_2*x4_2^2+(x4_0^2+c)*x1_4,
((x3_0^3*x4_2^2+2*x3_1^3*x4_1^2+x3_2^3*x4_0^2)*delta-2*gama*(x4_1^2*x2_1^3+1/2*
x4_2^2*x2_0^3+1/2*x2_2^3*x4_0^2))*sgm+x3_2^3*x4_1^2+2*x3_1^3*x4_2^2+x3_0^3*x4_3
^2, beta^4*x2_1^3+x2_2^3-alpha*x1_1, delta*x3_1^3-gama*x2_1^3+x3_2^3, -x1_4+223\
4634299151494605002217584103162729568166101449311950216083468359940770228887893\
6349464282773850363286911640458182805097174237494062070906564106995779317502360\
81321745147516425932092575805217917418818803003693080506351451/9961973137029602\
5661362826144654095520683326128352851678141894768352692782989806078106190308270\
70388186388217537808523735386645625, ((x4_0^2+c)*x1_4+4*x1_3*x4_1^2+6*x1_2*x4_2
^2+4*x1_1*x4_3^2+x4_4^2*x1_0)*b+4*x1_4*x4_1^2+x1_1*x4_4^2+4*x1_2*x4_3^2+6*x1_3*
x4_2^2+(x4_0^2+c)*x1_5, ((x3_0^3*x4_3^2+3*x3_1^3*x4_2^2+3*x3_2^3*x4_1^2+x3_3^3*
x4_0^2)*delta-gama*(x2_0^3*x4_3^2+3*x2_1^3*x4_2^2+3*x2_2^3*x4_1^2+x2_3^3*x4_0^2
))*sgm+x3_3^3*x4_1^2+3*x3_2^3*x4_2^2+3*x3_1^3*x4_3^2+x3_0^3*x4_4^2, beta^4*x2_2
^3+x2_3^3-alpha*x1_2, delta*x3_2^3-gama*x2_2^3+x3_3^3, -x1_5+376000922813163777\
4823622165905018005614763913373765002611821530605408653693597696660178539076754\
7299809126428264776838175108302871330010243379860042637844857650125591843879032\
6945274177300198329760939216639717393921728267835240524071097703418458892523411\
50774884996487892363518852408853531353/1646638846351032172161326071664073554662\
1293294236560666791039372572001626208703677219638668809421307217747698356882639\
8582292940429034410690685967007267948553837987500, ((x4_0^2+c)*x1_5+5*x1_4*x4_1
^2+10*x1_3*x4_2^2+10*x1_2*x4_3^2+5*x1_1*x4_4^2+x4_5^2*x1_0)*b+5*x1_5*x4_1^2+
x1_1*x4_5^2+5*x1_2*x4_4^2+10*x1_3*x4_3^2+10*x1_4*x4_2^2+(x4_0^2+c)*x1_6, ((x3_0
^3*x4_4^2+4*x3_1^3*x4_3^2+6*x3_2^3*x4_2^2+4*x3_3^3*x4_1^2+x3_4^3*x4_0^2)*delta-
gama*(x2_0^3*x4_4^2+4*x2_1^3*x4_3^2+6*x2_2^3*x4_2^2+4*x2_3^3*x4_1^2+x2_4^3*x4_0
^2))*sgm+6*x3_2^3*x4_3^2+4*x3_3^3*x4_2^2+x3_4^3*x4_1^2+4*x3_1^3*x4_4^2+x3_0^3*
x4_5^2, beta^4*x2_3^3+x2_4^3-alpha*x1_3, delta*x3_3^3-gama*x2_3^3+x3_4^3, -x1_6
+279148760728212265788304394117908973353871109667092668865004830370236625212596\
4793931549406368203711474437612937596847689003652851811801665982296624873660609\
3413847111080395947693035618577484686308980300882691703218314333030677210857199\
7185967222227432878602650059137076269938873590037307336968815526471858632210329\
777014974044616786680949373677193112414428820241/206821392552617780022651892049\
1064742311397959749736713105157861496332780145088080678278254248998631659345449\
8719578764116626222484314674824518380794745923381548562897880936425008879038988\
7818454706250, ((x4_0^2+c)*x1_6+6*x1_5*x4_1^2+15*x1_4*x4_2^2+20*x1_3*x4_3^2+15*
x1_2*x4_4^2+6*x1_1*x4_5^2+x4_6^2*x1_0)*b+6*x1_6*x4_1^2+x1_1*x4_6^2+6*x1_2*x4_5^
2+15*x1_3*x4_4^2+20*x1_4*x4_3^2+15*x1_5*x4_2^2+(x4_0^2+c)*x1_7, ((x3_0^3*x4_5^2
+5*x3_1^3*x4_4^2+10*x3_2^3*x4_3^2+10*x3_3^3*x4_2^2+5*x3_4^3*x4_1^2+x3_5^3*x4_0^
2)*delta-gama*(x2_0^3*x4_5^2+5*x2_1^3*x4_4^2+10*x2_2^3*x4_3^2+10*x2_3^3*x4_2^2+
5*x2_4^3*x4_1^2+x2_5^3*x4_0^2))*sgm+5*x3_1^3*x4_5^2+10*x3_2^3*x4_4^2+10*x3_3^3*
x4_3^2+5*x3_4^3*x4_2^2+x3_5^3*x4_1^2+x3_0^3*x4_6^2, beta^4*x2_4^3+x2_5^3-alpha*
x1_4, delta*x3_4^3-gama*x2_4^3+x3_5^3, -x1_7-1750761533819544701101334222694372\
7638518668401805242118783881948343151958046814037194701491687357622182105244831\
4704313342971178397401140465878134382166869041079106957316589436022957040545003\
9050190603210735753312362502231984934089255596667872615839292798638750447712158\
2941386303597468165460184773885258181980816128880817982060256784447009899148040\
2967668884772819185902981275693204341413910987231463048643290401266010858074117\
905690594/468633256127413196877208019816843306815225754524678154908856287969323\
8057874251564165050524116606075643536872478064908640127455646386286965527727032\
4278989733856413342831065084243122067071711883612910739476832691460836165416240\
053180578125, ((x4_0^2+c)*x1_7+7*x1_6*x4_1^2+21*x1_5*x4_2^2+35*x1_4*x4_3^2+35*
x1_3*x4_4^2+21*x1_2*x4_5^2+7*x1_1*x4_6^2+x4_7^2*x1_0)*b+7*x1_7*x4_1^2+x1_1*x4_7
^2+7*x1_2*x4_6^2+21*x1_3*x4_5^2+35*x1_4*x4_4^2+35*x1_5*x4_3^2+21*x1_6*x4_2^2+(
x4_0^2+c)*x1_8, ((x3_0^3*x4_6^2+6*x3_1^3*x4_5^2+15*x3_2^3*x4_4^2+20*x3_3^3*x4_3
^2+15*x3_4^3*x4_2^2+6*x3_5^3*x4_1^2+x3_6^3*x4_0^2)*delta-gama*(x2_0^3*x4_6^2+6*
x2_1^3*x4_5^2+15*x2_2^3*x4_4^2+20*x2_3^3*x4_3^2+15*x2_4^3*x4_2^2+6*x2_5^3*x4_1^
2+x2_6^3*x4_0^2))*sgm+x3_0^3*x4_7^2+6*x3_1^3*x4_6^2+15*x3_2^3*x4_5^2+20*x3_3^3*
x4_4^2+15*x3_4^3*x4_3^2+6*x3_5^3*x4_2^2+x3_6^3*x4_1^2, beta^4*x2_5^3+x2_6^3-
alpha*x1_5, delta*x3_5^3-gama*x2_5^3+x3_6^3, -x1_8-1546758177305210847709507293\
9785324942499940586589599357096611406966680129271776687470628595390646393881707\
9062540770045036413274626729991112832459568806086026665784072198196199973357505\
2873139980186539633786586048917514653599655395072129181808721062881563435410834\
6713623700205878024768553818716957936101568683179760899872032079069949096581013\
6746214659059671865932695834806793838914952514217107620359223495140862528722159\
3460625315301625741437130341500557336720200481156467964652633437734951683107733\
3856476719/78260106857264803047874423302415962210190211188987665243304814816290\
1826724372840749052829573341281390964153762242906623332349088535430152068365566\
6599425282660315941358452898766154183496906990880025069226716460119175550017022\
69648605316773761976729404748186067835192891875000, ((x4_0^2+c)*x1_8+8*x1_7*
x4_1^2+28*x1_6*x4_2^2+56*x1_5*x4_3^2+70*x1_4*x4_4^2+56*x1_3*x4_5^2+28*x1_2*x4_6
^2+8*x1_1*x4_7^2+x4_8^2*x1_0)*b+8*x1_8*x4_1^2+x1_1*x4_8^2+8*x1_2*x4_7^2+28*x1_3
*x4_6^2+56*x1_4*x4_5^2+70*x1_5*x4_4^2+56*x1_6*x4_3^2+28*x1_7*x4_2^2+(x4_0^2+c)*
x1_9, ((x3_0^3*x4_7^2+7*x3_1^3*x4_6^2+21*x3_2^3*x4_5^2+35*x3_3^3*x4_4^2+35*x3_4
^3*x4_3^2+21*x3_5^3*x4_2^2+7*x3_6^3*x4_1^2+x3_7^3*x4_0^2)*delta-gama*(x2_0^3*
x4_7^2+7*x2_1^3*x4_6^2+21*x2_2^3*x4_5^2+35*x2_3^3*x4_4^2+35*x2_4^3*x4_3^2+21*
x2_5^3*x4_2^2+7*x2_6^3*x4_1^2+x2_7^3*x4_0^2))*sgm+x3_0^3*x4_8^2+7*x3_1^3*x4_7^2
+21*x3_2^3*x4_6^2+35*x3_3^3*x4_5^2+35*x3_4^3*x4_4^2+21*x3_5^3*x4_3^2+7*x3_6^3*
x4_2^2+x3_7^3*x4_1^2, beta^4*x2_6^3+x2_7^3-alpha*x1_6, delta*x3_6^3-gama*x2_6^3
+x3_7^3, -x1_9+3248396193129148334797207620127424796349288839108751739812793973\
4206538438468161882535519397712239581828026857101634497687209428559570288621116\
0249430370660284749741538185318287139978441934100905992051127877846748035148284\
3321635294025429960527133420853901906446262359499670384122296081639718145270824\
4313947363020182620805038726639288021655269123496350012928239254221600136244647\
0746367974534656986348361929114431963713651952931935114397469432492257754400765\
7531559569919238686903770278465271490485170940389771634874667698325229239159807\
5747716346146203804608947543171312879778449416593/31369324728450359850522907073\
1797217538499168445993415913082832719884844608155052887899449536757649655940151\
1152773691554956324348362570430128262210555732848596687767604980080583192669596\
8939760547956721271805316777602513472371660404926772669749208666794330730643400\
2256738652757357741089079183024125945804615625000, z_aux^3*(x4_0^2+c)*x3_0^3-1]
, [x1_9, x4_8, x1_8, x4_7, x3_7, x2_7, x1_7, x4_6, x3_6, x2_6, x1_6, x4_5, x3_5
, x2_5, x1_5, x4_4, x3_4, x2_4, x1_4, x4_3, x3_3, x2_3, x1_3, x4_2, x3_2, x2_2,
x1_2, x4_1, x3_1, x2_1, x1_1, x4_0, x3_0, x2_0, x1_0, z_aux, w_aux, alpha, b, 
beta, c, delta, gama, sgm], [], [7400218249800511418-x1_0, b*c*x1_0+b*x1_0*x4_0
+c*x1_1+x1_1*x4_0-1, -x1_1-\
150117169781192668913848235503665163629283777888694629819/8643537958766260865,
((c+x4_0)*b+x4_1)*x1_1+b*x1_0*x4_1+(c+x4_0)*x1_2, delta*sgm*x3_0*x4_0-gama*sgm*
x2_0*x4_0+x3_0*x4_1, -x1_2+2911706920789156982440012478692367736462591680302689\
628644712721260064508254866889170947999450038596165513000781/
71435573942222414935131730248195202956208354090519042950, ((c+x4_0)*x1_2+x1_0*
x4_2+2*x1_1*x4_1)*b+2*x1_2*x4_1+x1_1*x4_2+(c+x4_0)*x1_3, ((delta*x3_0-gama*x2_0
)*x4_1+x4_0*(delta*x3_1-gama*x2_1))*sgm+x3_0*x4_2+x3_1*x4_1, -alpha*x1_0+beta*
x2_0+x2_1, delta*x3_0-gama*x2_0+x3_1, -x1_3-19766646425089835371478423583723957\
4026987968983307475824398040815725888968822245020718534218866053796747407183884\
846872248413646765117410695469117390312311497022392553/206635805509216368815191\
9270439367335214065284994447625228063830551753110335398991824442394750, ((c+
x4_0)*x1_3+3*x1_1*x4_2+x4_3*x1_0+3*x1_2*x4_1)*b+3*x1_3*x4_1+x1_1*x4_3+3*x1_2*
x4_2+(c+x4_0)*x1_4, ((x3_0*x4_2+2*x3_1*x4_1+x3_2*x4_0)*delta-2*gama*(x4_1*x2_1+
1/2*x4_2*x2_0+1/2*x2_2*x4_0))*sgm+x3_2*x4_1+2*x3_1*x4_2+x3_0*x4_3, -alpha*x1_1+
beta*x2_1+x2_2, delta*x3_1-gama*x2_1+x3_2, -x1_4+223463429915149460500221758410\
3162729568166101449311950216083468359940770228887893634946428277385036328691164\
0458182805097174237494062070906564106995779317502360813217451475164259320925758\
05217917418818803003693080506351451/9961973137029602566136282614465409552068332\
6128352851678141894768352692782989806078106190308270703881863882175378085237353\
86645625, ((c+x4_0)*x1_4+4*x1_3*x4_1+6*x1_2*x4_2+4*x1_1*x4_3+x4_4*x1_0)*b+4*
x1_4*x4_1+x1_1*x4_4+4*x1_2*x4_3+6*x1_3*x4_2+(c+x4_0)*x1_5, ((x3_0*x4_3+3*x3_1*
x4_2+3*x3_2*x4_1+x3_3*x4_0)*delta-gama*(x2_0*x4_3+3*x2_1*x4_2+3*x2_2*x4_1+x2_3*
x4_0))*sgm+x3_3*x4_1+3*x3_2*x4_2+3*x3_1*x4_3+x3_0*x4_4, -alpha*x1_2+beta*x2_2+
x2_3, delta*x3_2-gama*x2_2+x3_3, -x1_5+3760009228131637774823622165905018005614\
7639133737650026118215306054086536935976966601785390767547299809126428264776838\
1751083028713300102433798600426378448576501255918438790326945274177300198329760\
9392166397173939217282678352405240710977034184588925234115077488499648789236351\
8852408853531353/16466388463510321721613260716640735546621293294236560666791039\
3725720016262087036772196386688094213072177476983568826398582292940429034410690\
685967007267948553837987500, ((c+x4_0)*x1_5+5*x1_4*x4_1+10*x1_3*x4_2+10*x1_2*
x4_3+5*x1_1*x4_4+x4_5*x1_0)*b+5*x1_5*x4_1+x1_1*x4_5+5*x1_2*x4_4+10*x1_3*x4_3+10
*x1_4*x4_2+(c+x4_0)*x1_6, ((x3_0*x4_4+4*x3_1*x4_3+6*x3_2*x4_2+4*x3_3*x4_1+x3_4*
x4_0)*delta-gama*(x2_0*x4_4+4*x2_1*x4_3+6*x2_2*x4_2+4*x2_3*x4_1+x2_4*x4_0))*sgm
+6*x3_2*x4_3+4*x3_3*x4_2+x3_4*x4_1+4*x3_1*x4_4+x3_0*x4_5, -alpha*x1_3+beta*x2_3
+x2_4, delta*x3_3-gama*x2_3+x3_4, -x1_6+279148760728212265788304394117908973353\
8711096670926688650048303702366252125964793931549406368203711474437612937596847\
6890036528518118016659822966248736606093413847111080395947693035618577484686308\
9803008826917032183143330306772108571997185967222227432878602650059137076269938\
8735900373073369688155264718586322103297770149740446167866809493736771931124144\
28820241/2068213925526177800226518920491064742311397959749736713105157861496332\
7801450880806782782542489986316593454498719578764116626222484314674824518380794\
7459233815485628978809364250088790389887818454706250, ((c+x4_0)*x1_6+6*x1_5*
x4_1+15*x1_4*x4_2+20*x1_3*x4_3+15*x1_2*x4_4+6*x1_1*x4_5+x4_6*x1_0)*b+6*x1_6*
x4_1+x1_1*x4_6+6*x1_2*x4_5+15*x1_3*x4_4+20*x1_4*x4_3+15*x1_5*x4_2+(c+x4_0)*x1_7
, ((x3_0*x4_5+5*x3_1*x4_4+10*x3_2*x4_3+10*x3_3*x4_2+5*x3_4*x4_1+x3_5*x4_0)*
delta-gama*(x2_0*x4_5+5*x2_1*x4_4+10*x2_2*x4_3+10*x2_3*x4_2+5*x2_4*x4_1+x2_5*
x4_0))*sgm+5*x3_1*x4_5+10*x3_2*x4_4+10*x3_3*x4_3+5*x3_4*x4_2+x3_5*x4_1+x3_0*
x4_6, -alpha*x1_4+beta*x2_4+x2_5, delta*x3_4-gama*x2_4+x3_5, -x1_7-175076153381\
9544701101334222694372763851866840180524211878388194834315195804681403719470149\
1687357622182105244831470431334297117839740114046587813438216686904107910695731\
6589436022957040545003905019060321073575331236250223198493408925559666787261583\
9292798638750447712158294138630359746816546018477388525818198081612888081798206\
0256784447009899148040296766888477281918590298127569320434141391098723146304864\
3290401266010858074117905690594/46863325612741319687720801981684330681522575452\
4678154908856287969323805787425156416505052411660607564353687247806490864012745\
5646386286965527727032427898973385641334283106508424312206707171188361291073947\
6832691460836165416240053180578125, ((c+x4_0)*x1_7+7*x1_6*x4_1+21*x1_5*x4_2+35*
x1_4*x4_3+35*x1_3*x4_4+21*x1_2*x4_5+7*x1_1*x4_6+x4_7*x1_0)*b+7*x1_7*x4_1+x1_1*
x4_7+7*x1_2*x4_6+21*x1_3*x4_5+35*x1_4*x4_4+35*x1_5*x4_3+21*x1_6*x4_2+(c+x4_0)*
x1_8, ((x3_0*x4_6+6*x3_1*x4_5+15*x3_2*x4_4+20*x3_3*x4_3+15*x3_4*x4_2+6*x3_5*
x4_1+x3_6*x4_0)*delta-gama*(x2_0*x4_6+6*x2_1*x4_5+15*x2_2*x4_4+20*x2_3*x4_3+15*
x2_4*x4_2+6*x2_5*x4_1+x2_6*x4_0))*sgm+x3_0*x4_7+6*x3_1*x4_6+15*x3_2*x4_5+20*
x3_3*x4_4+15*x3_4*x4_3+6*x3_5*x4_2+x3_6*x4_1, -alpha*x1_5+beta*x2_5+x2_6, delta
*x3_5-gama*x2_5+x3_6, -x1_8-154675817730521084770950729397853249424999405865895\
9935709661140696668012927177668747062859539064639388170790625407700450364132746\
2672999111283245956880608602666578407219819619997335750528731399801865396337865\
8604891751465359965539507212918180872106288156343541083467136237002058780247685\
5381871695793610156868317976089987203207906994909658101367462146590596718659326\
9583480679383891495251421710762035922349514086252872215934606253153016257414371\
303415005573367202004811564679646526334377349516831077333856476719/782601068572\
6480304787442330241596221019021118898766524330481481629018267243728407490528295\
7334128139096415376224290662333234908853543015206836556665994252826603159413584\
5289876615418349690699088002506922671646011917555001702269648605316773761976729\
404748186067835192891875000, ((c+x4_0)*x1_8+8*x1_7*x4_1+28*x1_6*x4_2+56*x1_5*
x4_3+70*x1_4*x4_4+56*x1_3*x4_5+28*x1_2*x4_6+8*x1_1*x4_7+x4_8*x1_0)*b+8*x1_8*
x4_1+x1_1*x4_8+8*x1_2*x4_7+28*x1_3*x4_6+56*x1_4*x4_5+70*x1_5*x4_4+56*x1_6*x4_3+
28*x1_7*x4_2+(c+x4_0)*x1_9, ((x3_0*x4_7+7*x3_1*x4_6+21*x3_2*x4_5+35*x3_3*x4_4+
35*x3_4*x4_3+21*x3_5*x4_2+7*x3_6*x4_1+x3_7*x4_0)*delta-gama*(x2_0*x4_7+7*x2_1*
x4_6+21*x2_2*x4_5+35*x2_3*x4_4+35*x2_4*x4_3+21*x2_5*x4_2+7*x2_6*x4_1+x2_7*x4_0)
)*sgm+x3_0*x4_8+7*x3_1*x4_7+21*x3_2*x4_6+35*x3_3*x4_5+35*x3_4*x4_4+21*x3_5*x4_3
+7*x3_6*x4_2+x3_7*x4_1, -alpha*x1_6+beta*x2_6+x2_7, delta*x3_6-gama*x2_6+x3_7,
-x1_9+3248396193129148334797207620127424796349288839108751739812793973420653843\
8468161882535519397712239581828026857101634497687209428559570288621116024943037\
0660284749741538185318287139978441934100905992051127877846748035148284332163529\
4025429960527133420853901906446262359499670384122296081639718145270824431394736\
3020182620805038726639288021655269123496350012928239254221600136244647074636797\
4534656986348361929114431963713651952931935114397469432492257754400765753155956\
9919238686903770278465271490485170940389771634874667698325229239159807574771634\
6146203804608947543171312879778449416593/31369324728450359850522907073179721753\
8499168445993415913082832719884844608155052887899449536757649655940151115277369\
1554956324348362570430128262210555732848596687767604980080583192669596893976054\
7956721271805316777602513472371660404926772669749208666794330730643400225673865\
2757357741089079183024125945804615625000, z_aux*(c+x4_0)*x3_0-1]

SubsByDepth Usage (real, cpu, memory):	2.537 	2.750 	312148712

memory used=1634.3MB, alloc=112.3MB, time=17.30
