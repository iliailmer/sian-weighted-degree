    |\^/|     Maple 2021 (X86 64 LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2021
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
# Ex 27 from  https://arxiv.org/abs/2006.14295
> kernelopts(printbytes=false, assertlevel=1):
> interface(echo=0, prettyprint=0):
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in SubsByDepth) `out` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `mem` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `cpu_time` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `real_time` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in WriteScripts) `weights` is implicitly declared local
|imports/create_substitutions.mpl:111|
Warning, (in WriteScripts) `max_degree` is implicitly declared local
|imports/create_substitutions.mpl:112|
Warning, (in WriteScripts) `new_weights` is implicitly declared local
|imports/create_substitutions.mpl:113|
Warning, (in WriteScripts) `each` is implicitly declared local
|imports/create_substitutions.mpl:113|

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [S(t), A(t), In(t), R(t), Dd(t)]
Output variables:         [y1(t)]
Input variables:          []
Parameters in equations:  [N, b0, dlt, g, gam, k, zeta0]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [dlt, gam, k, S(0), A(0), In(0), R(0)]
Nonidentifiable parameter:  [Dd(0), N, b0, g, zeta0]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters {N, b0, Dd(0)}
Number of possible combinations 10
Collection [Dd_0, b0, zeta0] is not transcendence basis
Collection [N, b0, g] is not transcendence basis
Collection [N, b0, zeta0] is not transcendence basis
Collection [N, g, zeta0] is not transcendence basis
Collection [b0, g, zeta0] is not transcendence basis
Picked the best choice [Dd_0, b0, g] based on heuristic:

=======================================================
4. Randomizing the truncated system
=======================================================
Prep CPU Time (sub_transc=true):	 4.040
Prep Real Elapsed Time (sub_transc=true):	 3.794
memory used=456.98MiB, alloc change=72.00MiB, cpu time=4.06s, real time=3.82s, gc time=605.47ms


GetPolySystem Usage (real, cpu, memory):	3.819 	4.065 	479175832

States for substitution:	[b0 = 2, S_ = 2, dlt = 1, A_ = 1, In_ = 0, gam = 2, zeta0 = 2, g = 2, k = 1, N = 2, R_ = 0]
NonID parameters:	[Dd_0, N, b0, g, zeta0]
Substitutions:	[S_ = 3, A_ = 2, In_ = 1, gam = 3, z_aux = 2]
memory used=460.29MiB, alloc change=72.00MiB, cpu time=4.10s, real time=3.86s, gc time=605.47ms
all_subs, system_vars[1], system_vars[2], alg_indep, original_et_hat := {A_0 =
A_0^2, A_1 = A_1^2, A_2 = A_2^2, A_3 = A_3^2, A_4 = A_4^2, A_5 = A_5^2, A_6 = 
A_6^2, A_7 = A_7^2, A_8 = A_8^2, In_0 = In_0, In_1 = In_1, In_2 = In_2, In_3 =
In_3, In_4 = In_4, In_5 = In_5, In_6 = In_6, In_7 = In_7, In_8 = In_8, In_9 = 
In_9, S_0 = S_0^3, S_1 = S_1^3, S_2 = S_2^3, S_3 = S_3^3, S_4 = S_4^3, S_5 = 
S_5^3, S_6 = S_6^3, S_7 = S_7^3, gam = gam^3, z_aux = z_aux^2}, [
195376564835273468754-In_0-R_0, In_0*gam^3-A_0^2*k+In_0*dlt+In_1, -In_0*gam^3+
R_1, -In_1-R_1-5620920294988898460937449174001715439214, -A_1^2*k+(gam^3+dlt)*
In_1+In_2, -In_1*gam^3+R_2, -46554075808034349110*A_0^2*S_0^3*zeta0+A_0^2*N*k-\
21849481374808727890019900623762421090*In_0*S_0^3+A_1^2*N, -In_2-R_2+7278034610\
2340738094920842849385608926147446210148423731709783943015899452288098706126804\
550272904/11466605393956960241, -A_2^2*k+(gam^3+dlt)*In_2+In_3, -In_2*gam^3+R_3
, 46554075808034349110*(-A_0^2*S_1^3-A_1^2*S_0^3)*zeta0-\
21849481374808727890019900623762421090*In_0*S_1^3-\
21849481374808727890019900623762421090*In_1*S_0^3+N*(A_1^2*k+A_2^2), 
46554075808034349110*A_0^2*S_0^3*zeta0+21849481374808727890019900623762421090*
In_0*S_0^3+N*S_1^3, -In_3-R_3+2577922340079156182802148498597367667145453377334\
8814734735116330337880711927785496219474362778861698998497648528744931091140640\
5289197455607282025016132512/131483039260722855370590132328854778081, -A_3^2*k+
(gam^3+dlt)*In_3+In_4, -In_3*gam^3+R_4, 46554075808034349110*(-A_0^2*S_2^3-2*
A_1^2*S_1^3-A_2^2*S_0^3)*zeta0-43698962749617455780039801247524842180*S_1^3*
In_1-21849481374808727890019900623762421090*S_2^3*In_0-\
21849481374808727890019900623762421090*In_2*S_0^3+N*(A_2^2*k+A_3^2), 
46554075808034349110*(A_0^2*S_1^3+A_1^2*S_0^3)*zeta0+
21849481374808727890019900623762421090*In_0*S_1^3+
21849481374808727890019900623762421090*In_1*S_0^3+N*S_2^3, -In_4-R_4-1727126184\
2165500701277270504686338713113552331056450055023216955041463760710906523946149\
1708185403360711342750283266964534816411761815723766177312235355411580338894181\
62975251085907301834312506037387612543958949248/
1507664127200859467409121630464277925203055550519395277521, -A_4^2*k+(gam^3+dlt
)*In_4+In_5, -In_4*gam^3+R_5, 46554075808034349110*(-A_0^2*S_3^3-3*A_1^2*S_2^3-\
3*A_2^2*S_1^3-A_3^2*S_0^3)*zeta0-21849481374808727890019900623762421090*S_3^3*
In_0-65548444124426183670059701871287263270*S_2^3*In_1-\
65548444124426183670059701871287263270*In_2*S_1^3-\
21849481374808727890019900623762421090*In_3*S_0^3+N*(A_3^2*k+A_4^2), 
46554075808034349110*(A_0^2*S_2^3+2*A_1^2*S_1^3+A_2^2*S_0^3)*zeta0+
21849481374808727890019900623762421090*S_2^3*In_0+
43698962749617455780039801247524842180*S_1^3*In_1+
21849481374808727890019900623762421090*In_2*S_0^3+N*S_3^3, -In_5-R_5-7632185747\
1608740700795040134485383833947625192217435137746837862567775183369471853405307\
4573330400587676861934300198331436199742341304134938968196967076270551137409426\
7534158000374407719673943844560749425828379171670512913935230982879364864494201\
24222741552828772049483008/
51863368839710363369225192869840821096214847222572733561647375352111274127683,
-A_5^2*k+(gam^3+dlt)*In_5+In_6, -In_5*gam^3+R_6, 46554075808034349110*(-A_0^2*
S_4^3-4*A_1^2*S_3^3-6*A_2^2*S_2^3-4*A_3^2*S_1^3-A_4^2*S_0^3)*zeta0-\
21849481374808727890019900623762421090*S_4^3*In_0-\
87397925499234911560079602495049684360*S_3^3*In_1-\
131096888248852367340119403742574526540*S_2^3*In_2-\
87397925499234911560079602495049684360*S_1^3*In_3-\
21849481374808727890019900623762421090*In_4*S_0^3+N*(A_4^2*k+A_5^2), 
46554075808034349110*(A_0^2*S_3^3+3*A_1^2*S_2^3+3*A_2^2*S_1^3+A_3^2*S_0^3)*
zeta0+65548444124426183670059701871287263270*S_2^3*In_1+
21849481374808727890019900623762421090*S_3^3*In_0+
65548444124426183670059701871287263270*In_2*S_1^3+
21849481374808727890019900623762421090*In_3*S_0^3+N*S_4^3, -In_6-R_6+1410798709\
2757216822648837278097732063762328761069359520251272025685548578521410505380943\
2452321751332998919952067963292249099073076082036189754272886235359689605894646\
8589659944883905528907669983381129414454939876606032076231743589249108231156008\
2935692243112587772817537362991823476894929653705625327572238936149169452455008\
6752256/17840903546586065613344050994783796563561990785106856671358878277779918\
11567695369427390765354809, -A_6^2*k+(gam^3+dlt)*In_6+In_7, -In_6*gam^3+R_7, 
46554075808034349110*(-A_0^2*S_5^3-5*A_1^2*S_4^3-10*A_2^2*S_3^3-10*A_3^2*S_2^3-\
5*A_4^2*S_1^3-A_5^2*S_0^3)*zeta0-21849481374808727890019900623762421090*In_0*
S_5^3-109247406874043639450099503118812105450*In_1*S_4^3-\
218494813748087278900199006237624210900*In_2*S_3^3-\
218494813748087278900199006237624210900*In_3*S_2^3-\
109247406874043639450099503118812105450*In_4*S_1^3-\
21849481374808727890019900623762421090*In_5*S_0^3+N*(A_5^2*k+A_6^2), 
46554075808034349110*(A_0^2*S_4^3+4*A_1^2*S_3^3+6*A_2^2*S_2^3+4*A_3^2*S_1^3+A_4
^2*S_0^3)*zeta0+87397925499234911560079602495049684360*S_1^3*In_3+
131096888248852367340119403742574526540*S_2^3*In_2+
87397925499234911560079602495049684360*S_3^3*In_1+
21849481374808727890019900623762421090*S_4^3*In_0+
21849481374808727890019900623762421090*In_4*S_0^3+N*S_5^3, -In_7-R_7+1420723173\
3344850580820517967603307687370001934396779146743512078878520204569042470553467\
7510558763951051067320955486115109852315031700818025824712204676831359405592605\
2983309421707151940805635844036183758482088676399510357795295248397205307562350\
4952010431177478682851867823661357943820645628493359618616462555938389056297152\
476180394748146549328396534746119151676915949280272882800744979456/613723802521\
0489261746645119335272972019181475860515239277121372081934332595410713845328386\
1433011010100148413446907, -A_7^2*k+(gam^3+dlt)*In_7+In_8, -In_7*gam^3+R_8, 
46554075808034349110*(-A_0^2*S_6^3-6*A_1^2*S_5^3-15*A_2^2*S_4^3-20*A_3^2*S_3^3-\
15*A_4^2*S_2^3-6*A_5^2*S_1^3-A_6^2*S_0^3)*zeta0-\
21849481374808727890019900623762421090*In_0*S_6^3-\
131096888248852367340119403742574526540*In_1*S_5^3-\
327742220622130918350298509356436316350*In_2*S_4^3-\
436989627496174557800398012475248421800*In_3*S_3^3-\
327742220622130918350298509356436316350*In_4*S_2^3-\
131096888248852367340119403742574526540*In_5*S_1^3-\
21849481374808727890019900623762421090*In_6*S_0^3+N*(A_6^2*k+A_7^2), 
46554075808034349110*(A_0^2*S_5^3+5*A_1^2*S_4^3+10*A_2^2*S_3^3+10*A_3^2*S_2^3+5
*A_4^2*S_1^3+A_5^2*S_0^3)*zeta0+21849481374808727890019900623762421090*In_0*S_5
^3+109247406874043639450099503118812105450*In_1*S_4^3+
218494813748087278900199006237624210900*In_2*S_3^3+
218494813748087278900199006237624210900*In_3*S_2^3+
109247406874043639450099503118812105450*In_4*S_1^3+
21849481374808727890019900623762421090*In_5*S_0^3+N*S_6^3, -In_8-R_8-1357887775\
5108614369829342566501136895393201021466017249558403657461470735248553734830287\
7335487753134644831380885662592479011507141569166347363496452932355087138489794\
7355640560961956360695363702659854320603461598150257876880694067762519945916615\
5362418135521493186264107420462523477832410880144517566414298255433412016792135\
9776298216250941635665116877819493570687930727332557446763633573147873828147775\
045804058588932953145954226799468047611199488/124188152900958280426927876596486\
9727595697194005626097415575406336348375118073601101685305281567712319860736628\
19727467983065428839633, -A_8^2*k+(gam^3+dlt)*In_8+In_9, -In_8*gam^3+R_9, 
46554075808034349110*(-A_0^2*S_7^3-7*A_1^2*S_6^3-21*A_2^2*S_5^3-35*A_3^2*S_4^3-\
35*A_4^2*S_3^3-21*A_5^2*S_2^3-7*A_6^2*S_1^3-A_7^2*S_0^3)*zeta0-\
21849481374808727890019900623762421090*In_0*S_7^3-\
152946369623661095230139304366336947630*In_1*S_6^3-\
458839108870983285690417913099010842890*In_2*S_5^3-\
764731848118305476150696521831684738150*In_3*S_4^3-\
764731848118305476150696521831684738150*In_4*S_3^3-\
458839108870983285690417913099010842890*In_5*S_2^3-\
152946369623661095230139304366336947630*In_6*S_1^3-\
21849481374808727890019900623762421090*In_7*S_0^3+N*(A_7^2*k+A_8^2), 
46554075808034349110*(A_0^2*S_6^3+6*A_1^2*S_5^3+15*A_2^2*S_4^3+20*A_3^2*S_3^3+
15*A_4^2*S_2^3+6*A_5^2*S_1^3+A_6^2*S_0^3)*zeta0+
21849481374808727890019900623762421090*In_0*S_6^3+
131096888248852367340119403742574526540*In_1*S_5^3+
327742220622130918350298509356436316350*In_2*S_4^3+
436989627496174557800398012475248421800*In_3*S_3^3+
327742220622130918350298509356436316350*In_4*S_2^3+
131096888248852367340119403742574526540*In_5*S_1^3+
21849481374808727890019900623762421090*In_6*S_0^3+N*S_7^3, -In_9-R_9-4472454179\
0001057831013369618561680175150139325317126563165567921390739205798231674081098\
6341934952298245528752125219225433589916757976744141356139003132477394826950745\
5300486403852407495590376257994148086826312632850510204481008939589888480376637\
9134703692228955544124224952314048500259071798981382984041465678552625159577338\
2172822001302189523960135795646505331164591731203598336901800895547597538694738\
4891517689146128353259163689700437750609045465525954859532392423427819649072622\
43299622546723105825943552/7262484373990367683498403428595233900920245217221065\
7313358702912369509557090672634809974456452059979032975899793287737141209172832\
309165898737539847609203, N*z_aux^2-1], [In_9, R_9, In_8, R_8, A_8, In_7, S_7,
R_7, A_7, In_6, S_6, R_6, A_6, In_5, S_5, R_5, A_5, In_4, S_4, R_4, A_4, In_3,
S_3, R_3, A_3, In_2, S_2, R_2, A_2, In_1, S_1, R_1, A_1, In_0, S_0, R_0, A_0, 
z_aux, w_aux, N, b0, dlt, g, gam, k, zeta0], [Dd_0, b0, g], [
195376564835273468754-In_0-R_0, -A_0*k+In_0*dlt+In_0*gam+In_1, -In_0*gam+R_1, -
In_1-R_1-5620920294988898460937449174001715439214, -A_1*k+(gam+dlt)*In_1+In_2,
-In_1*gam+R_2, A_0*N*k-46554075808034349110*A_0*S_0*zeta0+A_1*N-\
21849481374808727890019900623762421090*In_0*S_0, -In_2-R_2+72780346102340738094\
920842849385608926147446210148423731709783943015899452288098706126804550272904/
11466605393956960241, -A_2*k+(gam+dlt)*In_2+In_3, -In_2*gam+R_3, 
46554075808034349110*(-A_0*S_1-A_1*S_0)*zeta0-\
21849481374808727890019900623762421090*In_0*S_1-\
21849481374808727890019900623762421090*In_1*S_0+N*(A_1*k+A_2), 
46554075808034349110*A_0*S_0*zeta0+21849481374808727890019900623762421090*In_0*
S_0+N*S_1, -In_3-R_3+2577922340079156182802148498597367667145453377334881473473\
5116330337880711927785496219474362778861698998497648528744931091140640528919745\
5607282025016132512/131483039260722855370590132328854778081, -A_3*k+(gam+dlt)*
In_3+In_4, -In_3*gam+R_4, 46554075808034349110*(-A_0*S_2-2*A_1*S_1-A_2*S_0)*
zeta0-43698962749617455780039801247524842180*S_1*In_1-\
21849481374808727890019900623762421090*S_2*In_0-\
21849481374808727890019900623762421090*In_2*S_0+N*(A_2*k+A_3), 
46554075808034349110*(A_0*S_1+A_1*S_0)*zeta0+
21849481374808727890019900623762421090*In_0*S_1+
21849481374808727890019900623762421090*In_1*S_0+N*S_2, -In_4-R_4-17271261842165\
5007012772705046863387131135523310564500550232169550414637607109065239461491708\
1854033607113427502832669645348164117618157237661773122353554115803388941816297\
5251085907301834312506037387612543958949248/
1507664127200859467409121630464277925203055550519395277521, -A_4*k+(gam+dlt)*
In_4+In_5, -In_4*gam+R_5, 46554075808034349110*(-A_0*S_3-3*A_1*S_2-3*A_2*S_1-
A_3*S_0)*zeta0-21849481374808727890019900623762421090*S_3*In_0-\
65548444124426183670059701871287263270*S_2*In_1-\
65548444124426183670059701871287263270*In_2*S_1-\
21849481374808727890019900623762421090*In_3*S_0+N*(A_3*k+A_4), 
46554075808034349110*(A_0*S_2+2*A_1*S_1+A_2*S_0)*zeta0+
21849481374808727890019900623762421090*S_2*In_0+
43698962749617455780039801247524842180*S_1*In_1+
21849481374808727890019900623762421090*In_2*S_0+N*S_3, -In_5-R_5-76321857471608\
7407007950401344853838339476251922174351377468378625677751833694718534053074573\
3304005876768619343001983314361997423413041349389681969670762705511374094267534\
1580003744077196739438445607494258283791716705129139352309828793648644942012422\
2741552828772049483008/
51863368839710363369225192869840821096214847222572733561647375352111274127683,
-A_5*k+(gam+dlt)*In_5+In_6, -In_5*gam+R_6, 46554075808034349110*(-A_0*S_4-4*A_1
*S_3-6*A_2*S_2-4*A_3*S_1-A_4*S_0)*zeta0-21849481374808727890019900623762421090*
S_4*In_0-87397925499234911560079602495049684360*S_3*In_1-\
131096888248852367340119403742574526540*S_2*In_2-\
87397925499234911560079602495049684360*S_1*In_3-\
21849481374808727890019900623762421090*In_4*S_0+N*(A_4*k+A_5), 
46554075808034349110*(A_0*S_3+3*A_1*S_2+3*A_2*S_1+A_3*S_0)*zeta0+
65548444124426183670059701871287263270*S_2*In_1+
21849481374808727890019900623762421090*S_3*In_0+
65548444124426183670059701871287263270*In_2*S_1+
21849481374808727890019900623762421090*In_3*S_0+N*S_4, -In_6-R_6+14107987092757\
2168226488372780977320637623287610693595202512720256855485785214105053809432452\
3217513329989199520679632922490990730760820361897542728862353596896058946468589\
6599448839055289076699833811294144549398766060320762317435892491082311560082935\
6922431125877728175373629918234768949296537056253275722389361491694524550086752\
256/178409035465860656133440509947837965635619907851068566713588782777799181156\
7695369427390765354809, -A_6*k+(gam+dlt)*In_6+In_7, -In_6*gam+R_7, 
46554075808034349110*(-A_0*S_5-5*A_1*S_4-10*A_2*S_3-10*A_3*S_2-5*A_4*S_1-A_5*
S_0)*zeta0-21849481374808727890019900623762421090*In_0*S_5-\
109247406874043639450099503118812105450*In_1*S_4-\
218494813748087278900199006237624210900*In_2*S_3-\
218494813748087278900199006237624210900*In_3*S_2-\
109247406874043639450099503118812105450*In_4*S_1-\
21849481374808727890019900623762421090*In_5*S_0+N*(A_5*k+A_6), 
46554075808034349110*(A_0*S_4+4*A_1*S_3+6*A_2*S_2+4*A_3*S_1+A_4*S_0)*zeta0+
87397925499234911560079602495049684360*S_1*In_3+
131096888248852367340119403742574526540*S_2*In_2+
87397925499234911560079602495049684360*S_3*In_1+
21849481374808727890019900623762421090*S_4*In_0+
21849481374808727890019900623762421090*In_4*S_0+N*S_5, -In_7-R_7+14207231733344\
8505808205179676033076873700019343967791467435120788785202045690424705534677510\
5587639510510673209554861151098523150317008180258247122046768313594055926052983\
3094217071519408056358440361837584820886763995103577952952483972053075623504952\
0104311774786828518678236613579438206456284933596186164625559383890562971524761\
80394748146549328396534746119151676915949280272882800744979456/6137238025210489\
2617466451193352729720191814758605152392771213720819343325954107138453283861433\
011010100148413446907, -A_7*k+(gam+dlt)*In_7+In_8, -In_7*gam+R_8, 
46554075808034349110*(-A_0*S_6-6*A_1*S_5-15*A_2*S_4-20*A_3*S_3-15*A_4*S_2-6*A_5
*S_1-A_6*S_0)*zeta0-21849481374808727890019900623762421090*In_0*S_6-\
131096888248852367340119403742574526540*In_1*S_5-\
327742220622130918350298509356436316350*In_2*S_4-\
436989627496174557800398012475248421800*In_3*S_3-\
327742220622130918350298509356436316350*In_4*S_2-\
131096888248852367340119403742574526540*In_5*S_1-\
21849481374808727890019900623762421090*In_6*S_0+N*(A_6*k+A_7), 
46554075808034349110*(A_0*S_5+5*A_1*S_4+10*A_2*S_3+10*A_3*S_2+5*A_4*S_1+A_5*S_0
)*zeta0+21849481374808727890019900623762421090*In_0*S_5+
109247406874043639450099503118812105450*In_1*S_4+
218494813748087278900199006237624210900*In_2*S_3+
218494813748087278900199006237624210900*In_3*S_2+
109247406874043639450099503118812105450*In_4*S_1+
21849481374808727890019900623762421090*In_5*S_0+N*S_6, -In_8-R_8-13578877755108\
6143698293425665011368953932010214660172495584036574614707352485537348302877335\
4877531346448313808856625924790115071415691663473634964529323550871384897947355\
6405609619563606953637026598543206034615981502578768806940677625199459166155362\
4181355214931862641074204625234778324108801445175664142982554334120167921359776\
2982162509416356651168778194935706879307273325574467636335731478738281477750458\
04058588932953145954226799468047611199488/1241881529009582804269278765964869727\
5956971940056260974155754063363483751180736011016853052815677123198607366281972\
7467983065428839633, -A_8*k+(gam+dlt)*In_8+In_9, -In_8*gam+R_9, 
46554075808034349110*(-A_0*S_7-7*A_1*S_6-21*A_2*S_5-35*A_3*S_4-35*A_4*S_3-21*
A_5*S_2-7*A_6*S_1-A_7*S_0)*zeta0-21849481374808727890019900623762421090*In_0*
S_7-152946369623661095230139304366336947630*In_1*S_6-\
458839108870983285690417913099010842890*In_2*S_5-\
764731848118305476150696521831684738150*In_3*S_4-\
764731848118305476150696521831684738150*In_4*S_3-\
458839108870983285690417913099010842890*In_5*S_2-\
152946369623661095230139304366336947630*In_6*S_1-\
21849481374808727890019900623762421090*In_7*S_0+N*(A_7*k+A_8), 
46554075808034349110*(A_0*S_6+6*A_1*S_5+15*A_2*S_4+20*A_3*S_3+15*A_4*S_2+6*A_5*
S_1+A_6*S_0)*zeta0+21849481374808727890019900623762421090*In_0*S_6+
131096888248852367340119403742574526540*In_1*S_5+
327742220622130918350298509356436316350*In_2*S_4+
436989627496174557800398012475248421800*In_3*S_3+
327742220622130918350298509356436316350*In_4*S_2+
131096888248852367340119403742574526540*In_5*S_1+
21849481374808727890019900623762421090*In_6*S_0+N*S_7, -In_9-R_9-44724541790001\
0578310133696185616801751501393253171265631655679213907392057982316740810986341\
9349522982455287521252192254335899167579767441413561390031324773948269507455300\
4864038524074955903762579941480868263126328505102044810089395898884803766379134\
7036922289555441242249523140485002590717989813829840414656785526251595773382172\
8220013021895239601357956465053311645917312035983369018008955475975386947384891\
5176891461283532591636897004377506090454655259548595323924234278196490726224329\
9622546723105825943552/72624843739903676834984034285952339009202452172210657313\
3587029123695095570906726348099744564520599790329758997932877371412091728323091\
65898737539847609203, N*z_aux-1]

SubsByDepth Usage (real, cpu, memory):	3.855 	4.101 	482645544


=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [S(t), A(t), In(t), R(t), Dd(t)]
Output variables:         [y1(t)]
Input variables:          []
Parameters in equations:  [N, b0, dlt, g, gam, k, zeta0]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [dlt, gam, k, S(0), A(0), In(0), R(0)]
Nonidentifiable parameter:  [Dd(0), N, b0, g, zeta0]

=======================================================
4. Randomizing the truncated system
=======================================================
Prep CPU Time (sub_transc=false):	 2.518
Prep Real Elapsed Time (sub_transc=false):	 2.352
memory used=311.49MiB, alloc change=0 bytes, cpu time=2.52s, real time=2.35s, gc time=388.97ms


GetPolySystem Usage (real, cpu, memory):	2.354 	2.520 	326620568

States for substitution:	[b0 = 2, S_ = 2, dlt = 1, A_ = 1, In_ = 0, gam = 2, zeta0 = 2, g = 2, k = 1, N = 2, R_ = 0]
NonID parameters:	[Dd_0, N, b0, g, zeta0]
Substitutions:	[S_ = 3, A_ = 2, In_ = 1, gam = 3, z_aux = 2]
memory used=314.24MiB, alloc change=0 bytes, cpu time=2.55s, real time=2.38s, gc time=388.97ms
all_subs, system_vars[1], system_vars[2], alg_indep, original_et_hat := {A_0 =
A_0^2, A_1 = A_1^2, A_2 = A_2^2, A_3 = A_3^2, A_4 = A_4^2, A_5 = A_5^2, A_6 = 
A_6^2, A_7 = A_7^2, A_8 = A_8^2, In_0 = In_0, In_1 = In_1, In_2 = In_2, In_3 =
In_3, In_4 = In_4, In_5 = In_5, In_6 = In_6, In_7 = In_7, In_8 = In_8, In_9 = 
In_9, S_0 = S_0^3, S_1 = S_1^3, S_2 = S_2^3, S_3 = S_3^3, S_4 = S_4^3, S_5 = 
S_5^3, S_6 = S_6^3, S_7 = S_7^3, gam = gam^3, z_aux = z_aux^2}, [
58480311475597540587-In_0-R_0, In_0*gam^3-A_0^2*k+In_0*dlt+In_1, -In_0*gam^3+
R_1, -In_1-R_1-2735976339839646611880537344641932791952, -A_1^2*k+(gam^3+dlt)*
In_1+In_2, -In_1*gam^3+R_2, -A_0^2*S_0^3*g*zeta0-In_0*S_0^3*b0*g+A_0^2*N*k+A_1^
2*N, -In_2-R_2+8258930385548348453888094401024884211289454571574548106995341721\
45574918511352709301710158396480/1820845158812192397, -A_2^2*k+(gam^3+dlt)*In_2
+In_3, -In_2*gam^3+R_3, ((-A_0^2*S_1^3-A_1^2*S_0^3)*zeta0-b0*(In_0*S_1^3+In_1*
S_0^3))*g+N*(A_1^2*k+A_2^2), A_0^2*S_0^3*g*zeta0+In_0*S_0^3*b0*g+N*S_1^3, -In_3
-R_3-20406188402427504727292340029741471801182776511919917519287497192284477028\
2611585457236779590130016991211919571192596996267345497219270670069683484515662\
72/9946431277109394454630151825233816827, -A_3^2*k+(gam^3+dlt)*In_3+In_4, -In_3
*gam^3+R_4, ((-A_0^2*S_2^3-2*A_1^2*S_1^3-A_2^2*S_0^3)*zeta0-2*(S_1^3*In_1+1/2*
S_2^3*In_0+1/2*In_2*S_0^3)*b0)*g+N*(A_2^2*k+A_3^2), ((A_0^2*S_1^3+A_1^2*S_0^3)*
zeta0+b0*(In_0*S_1^3+In_1*S_0^3))*g+N*S_2^3, -In_4-R_4-312162801514095241735360\
2242731595413673833069804979150503027879882520651142523431364306783578923336415\
6645997487251834927898110719602239691915677593683242630386677708541866595518797\
88492238750111146121524902605376/
54332733715148438968729838835319285040137357320540192957, -A_4^2*k+(gam^3+dlt)*
In_4+In_5, -In_4*gam^3+R_5, ((-A_0^2*S_3^3-3*A_1^2*S_2^3-3*A_2^2*S_1^3-A_3^2*
S_0^3)*zeta0-b0*(In_0*S_3^3+3*In_1*S_2^3+3*In_2*S_1^3+In_3*S_0^3))*g+N*(A_3^2*k
+A_4^2), ((A_0^2*S_2^3+2*A_1^2*S_1^3+A_2^2*S_0^3)*zeta0+b0*(In_0*S_2^3+2*In_1*
S_1^3+In_2*S_0^3))*g+N*S_3^3, -In_5-R_5+345890207779753362496968412544379711083\
7708622721011417526434465457533533864600512392280299901711751048194810917360522\
3758016317476870737765302443571001062892527398126352382957865763980765252674925\
8763933749485178443380450711081121341882974446259346889743269741658865225536/
296794485450780058737418098930697126195312803327290597224662566575765043787, -
A_5^2*k+(gam^3+dlt)*In_5+In_6, -In_5*gam^3+R_6, ((-A_0^2*S_4^3-4*A_1^2*S_3^3-6*
A_2^2*S_2^3-4*A_3^2*S_1^3-A_4^2*S_0^3)*zeta0-b0*(In_0*S_4^3+4*In_1*S_3^3+6*In_2
*S_2^3+4*In_3*S_1^3+In_4*S_0^3))*g+N*(A_4^2*k+A_5^2), ((A_0^2*S_3^3+3*A_1^2*S_2
^3+3*A_2^2*S_1^3+A_3^2*S_0^3)*zeta0+3*b0*(S_2^3*In_1+1/3*S_3^3*In_0+In_2*S_1^3+
1/3*In_3*S_0^3))*g+N*S_4^3, -In_6-R_6+39631302347736373468813434389384366857656\
6576053571186017803893254332058324427375525171749214923784726812439274748639543\
1965688398502768914855717949147615415250369715077731871820078432901716659111357\
5539793057523072242686619462189960844928696028826727333621418615713025929945836\
180787759457804700802891947805121764626748757221863360/162125040598562562548890\
2060855807717476868948118457907343910394626383972765678879104520462317, -A_6^2*
k+(gam^3+dlt)*In_6+In_7, -In_6*gam^3+R_7, ((-A_0^2*S_5^3-5*A_1^2*S_4^3-10*A_2^2
*S_3^3-10*A_3^2*S_2^3-5*A_4^2*S_1^3-A_5^2*S_0^3)*zeta0-b0*(In_0*S_5^3+5*In_1*
S_4^3+10*In_2*S_3^3+10*In_3*S_2^3+5*In_4*S_1^3+In_5*S_0^3))*g+N*(A_5^2*k+A_6^2)
, ((A_0^2*S_4^3+4*A_1^2*S_3^3+6*A_2^2*S_2^3+4*A_3^2*S_1^3+A_4^2*S_0^3)*zeta0+4*
b0*(S_1^3*In_3+3/2*S_2^3*In_2+S_3^3*In_1+1/4*S_4^3*In_0+1/4*In_4*S_0^3))*g+N*
S_5^3, -In_7-R_7-11957943529357118216430956919322691395183318050725658926701425\
2769966199324097552478944179114543833627975267431435500877419466995003103518876\
8990200897139802152616521385245316800765273340085424609763722904601731864926978\
9452659289848401141855298723276682112752871099068865138071811082217931229714553\
9960702876417303701879866775222836624605322334274280358084130654861325011054625\
36204914875072/8856137858883683673440631373667923440754521427832052822123512551\
651724887872026921649818723622013796732377211547, -A_7^2*k+(gam^3+dlt)*In_7+
In_8, -In_7*gam^3+R_8, ((-A_0^2*S_6^3-6*A_1^2*S_5^3-15*A_2^2*S_4^3-20*A_3^2*S_3
^3-15*A_4^2*S_2^3-6*A_5^2*S_1^3-A_6^2*S_0^3)*zeta0-b0*(In_0*S_6^3+6*In_1*S_5^3+
15*In_2*S_4^3+20*In_3*S_3^3+15*In_4*S_2^3+6*In_5*S_1^3+In_6*S_0^3))*g+N*(A_6^2*
k+A_7^2), ((A_0^2*S_5^3+5*A_1^2*S_4^3+10*A_2^2*S_3^3+10*A_3^2*S_2^3+5*A_4^2*S_1
^3+A_5^2*S_0^3)*zeta0+b0*(In_0*S_5^3+5*In_1*S_4^3+10*In_2*S_3^3+10*In_3*S_2^3+5
*In_4*S_1^3+In_5*S_0^3))*g+N*S_6^3, -In_8-R_8-703670356638259382817594963774385\
9432337509502632150567739416117915303039799160479141083060566311587430265885123\
1839082345224807878038532627405892342649669928333174043681348676313060059369930\
6327437812338791104731385685368029666211436720631279679287347599855769671257753\
5481234522342144797624378914501605672764438563585110875619146615312186846119326\
6587076221650090152847550543048275923567805674749721471507885831407066885502655\
5248089015015848975936/48376967238365191613271640872382916188755970889502426196\
267831807975135361446421669391166707684544523230167525030110563141602024477, -
A_8^2*k+(gam^3+dlt)*In_8+In_9, -In_8*gam^3+R_9, ((-A_0^2*S_7^3-7*A_1^2*S_6^3-21
*A_2^2*S_5^3-35*A_3^2*S_4^3-35*A_4^2*S_3^3-21*A_5^2*S_2^3-7*A_6^2*S_1^3-A_7^2*
S_0^3)*zeta0-b0*(In_0*S_7^3+7*In_1*S_6^3+21*In_2*S_5^3+35*In_3*S_4^3+35*In_4*
S_3^3+21*In_5*S_2^3+7*In_6*S_1^3+In_7*S_0^3))*g+N*(A_7^2*k+A_8^2), ((A_0^2*S_6^
3+6*A_1^2*S_5^3+15*A_2^2*S_4^3+20*A_3^2*S_3^3+15*A_4^2*S_2^3+6*A_5^2*S_1^3+A_6^
2*S_0^3)*zeta0+b0*(In_0*S_6^3+6*In_1*S_5^3+15*In_2*S_4^3+20*In_3*S_3^3+15*In_4*
S_2^3+6*In_5*S_1^3+In_6*S_0^3))*g+N*S_7^3, -In_9-R_9+67603148228653483323643104\
5742838239276877711987588095199889610956851890351231138288015403574219712086165\
6381315217842811569443464237918736342521970491183121641764869597242546160550687\
7799273030743900838723628937901418970796209444680933157588917927503587430115378\
0258684411833610294830982130168824066676106162506818545064215176328274084215080\
6055355307132171482647554087721528521102112411457976347683237859432398528050250\
7963023379560981159105561999684846189431240498064909787849404505534621489213077\
1803654976/26426089978197988789705851347682215962943992631680578664060151066511\
6821332189397036249439931181272516499932780966357703900406930254821593138081904\
107, N*z_aux^2-1], [In_9, R_9, In_8, R_8, A_8, In_7, S_7, R_7, A_7, In_6, S_6,
R_6, A_6, In_5, S_5, R_5, A_5, In_4, S_4, R_4, A_4, In_3, S_3, R_3, A_3, In_2,
S_2, R_2, A_2, In_1, S_1, R_1, A_1, In_0, S_0, R_0, A_0, z_aux, w_aux, N, b0, 
dlt, g, gam, k, zeta0], [], [58480311475597540587-In_0-R_0, -A_0*k+In_0*dlt+
In_0*gam+In_1, -In_0*gam+R_1, -In_1-R_1-\
2735976339839646611880537344641932791952, -A_1*k+(gam+dlt)*In_1+In_2, -In_1*gam
+R_2, -A_0*S_0*g*zeta0-In_0*S_0*b0*g+A_0*N*k+A_1*N, -In_2-R_2+82589303855483484\
5388809440102488421128945457157454810699534172145574918511352709301710158396480
/1820845158812192397, -A_2*k+(gam+dlt)*In_2+In_3, -In_2*gam+R_3, ((-A_0*S_1-A_1
*S_0)*zeta0-b0*(In_0*S_1+In_1*S_0))*g+N*(A_1*k+A_2), A_0*S_0*g*zeta0+In_0*S_0*
b0*g+N*S_1, -In_3-R_3-204061884024275047272923400297414718011827765119199175192\
8749719228447702826115854572367795901300169912119195711925969962673454972192706\
7006968348451566272/9946431277109394454630151825233816827, -A_3*k+(gam+dlt)*
In_3+In_4, -In_3*gam+R_4, ((-A_0*S_2-2*A_1*S_1-A_2*S_0)*zeta0-2*(S_1*In_1+1/2*
S_2*In_0+1/2*In_2*S_0)*b0)*g+N*(A_2*k+A_3), ((A_0*S_1+A_1*S_0)*zeta0+b0*(In_0*
S_1+In_1*S_0))*g+N*S_2, -In_4-R_4-312162801514095241735360224273159541367383306\
9804979150503027879882520651142523431364306783578923336415664599748725183492789\
8110719602239691915677593683242630386677708541866595518797884922387501111461215\
24902605376/54332733715148438968729838835319285040137357320540192957, -A_4*k+(
gam+dlt)*In_4+In_5, -In_4*gam+R_5, ((-A_0*S_3-3*A_1*S_2-3*A_2*S_1-A_3*S_0)*
zeta0-b0*(In_0*S_3+3*In_1*S_2+3*In_2*S_1+In_3*S_0))*g+N*(A_3*k+A_4), ((A_0*S_2+
2*A_1*S_1+A_2*S_0)*zeta0+b0*(In_0*S_2+2*In_1*S_1+In_2*S_0))*g+N*S_3, -In_5-R_5+
3458902077797533624969684125443797110837708622721011417526434465457533533864600\
5123922802999017117510481948109173605223758016317476870737765302443571001062892\
5273981263523829578657639807652526749258763933749485178443380450711081121341882\
974446259346889743269741658865225536/
296794485450780058737418098930697126195312803327290597224662566575765043787, -
A_5*k+(gam+dlt)*In_5+In_6, -In_5*gam+R_6, ((-A_0*S_4-4*A_1*S_3-6*A_2*S_2-4*A_3*
S_1-A_4*S_0)*zeta0-b0*(In_0*S_4+4*In_1*S_3+6*In_2*S_2+4*In_3*S_1+In_4*S_0))*g+N
*(A_4*k+A_5), ((A_0*S_3+3*A_1*S_2+3*A_2*S_1+A_3*S_0)*zeta0+3*b0*(S_2*In_1+1/3*
S_3*In_0+In_2*S_1+1/3*In_3*S_0))*g+N*S_4, -In_6-R_6+396313023477363734688134343\
8938436685765665760535711860178038932543320583244273755251717492149237847268124\
3927474863954319656883985027689148557179491476154152503697150777318718200784329\
0171665911135755397930575230722426866194621899608449286960288267273336214186157\
13025929945836180787759457804700802891947805121764626748757221863360/1621250405\
9856256254889020608558077174768689481184579073439103946263839727656788791045204\
62317, -A_6*k+(gam+dlt)*In_6+In_7, -In_6*gam+R_7, ((-A_0*S_5-5*A_1*S_4-10*A_2*
S_3-10*A_3*S_2-5*A_4*S_1-A_5*S_0)*zeta0-b0*(In_0*S_5+5*In_1*S_4+10*In_2*S_3+10*
In_3*S_2+5*In_4*S_1+In_5*S_0))*g+N*(A_5*k+A_6), ((A_0*S_4+4*A_1*S_3+6*A_2*S_2+4
*A_3*S_1+A_4*S_0)*zeta0+4*b0*(S_1*In_3+3/2*S_2*In_2+S_3*In_1+1/4*S_4*In_0+1/4*
In_4*S_0))*g+N*S_5, -In_7-R_7-1195794352935711821643095691932269139518331805072\
5658926701425276996619932409755247894417911454383362797526743143550087741946699\
5003103518876899020089713980215261652138524531680076527334008542460976372290460\
1731864926978945265928984840114185529872327668211275287109906886513807181108221\
7931229714553996070287641730370187986677522283662460532233427428035808413065486\
132501105462536204914875072/885613785888368367344063137366792344075452142783205\
2822123512551651724887872026921649818723622013796732377211547, -A_7*k+(gam+dlt)
*In_7+In_8, -In_7*gam+R_8, ((-A_0*S_6-6*A_1*S_5-15*A_2*S_4-20*A_3*S_3-15*A_4*
S_2-6*A_5*S_1-A_6*S_0)*zeta0-b0*(In_0*S_6+6*In_1*S_5+15*In_2*S_4+20*In_3*S_3+15
*In_4*S_2+6*In_5*S_1+In_6*S_0))*g+N*(A_6*k+A_7), ((A_0*S_5+5*A_1*S_4+10*A_2*S_3
+10*A_3*S_2+5*A_4*S_1+A_5*S_0)*zeta0+b0*(In_0*S_5+5*In_1*S_4+10*In_2*S_3+10*
In_3*S_2+5*In_4*S_1+In_5*S_0))*g+N*S_6, -In_8-R_8-70367035663825938281759496377\
4385943233750950263215056773941611791530303979916047914108306056631158743026588\
5123183908234522480787803853262740589234264966992833317404368134867631306005936\
9930632743781233879110473138568536802966621143672063127967928734759985576967125\
7753548123452234214479762437891450160567276443856358511087561914661531218684611\
9326658707622165009015284755054304827592356780567474972147150788583140706688550\
26555248089015015848975936/4837696723836519161327164087238291618875597088950242\
6196267831807975135361446421669391166707684544523230167525030110563141602024477
, -A_8*k+(gam+dlt)*In_8+In_9, -In_8*gam+R_9, ((-A_0*S_7-7*A_1*S_6-21*A_2*S_5-35
*A_3*S_4-35*A_4*S_3-21*A_5*S_2-7*A_6*S_1-A_7*S_0)*zeta0-b0*(In_0*S_7+7*In_1*S_6
+21*In_2*S_5+35*In_3*S_4+35*In_4*S_3+21*In_5*S_2+7*In_6*S_1+In_7*S_0))*g+N*(A_7
*k+A_8), ((A_0*S_6+6*A_1*S_5+15*A_2*S_4+20*A_3*S_3+15*A_4*S_2+6*A_5*S_1+A_6*S_0
)*zeta0+b0*(In_0*S_6+6*In_1*S_5+15*In_2*S_4+20*In_3*S_3+15*In_4*S_2+6*In_5*S_1+
In_6*S_0))*g+N*S_7, -In_9-R_9+6760314822865348332364310457428382392768777119875\
8809519988961095685189035123113828801540357421971208616563813152178428115694434\
6423791873634252197049118312164176486959724254616055068777992730307439008387236\
2893790141897079620944468093315758891792750358743011537802586844118336102948309\
8213016882406667610616250681854506421517632827408421508060553553071321714826475\
5408772152852110211241145797634768323785943239852805025079630233795609811591055\
619996848461894312404980649097878494045055346214892130771803654976/264260899781\
9798878970585134768221596294399263168057866406015106651168213321893970362494399\
31181272516499932780966357703900406930254821593138081904107, N*z_aux-1]

SubsByDepth Usage (real, cpu, memory):	2.382 	2.547 	329503072

memory used=780.6MB, alloc=112.3MB, time=6.87
