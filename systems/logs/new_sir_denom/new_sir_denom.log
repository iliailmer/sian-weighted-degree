    |\^/|     Maple 2021 (X86 64 LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2021
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
# Ex 24 from  https://arxiv.org/abs/2006.14295
> kernelopts(printbytes=false, assertlevel=1):
> interface(echo=0, prettyprint=0):
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in SubsByDepth) `out` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `mem` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `cpu_time` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `real_time` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in WriteScripts) `weights` is implicitly declared local
|imports/create_substitutions.mpl:111|
Warning, (in WriteScripts) `max_degree` is implicitly declared local
|imports/create_substitutions.mpl:112|
Warning, (in WriteScripts) `new_weights` is implicitly declared local
|imports/create_substitutions.mpl:113|
Warning, (in WriteScripts) `each` is implicitly declared local
|imports/create_substitutions.mpl:113|

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [S(t), In(t), R(t)]
Output variables:         [y1(t)]
Input variables:          [sgm(t)]
Parameters in equations:  [Lam, c, g, mu, ph]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [Lam, g, mu, S(0), In(0)]
Nonidentifiable parameter:  [R(0), c, ph]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters {c, R(0)}
Number of possible combinations 3
Collection [c, ph] is not transcendence basis
Picked the best choice [R_0, c] based on heuristic:

=======================================================
4. Randomizing the truncated system
=======================================================
Prep CPU Time (sub_transc=true):	 .809
Prep Real Elapsed Time (sub_transc=true):	 .771
memory used=95.03MiB, alloc change=72.00MiB, cpu time=831.00ms, real time=794.00ms, gc time=112.31ms


GetPolySystem Usage (real, cpu, memory):	.794,	.831,	99642792

States for substitution:	[c = 1, mu = 1, Lam = 2, In_ = 0, S_ = 1, ph = 1, (NULL) = 1, g = 1]
NonID parameters:	[R_0, c, ph]
Substitutions:	[Lam = 3, In_ = 1, S_ = 2, z_aux = 2]
memory used=108.47MiB, alloc change=72.00MiB, cpu time=995.00ms, real time=956.00ms, gc time=112.31ms
all_subs, system_vars[1], system_vars[2], alg_indep, original_et_hat := {In_0 =
In_0, In_1 = In_1, In_2 = In_2, In_3 = In_3, In_4 = In_4, In_5 = In_5, In_6 = 
In_6, Lam = Lam^3, S_0 = S_0^2, S_1 = S_1^2, S_2 = S_2^2, S_3 = S_3^2, S_4 = 
S_4^2, S_5 = S_5^2, z_aux = z_aux^2}, [360668154942-In_0, In_0*S_0^2*g+In_0*S_0
^2*mu-844134591906*In_0*S_0^2*ph+In_0^2*g+In_0^2*mu+887091318951*In_0*S_0^2+
In_1*S_0^2+887091318951*In_0^2+In_0*In_1, -In_1+
4108358112602068754332986034002868339206385188/889409697209, 378661393887*In_0^
2+((1774182637902+2*g+2*mu)*In_1+378661393887*S_0^2+(g+mu-844134591906*ph+
887091318951)*S_1^2+In_2)*In_0+In_1^2+((g+mu-844134591906*ph+887091318951)*S_0^
2+S_1^2)*In_1+In_2*S_0^2, -Lam^3*S_0^2+S_0^4*mu-In_0*Lam^3+In_0*S_0^2*mu-\
844134591906*In_0*S_0^2*ph+S_0^2*S_1^2+In_0*S_1^2, -In_2+3625746174643965715948\
7776235418295640754790436087634678331709405273294390818249936826795622/
703567193653269449633557932176100329, 455663772508*In_0^2+(1514645575548*In_1+(
1774182637902+2*g+2*mu)*In_2+455663772508*S_0^2+757322787774*S_1^2+887091318951
*S_2^2+(g+mu-844134591906*ph)*S_2^2+In_3)*In_0+(1774182637902+2*g+2*mu)*In_1^2+
(3*In_2+757322787774*S_0^2+(2*g+2*mu-1688269183812*ph+1774182637902)*S_1^2+S_2^
2)*In_1+((g+mu-844134591906*ph+887091318951)*S_0^2+2*S_1^2)*In_2+In_3*S_0^2, 
S_1^4+(In_1+2*mu*S_0^2+(mu-844134591906*ph)*In_0-Lam^3)*S_1^2+((mu-844134591906
*ph)*S_0^2-Lam^3)*In_1+(S_0^2+In_0)*S_2^2, -In_3+299438866260962204021744778245\
1166440588413464930836308218956872419054238437595532989390219761529759428511902\
92436344058732633403636016756/
556556553788975426009482304617369673880112026000780350305049, 486972450888*In_0
^2+(2733982635048*In_1+2271968363322*In_2+(1774182637902+2*g+2*mu)*In_3-\
844134591906*ph*S_3^2+887091318951*S_3^2+1135984181661*S_2^2+1366991317524*S_1^
2+486972450888*S_0^2+S_3^2*g+S_3^2*mu+In_4)*In_0+2271968363322*In_1^2+((
5322547913706+6*g+6*mu)*In_2+4*In_3+1366991317524*S_0^2+2271968363322*S_1^2+
2661273956853*S_2^2+(3*g+3*mu-2532403775718*ph)*S_2^2+S_3^2)*In_1+3*In_2^2+(
1135984181661*S_0^2+(3*g+3*mu-2532403775718*ph+2661273956853)*S_1^2+3*S_2^2)*
In_2+((g+mu-844134591906*ph+887091318951)*S_0^2+3*S_1^2)*In_3+In_4*S_0^2, (3*
S_1^2+(2*S_0^2+In_0)*mu-844134591906*ph*In_0+2*In_1-Lam^3)*S_2^2+2*S_1^4*mu+(2*
In_1*mu-1688269183812*In_1*ph+In_2)*S_1^2+In_2*S_0^2*mu+(-Lam^3-844134591906*
S_0^2*ph)*In_2+(S_0^2+In_0)*S_3^2, -In_4+26051280895988250550440557241912619068\
2779292971680876814296225999054364703076900426144519043546286137237571049735366\
0596565549833496505611296162009860483988349276186685903612337825418/44026384453\
3538074185888775079678007993287896511932368342825495969275312445259799369, 
187050236572*In_0^2+(3895779607104*In_1+5467965270096*In_2+3029291151096*In_3+(
1774182637902+2*g+2*mu)*In_4-844134591906*S_4^2*ph+887091318951*S_4^2+
1514645575548*S_3^2+2733982635048*S_2^2+1947889803552*S_1^2+S_4^2*g+
187050236572*S_0^2+S_4^2*mu+In_5)*In_0+5467965270096*In_1^2+(9087873453288*In_2
+(7096730551608+8*g+8*mu)*In_3-3376538367624*ph*S_3^2+3548365275804*S_3^2+
4543936726644*S_2^2+5467965270096*S_1^2+1947889803552*S_0^2+4*S_3^2*g+4*S_3^2*
mu+5*In_4+S_4^2)*In_1+(5322547913706+6*g+6*mu)*In_2^2+(6*S_2^2*g+6*S_2^2*mu-\
5064807551436*S_2^2*ph+2733982635048*S_0^2+4543936726644*S_1^2+5322547913706*
S_2^2+4*S_3^2+10*In_3)*In_2+(1514645575548*S_0^2+3548365275804*S_1^2+(4*g+4*mu-\
3376538367624*ph)*S_1^2+6*S_2^2)*In_3+((g+mu-844134591906*ph+887091318951)*S_0^
2+4*S_1^2)*In_4+In_5*S_0^2, ((2*S_0^2+In_0)*mu-844134591906*ph*In_0+3*In_1-Lam^
3+4*S_1^2)*S_3^2+((6*S_2^2+3*In_2)*S_1^2+3*In_1*S_2^2+In_3*S_0^2)*mu+(-\
2532403775718*In_2*ph+In_3)*S_1^2+3*S_2^4+(-2532403775718*In_1*ph+3*In_2)*S_2^2
+(-Lam^3-844134591906*S_0^2*ph)*In_3+(S_0^2+In_0)*S_4^2, -In_5+2237258616538193\
4715364210260215511310649073216261194081965789281292987937098354771704786114570\
5267813964030435277274649062648738173522409475433879184174261199017305984807313\
81995673319001886053086558998509892872177860443943360452/3482705422905594352732\
1732632224737784879445936401212822114035181101997826140011467141081346627428975\
5911289, 339273257500*In_0^2+(1870502365720*In_1+9739449017760*In_2+
9113275450160*In_3+3786613938870*In_4+339273257500*S_0^2+887091318951*S_5^2+
1774182637902*In_5+(2*g+2*mu)*In_5-844134591906*ph*S_5^2+S_5^2*g+S_5^2*mu+
1893306969435*S_4^2+4556637725080*S_3^2+4869724508880*S_2^2+935251182860*S_1^2+
In_6)*In_0+9739449017760*In_1^2+(27339826350480*In_2+15146455755480*In_3+(
8870913189510+10*g+10*mu)*In_4-4220672959530*S_4^2*ph+4435456594755*S_4^2+
7573227877740*S_3^2+5*S_4^2*g+13669913175240*S_2^2+9739449017760*S_1^2+
935251182860*S_0^2+5*S_4^2*mu+S_5^2+6*In_5)*In_1+11359841816610*In_2^2+((
17741826379020+20*g+20*mu)*In_3-8441345919060*ph*S_3^2+8870913189510*S_3^2+
11359841816610*S_2^2+10*S_3^2*g+13669913175240*S_1^2+4869724508880*S_0^2+10*S_3
^2*mu+15*In_4+5*S_4^2)*In_2+10*In_3^2+(10*S_2^2*g+10*S_2^2*mu-8441345919060*S_2
^2*ph+4556637725080*S_0^2+7573227877740*S_1^2+8870913189510*S_2^2+10*S_3^2)*
In_3+(1893306969435*S_0^2+4435456594755*S_1^2+(5*g+5*mu-4220672959530*ph)*S_1^2
+10*S_2^2)*In_4+(887091318951*In_5+(g+mu-844134591906*ph)*In_5+In_6)*S_0^2+5*
In_5*S_1^2, ((2*S_0^2+In_0)*S_4^2+(8*S_3^2+4*In_3)*S_1^2+4*In_1*S_3^2+6*In_2*
S_2^2+In_4*S_0^2+6*S_2^4)*mu+(-Lam^3-844134591906*In_0*ph+5*S_1^2+4*In_1)*S_4^2
+(-3376538367624*In_3*ph+In_4)*S_1^2+(-5064807551436*In_2*ph+10*S_3^2+4*In_3)*
S_2^2+(-3376538367624*In_1*ph+6*In_2)*S_3^2-844134591906*ph*S_0^2*In_4-In_4*Lam
^3+(S_0^2+In_0)*S_5^2, -In_6+17580332575831886143218311972192115069892227227157\
0742479022114934445313094173615699028123580203610794036450319767718180751046542\
4723272447102460636937532808295041447834506931649402259164556440981236793265548\
06960107108986964927124006717300541200135374387031104413801336104882/2754992764\
7561037214233864978414060007348042907527454215838785073447654942098529868170393\
8947317788475368771491484961765918185008809, z_aux^2*(S_0^2+In_0)-1], [In_6, 
In_5, S_5, In_4, S_4, In_3, S_3, In_2, S_2, In_1, S_1, In_0, S_0, z_aux, w_aux,
Lam, c, g, mu, ph], [R_0, c], [360668154942-In_0, In_0^2*g+In_0^2*mu+In_0*S_0*g
+In_0*S_0*mu-844134591906*In_0*S_0*ph+887091318951*In_0^2+In_0*In_1+
887091318951*In_0*S_0+In_1*S_0, -In_1+
4108358112602068754332986034002868339206385188/889409697209, 378661393887*In_0^
2+((1774182637902+2*g+2*mu)*In_1+378661393887*S_0+(g+mu-844134591906*ph+
887091318951)*S_1+In_2)*In_0+In_1^2+((g+mu-844134591906*ph+887091318951)*S_0+
S_1)*In_1+In_2*S_0, In_0*S_0*mu-844134591906*In_0*S_0*ph+S_0^2*mu-In_0*Lam+In_0
*S_1-Lam*S_0+S_0*S_1, -In_2+362574617464396571594877762354182956407547904360876\
34678331709405273294390818249936826795622/703567193653269449633557932176100329,
455663772508*In_0^2+(1514645575548*In_1+(1774182637902+2*g+2*mu)*In_2+
455663772508*S_0+757322787774*S_1+887091318951*S_2+(g+mu-844134591906*ph)*S_2+
In_3)*In_0+(1774182637902+2*g+2*mu)*In_1^2+(3*In_2+757322787774*S_0+(2*g+2*mu-\
1688269183812*ph+1774182637902)*S_1+S_2)*In_1+((g+mu-844134591906*ph+
887091318951)*S_0+2*S_1)*In_2+In_3*S_0, S_1^2+(In_1+2*mu*S_0+(mu-844134591906*
ph)*In_0-Lam)*S_1+((mu-844134591906*ph)*S_0-Lam)*In_1+(S_0+In_0)*S_2, -In_3+299\
4388662609622040217447782451166440588413464930836308218956872419054238437595532\
98939021976152975942851190292436344058732633403636016756/
556556553788975426009482304617369673880112026000780350305049, 486972450888*In_0
^2+(2733982635048*In_1+2271968363322*In_2+(1774182637902+2*g+2*mu)*In_3-\
844134591906*ph*S_3+887091318951*S_3+1135984181661*S_2+1366991317524*S_1+
486972450888*S_0+S_3*g+S_3*mu+In_4)*In_0+2271968363322*In_1^2+((5322547913706+6
*g+6*mu)*In_2+4*In_3+1366991317524*S_0+2271968363322*S_1+2661273956853*S_2+(3*g
+3*mu-2532403775718*ph)*S_2+S_3)*In_1+3*In_2^2+(1135984181661*S_0+(3*g+3*mu-\
2532403775718*ph+2661273956853)*S_1+3*S_2)*In_2+((g+mu-844134591906*ph+
887091318951)*S_0+3*S_1)*In_3+In_4*S_0, (3*S_1+(2*S_0+In_0)*mu-844134591906*ph*
In_0+2*In_1-Lam)*S_2+2*S_1^2*mu+(2*In_1*mu-1688269183812*In_1*ph+In_2)*S_1+In_2
*S_0*mu+(-844134591906*S_0*ph-Lam)*In_2+(S_0+In_0)*S_3, -In_4+26051280895988250\
5504405572419126190682779292971680876814296225999054364703076900426144519043546\
2861372375710497353660596565549833496505611296162009860483988349276186685903612\
337825418/440263844533538074185888775079678007993287896511932368342825495969275\
312445259799369, 187050236572*In_0^2+(3895779607104*In_1+5467965270096*In_2+
3029291151096*In_3+(1774182637902+2*g+2*mu)*In_4-844134591906*S_4*ph+
887091318951*S_4+1514645575548*S_3+2733982635048*S_2+1947889803552*S_1+S_4*g+
187050236572*S_0+S_4*mu+In_5)*In_0+5467965270096*In_1^2+(9087873453288*In_2+(
7096730551608+8*g+8*mu)*In_3-3376538367624*ph*S_3+3548365275804*S_3+
4543936726644*S_2+5467965270096*S_1+1947889803552*S_0+4*S_3*g+4*S_3*mu+5*In_4+
S_4)*In_1+(5322547913706+6*g+6*mu)*In_2^2+(6*S_2*g+6*S_2*mu-5064807551436*S_2*
ph+10*In_3+2733982635048*S_0+4543936726644*S_1+5322547913706*S_2+4*S_3)*In_2+(
1514645575548*S_0+3548365275804*S_1+(4*g+4*mu-3376538367624*ph)*S_1+6*S_2)*In_3
+((g+mu-844134591906*ph+887091318951)*S_0+4*S_1)*In_4+In_5*S_0, ((2*S_0+In_0)*
mu-844134591906*ph*In_0+3*In_1-Lam+4*S_1)*S_3+((3*In_2+6*S_2)*S_1+3*In_1*S_2+
In_3*S_0)*mu+(-2532403775718*In_2*ph+In_3)*S_1+3*S_2^2+(-2532403775718*In_1*ph+
3*In_2)*S_2+(-844134591906*S_0*ph-Lam)*In_3+(S_0+In_0)*S_4, -In_5+2237258616538\
1934715364210260215511310649073216261194081965789281292987937098354771704786114\
5705267813964030435277274649062648738173522409475433879184174261199017305984807\
31381995673319001886053086558998509892872177860443943360452/3482705422905594352\
7321732632224737784879445936401212822114035181101997826140011467141081346627428\
9755911289, 339273257500*In_0^2+(1870502365720*In_1+9739449017760*In_2+
9113275450160*In_3+3786613938870*In_4+339273257500*S_0+887091318951*S_5+
1774182637902*In_5+(2*g+2*mu)*In_5-844134591906*ph*S_5+S_5*g+S_5*mu+
1893306969435*S_4+4556637725080*S_3+4869724508880*S_2+935251182860*S_1+In_6)*
In_0+9739449017760*In_1^2+(27339826350480*In_2+15146455755480*In_3+(
8870913189510+10*g+10*mu)*In_4-4220672959530*S_4*ph+4435456594755*S_4+
7573227877740*S_3+5*S_4*g+13669913175240*S_2+9739449017760*S_1+935251182860*S_0
+5*S_4*mu+S_5+6*In_5)*In_1+11359841816610*In_2^2+((17741826379020+20*g+20*mu)*
In_3-8441345919060*ph*S_3+8870913189510*S_3+11359841816610*S_2+10*S_3*g+
13669913175240*S_1+4869724508880*S_0+10*S_3*mu+15*In_4+5*S_4)*In_2+10*In_3^2+(
10*S_2*g+10*S_2*mu-8441345919060*S_2*ph+4556637725080*S_0+7573227877740*S_1+
8870913189510*S_2+10*S_3)*In_3+(1893306969435*S_0+4435456594755*S_1+(5*g+5*mu-\
4220672959530*ph)*S_1+10*S_2)*In_4+(887091318951*In_5+(g+mu-844134591906*ph)*
In_5+In_6)*S_0+5*In_5*S_1, ((2*S_0+In_0)*S_4+(4*In_3+8*S_3)*S_1+4*In_1*S_3+6*
In_2*S_2+In_4*S_0+6*S_2^2)*mu+(-844134591906*In_0*ph+4*In_1-Lam+5*S_1)*S_4+(-\
3376538367624*In_3*ph+In_4)*S_1+(-5064807551436*In_2*ph+4*In_3+10*S_3)*S_2+(-\
3376538367624*In_1*ph+6*In_2)*S_3-844134591906*ph*S_0*In_4-In_4*Lam+(S_0+In_0)*
S_5, -In_6+17580332575831886143218311972192115069892227227157074247902211493444\
5313094173615699028123580203610794036450319767718180751046542472327244710246063\
6937532808295041447834506931649402259164556440981236793265548069601071089869649\
27124006717300541200135374387031104413801336104882/2754992764756103721423386497\
8414060007348042907527454215838785073447654942098529868170393894731778847536877\
1491484961765918185008809, z_aux*(S_0+In_0)-1]

SubsByDepth Usage (real, cpu, memory):	.956,	.995,	113735144


=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [S(t), In(t), R(t)]
Output variables:         [y1(t)]
Input variables:          [sgm(t)]
Parameters in equations:  [Lam, c, g, mu, ph]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [Lam, g, mu, S(0), In(0)]
Nonidentifiable parameter:  [R(0), c, ph]

=======================================================
4. Randomizing the truncated system
=======================================================
Prep CPU Time (sub_transc=false):	 .786
Prep Real Elapsed Time (sub_transc=false):	 .680
memory used=61.42MiB, alloc change=0 bytes, cpu time=787.00ms, real time=680.00ms, gc time=270.76ms


GetPolySystem Usage (real, cpu, memory):	.680,	.787,	64403472

States for substitution:	[c = 1, mu = 1, Lam = 2, In_ = 0, S_ = 1, ph = 1, (NULL) = 1, g = 1]
NonID parameters:	[R_0, c, ph]
Substitutions:	[Lam = 3, In_ = 1, S_ = 2, z_aux = 2]
memory used=73.29MiB, alloc change=0 bytes, cpu time=893.00ms, real time=786.00ms, gc time=270.76ms
all_subs, system_vars[1], system_vars[2], alg_indep, original_et_hat := {In_0 =
In_0, In_1 = In_1, In_2 = In_2, In_3 = In_3, In_4 = In_4, In_5 = In_5, In_6 = 
In_6, Lam = Lam^3, S_0 = S_0^2, S_1 = S_1^2, S_2 = S_2^2, S_3 = S_3^2, S_4 = 
S_4^2, S_5 = S_5^2, z_aux = z_aux^2}, [37093866304-In_0, -In_0*S_0^2*c*ph+In_0*
S_0^2*g+In_0*S_0^2*mu+In_0^2*g+In_0^2*mu+177142687618*In_0*S_0^2+In_1*S_0^2+
177142687618*In_0^2+In_0*In_1, -In_1+
1367451744855761446782836631003128112215296384/98210004327, 686091929019*In_0^2
+((354285375236+2*g+2*mu)*In_1+686091929019*S_0^2+(-c*ph+g+mu+177142687618)*S_1
^2+In_2)*In_0+In_1^2+((-c*ph+g+mu+177142687618)*S_0^2+S_1^2)*In_1+In_2*S_0^2, -
In_0*S_0^2*c*ph-Lam^3*S_0^2+S_0^4*mu-In_0*Lam^3+In_0*S_0^2*mu+S_0^2*S_1^2+In_0*
S_1^2, -In_2+453208928589529483737069282407281386189494010953348301713093703641\
5758883146285885495229120/947255619865399938436652284113783, 276389599885*In_0^
2+(2744367716076*In_1+(354285375236+2*g+2*mu)*In_2+276389599885*S_0^2+
1372183858038*S_1^2+177142687618*S_2^2+(-c*ph+g+mu)*S_2^2+In_3)*In_0+(
354285375236+2*g+2*mu)*In_1^2+(3*In_2+1372183858038*S_0^2+(-2*c*ph+2*g+2*mu+
354285375236)*S_1^2+S_2^2)*In_1+((-c*ph+g+mu+177142687618)*S_0^2+2*S_1^2)*In_2+
In_3*S_0^2, S_1^4+(In_1+2*mu*S_0^2+(-c*ph+mu)*In_0-Lam^3)*S_1^2+((-c*ph+mu)*S_0
^2-Lam^3)*In_1+(S_0^2+In_0)*S_2^2, -In_3+41870229724875045366013503457737640778\
4876520285581735426984125343950331357927220154946849739328735983649639972617739\
4574679028209033536/3045491531185071120280537434872334404186602527802343469, 
355789807448*In_0^2+(1658337599310*In_1+4116551574114*In_2+(354285375236+2*g+2*
mu)*In_3-c*ph*S_3^2+177142687618*S_3^2+2058275787057*S_2^2+829168799655*S_1^2+
355789807448*S_0^2+S_3^2*g+S_3^2*mu+In_4)*In_0+4116551574114*In_1^2+((
1062856125708+6*g+6*mu)*In_2+4*In_3+829168799655*S_0^2+4116551574114*S_1^2+
531428062854*S_2^2+(-3*c*ph+3*g+3*mu)*S_2^2+S_3^2)*In_1+3*In_2^2+(2058275787057
*S_0^2+(-3*c*ph+3*g+3*mu+531428062854)*S_1^2+3*S_2^2)*In_2+((-c*ph+g+mu+
177142687618)*S_0^2+3*S_1^2)*In_3+In_4*S_0^2, (3*S_1^2+(2*S_0^2+In_0)*mu-c*ph*
In_0+2*In_1-Lam^3)*S_2^2+2*S_1^4*mu+(-2*In_1*c*ph+2*In_1*mu+In_2)*S_1^2+In_2*
S_0^2*mu+(-S_0^2*c*ph-Lam^3)*In_2+(S_0^2+In_0)*S_3^2, -In_4+7407216810385126754\
9148481750421813256445821895683961373313350030968749040234680973895398797090725\
3711032720166708583488115750634699984806893530217590412704286441247115542957858\
9440/
29374389991493280093736354987098753852432868544599232306690290354903263700701,
266282390033*In_0^2+(2846318459584*In_1+3316675198620*In_2+5488735432152*In_3+(
354285375236+2*g+2*mu)*In_4-S_4^2*c*ph+177142687618*S_4^2+2744367716076*S_3^2+
1658337599310*S_2^2+1423159229792*S_1^2+S_4^2*g+266282390033*S_0^2+S_4^2*mu+
In_5)*In_0+3316675198620*In_1^2+(16466206296456*In_2+(1417141500944+8*g+8*mu)*
In_3-4*c*ph*S_3^2+708570750472*S_3^2+8233103148228*S_2^2+3316675198620*S_1^2+
1423159229792*S_0^2+4*S_3^2*g+4*S_3^2*mu+5*In_4+S_4^2)*In_1+(1062856125708+6*g+
6*mu)*In_2^2+(-6*S_2^2*c*ph+6*S_2^2*g+6*S_2^2*mu+1658337599310*S_0^2+
8233103148228*S_1^2+1062856125708*S_2^2+4*S_3^2+10*In_3)*In_2+(2744367716076*
S_0^2+708570750472*S_1^2+(-4*c*ph+4*g+4*mu)*S_1^2+6*S_2^2)*In_3+((-c*ph+g+mu+
177142687618)*S_0^2+4*S_1^2)*In_4+In_5*S_0^2, ((2*S_0^2+In_0)*mu-c*ph*In_0+3*
In_1-Lam^3+4*S_1^2)*S_3^2+((6*S_2^2+3*In_2)*S_1^2+3*In_1*S_2^2+In_3*S_0^2)*mu+(
-3*In_2*c*ph+In_3)*S_1^2+3*S_2^4+(-3*In_1*c*ph+3*In_2)*S_2^2+(-S_0^2*c*ph-Lam^3
)*In_3+(S_0^2+In_0)*S_4^2, -In_5-3748086260618692184565169377951188076025396274\
4109339052773763629947290170429721755315269967151751422958392062496661307051507\
7972893123827762886211988733333195647538725842260952175089422216857465725214725\
8419657690972583290880/28332201174651891082983180338251112099230584245069061492\
5510767111885606762112378021452583842073229, 493030700650*In_0^2+(2662823900330
*In_1+7115796148960*In_2+5527791997700*In_3+6860919290190*In_4+493030700650*S_0
^2+177142687618*S_5^2+354285375236*In_5+(2*g+2*mu)*In_5-c*ph*S_5^2+S_5^2*g+S_5^
2*mu+3430459645095*S_4^2+2763895998850*S_3^2+3557898074480*S_2^2+1331411950165*
S_1^2+In_6)*In_0+7115796148960*In_1^2+(16583375993100*In_2+27443677160760*In_3+
(1771426876180+10*g+10*mu)*In_4-5*S_4^2*c*ph+885713438090*S_4^2+13721838580380*
S_3^2+5*S_4^2*g+8291687996550*S_2^2+7115796148960*S_1^2+1331411950165*S_0^2+5*
S_4^2*mu+S_5^2+6*In_5)*In_1+20582757870570*In_2^2+((3542853752360+20*g+20*mu)*
In_3-10*c*ph*S_3^2+1771426876180*S_3^2+20582757870570*S_2^2+10*S_3^2*g+
8291687996550*S_1^2+3557898074480*S_0^2+10*S_3^2*mu+15*In_4+5*S_4^2)*In_2+10*
In_3^2+(-10*S_2^2*c*ph+10*S_2^2*g+10*S_2^2*mu+2763895998850*S_0^2+
13721838580380*S_1^2+1771426876180*S_2^2+10*S_3^2)*In_3+(3430459645095*S_0^2+
885713438090*S_1^2+(-5*c*ph+5*g+5*mu)*S_1^2+10*S_2^2)*In_4+(177142687618*In_5+(
-c*ph+g+mu)*In_5+In_6)*S_0^2+5*In_5*S_1^2, ((2*S_0^2+In_0)*S_4^2+(8*S_3^2+4*
In_3)*S_1^2+4*In_1*S_3^2+6*In_2*S_2^2+In_4*S_0^2+6*S_2^4)*mu+(-In_0*c*ph-Lam^3+
5*S_1^2+4*In_1)*S_4^2+(-4*In_3*c*ph+In_4)*S_1^2+(-6*In_2*c*ph+10*S_3^2+4*In_3)*
S_2^2+(-4*In_1*c*ph+6*In_2)*S_3^2-In_4*S_0^2*c*ph-In_4*Lam^3+(S_0^2+In_0)*S_5^2
, -In_6-37539285177743708200861132145079777315957281181788347958884170625756097\
1982567255633546244315173871348124671459970560770764592335180800913389998390177\
1267601638769695422731644619836035101793821740508413612153181458097043543939271\
003747142749227178030187676985976255732400/303633207790644630559719220048461675\
6224794931117465390748150233936770743008552892454448987358192835754850369714599\
29749, z_aux^2*(S_0^2+In_0)-1], [In_6, In_5, S_5, In_4, S_4, In_3, S_3, In_2, 
S_2, In_1, S_1, In_0, S_0, z_aux, w_aux, Lam, c, g, mu, ph], [], [37093866304-
In_0, -In_0*S_0*c*ph+In_0^2*g+In_0^2*mu+In_0*S_0*g+In_0*S_0*mu+177142687618*
In_0^2+In_0*In_1+177142687618*In_0*S_0+In_1*S_0, -In_1+
1367451744855761446782836631003128112215296384/98210004327, 686091929019*In_0^2
+((354285375236+2*g+2*mu)*In_1+686091929019*S_0+(-c*ph+g+mu+177142687618)*S_1+
In_2)*In_0+In_1^2+((-c*ph+g+mu+177142687618)*S_0+S_1)*In_1+In_2*S_0, -In_0*S_0*
c*ph+In_0*S_0*mu+S_0^2*mu-In_0*Lam+In_0*S_1-Lam*S_0+S_0*S_1, -In_2+453208928589\
5294837370692824072813861894940109533483017130937036415758883146285885495229120
/947255619865399938436652284113783, 276389599885*In_0^2+(2744367716076*In_1+(
354285375236+2*g+2*mu)*In_2+276389599885*S_0+1372183858038*S_1+177142687618*S_2
+(-c*ph+g+mu)*S_2+In_3)*In_0+(354285375236+2*g+2*mu)*In_1^2+(3*In_2+
1372183858038*S_0+(-2*c*ph+2*g+2*mu+354285375236)*S_1+S_2)*In_1+((-c*ph+g+mu+
177142687618)*S_0+2*S_1)*In_2+In_3*S_0, S_1^2+(In_1+2*mu*S_0+(-c*ph+mu)*In_0-
Lam)*S_1+((-c*ph+mu)*S_0-Lam)*In_1+(S_0+In_0)*S_2, -In_3+4187022972487504536601\
3503457737640778487652028558173542698412534395033135792722015494684973932873598\
36496399726177394574679028209033536/
3045491531185071120280537434872334404186602527802343469, 355789807448*In_0^2+(
1658337599310*In_1+4116551574114*In_2+(354285375236+2*g+2*mu)*In_3-c*ph*S_3+
177142687618*S_3+2058275787057*S_2+829168799655*S_1+355789807448*S_0+S_3*g+S_3*
mu+In_4)*In_0+4116551574114*In_1^2+((1062856125708+6*g+6*mu)*In_2+4*In_3+
829168799655*S_0+4116551574114*S_1+531428062854*S_2+(-3*c*ph+3*g+3*mu)*S_2+S_3)
*In_1+3*In_2^2+(2058275787057*S_0+(-3*c*ph+3*g+3*mu+531428062854)*S_1+3*S_2)*
In_2+((-c*ph+g+mu+177142687618)*S_0+3*S_1)*In_3+In_4*S_0, (3*S_1+(2*S_0+In_0)*
mu-c*ph*In_0+2*In_1-Lam)*S_2+2*S_1^2*mu+(-2*In_1*c*ph+2*In_1*mu+In_2)*S_1+In_2*
S_0*mu+(-S_0*c*ph-Lam)*In_2+(S_0+In_0)*S_3, -In_4+74072168103851267549148481750\
4218132564458218956839613733133500309687490402346809738953987970907253711032720\
1667085834881157506346999848068935302175904127042864412471155429578589440/
29374389991493280093736354987098753852432868544599232306690290354903263700701,
266282390033*In_0^2+(2846318459584*In_1+3316675198620*In_2+5488735432152*In_3+(
354285375236+2*g+2*mu)*In_4-S_4*c*ph+177142687618*S_4+2744367716076*S_3+
1658337599310*S_2+1423159229792*S_1+S_4*g+266282390033*S_0+S_4*mu+In_5)*In_0+
3316675198620*In_1^2+(16466206296456*In_2+(1417141500944+8*g+8*mu)*In_3-4*c*ph*
S_3+708570750472*S_3+8233103148228*S_2+3316675198620*S_1+1423159229792*S_0+4*
S_3*g+4*S_3*mu+5*In_4+S_4)*In_1+(1062856125708+6*g+6*mu)*In_2^2+(-6*S_2*c*ph+6*
S_2*g+6*S_2*mu+10*In_3+1658337599310*S_0+8233103148228*S_1+1062856125708*S_2+4*
S_3)*In_2+(2744367716076*S_0+708570750472*S_1+(-4*c*ph+4*g+4*mu)*S_1+6*S_2)*
In_3+((-c*ph+g+mu+177142687618)*S_0+4*S_1)*In_4+In_5*S_0, ((2*S_0+In_0)*mu-c*ph
*In_0+3*In_1-Lam+4*S_1)*S_3+((3*In_2+6*S_2)*S_1+3*In_1*S_2+In_3*S_0)*mu+(-3*
In_2*c*ph+In_3)*S_1+3*S_2^2+(-3*In_1*c*ph+3*In_2)*S_2+(-S_0*c*ph-Lam)*In_3+(S_0
+In_0)*S_4, -In_5-3748086260618692184565169377951188076025396274410933905277376\
3629947290170429721755315269967151751422958392062496661307051507797289312382776\
2886211988733333195647538725842260952175089422216857465725214725841965769097258\
3290880/28332201174651891082983180338251112099230584245069061492551076711188560\
6762112378021452583842073229, 493030700650*In_0^2+(2662823900330*In_1+
7115796148960*In_2+5527791997700*In_3+6860919290190*In_4+493030700650*S_0+
177142687618*S_5+354285375236*In_5+(2*g+2*mu)*In_5-c*ph*S_5+S_5*g+S_5*mu+
3430459645095*S_4+2763895998850*S_3+3557898074480*S_2+1331411950165*S_1+In_6)*
In_0+7115796148960*In_1^2+(16583375993100*In_2+27443677160760*In_3+(
1771426876180+10*g+10*mu)*In_4-5*S_4*c*ph+885713438090*S_4+13721838580380*S_3+5
*S_4*g+8291687996550*S_2+7115796148960*S_1+1331411950165*S_0+5*S_4*mu+S_5+6*
In_5)*In_1+20582757870570*In_2^2+((3542853752360+20*g+20*mu)*In_3-10*c*ph*S_3+
1771426876180*S_3+20582757870570*S_2+10*S_3*g+8291687996550*S_1+3557898074480*
S_0+10*S_3*mu+15*In_4+5*S_4)*In_2+10*In_3^2+(-10*S_2*c*ph+10*S_2*g+10*S_2*mu+
2763895998850*S_0+13721838580380*S_1+1771426876180*S_2+10*S_3)*In_3+(
3430459645095*S_0+885713438090*S_1+(-5*c*ph+5*g+5*mu)*S_1+10*S_2)*In_4+(
177142687618*In_5+(-c*ph+g+mu)*In_5+In_6)*S_0+5*In_5*S_1, ((2*S_0+In_0)*S_4+(4*
In_3+8*S_3)*S_1+4*In_1*S_3+6*In_2*S_2+In_4*S_0+6*S_2^2)*mu+(-In_0*c*ph+4*In_1-
Lam+5*S_1)*S_4+(-4*In_3*c*ph+In_4)*S_1+(-6*In_2*c*ph+4*In_3+10*S_3)*S_2+(-4*
In_1*c*ph+6*In_2)*S_3-In_4*S_0*c*ph-In_4*Lam+(S_0+In_0)*S_5, -In_6-375392851777\
4370820086113214507977731595728118178834795888417062575609719825672556335462443\
1517387134812467145997056077076459233518080091338999839017712676016387696954227\
3164461983603510179382174050841361215318145809704354393927100374714274922717803\
0187676985976255732400/30363320779064463055971922004846167562247949311174653907\
4815023393677074300855289245444898735819283575485036971459929749, z_aux*(S_0+
In_0)-1]

SubsByDepth Usage (real, cpu, memory):	.786,	.893,	76852912

memory used=187.5MB, alloc=112.3MB, time=2.11
