    |\^/|     Maple 2021 (X86 64 LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2021
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
# brain model, reduced 16 37 https://link.springer.com/article/10.1007/s10928-021-09776-7 
# 2021 Bloomingdale et al. a reduced version of a 100-eq model

> kernelopts(printbytes=false, assertlevel=1):
> interface(echo=0, prettyprint=0):
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:324|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:490|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:324|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:490|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:324|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:490|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:324|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:490|
Warning, (in WriteScripts) `weights` is implicitly declared local
|imports/create_substitutions.mpl:107|
Warning, (in WriteScripts) `max_degree` is implicitly declared local
|imports/create_substitutions.mpl:108|
Warning, (in WriteScripts) `new_weights` is implicitly declared local
|imports/create_substitutions.mpl:109|
Warning, (in WriteScripts) `each` is implicitly declared local
|imports/create_substitutions.mpl:109|
sigma := [diff(Cp(t),t) = ((QT-LT)*CTv(t)+(Qb-Lb)*CBv(t)+(LT+Lb)*CL(t)-QT*Cp(t)
-Qb*Cp(t))/VP, diff(CTv(t),t) = (QT*Cp(t)-(QT-LT)*CTv(t)-(1-sigmaTv)*LT*CTv(t)-
CLupt*CTv(t)-CLupt*FR*CTeb(t))/Vtv, diff(CTeu(t),t) = (CLupt*(CTv(t)+CTl(t))-
VTe*(KonFcRn*CTeu(t)*CTFcRnU(t)+KoffFcRn*CTeb(t)-kdeg*CTeu(t)))/VTe, diff(CTeb(
t),t) = (VTe*(KonFcRn*CTeu(t)*CTFcRnU(t)-KoffFcRn*CTeb(t))-CLupt*CTeb(t))/VTe,
diff(CTl(t),t) = ((1-sigmaTv)*LT*CTv(t)-(1-sigmaTL)*LT*CTl(t)+CLupt*(1-FR)*CTeb
(t)-CLupt*CTl(t))/VTl, diff(CBv(t),t) = (Qb*Cp(t)-(Qb-Lb)*CBv(t)-(1-sigmaBBB)*
Qbecf*CBv(t)-(1-sigmaBCSFB)*QBcsf*CBv(t)-CLupb*CBv(t)+CLupbbb*FRb*CBebbbb(t)+
CLupbcsfb*FRb*CBebcsfbb(t))/VBv, diff(CBebbbu(t),t) = (CLupbbb*(CBv(t)+CBl(t))+
VBebbb*(-KonFcRn*CBebbbu(t)*CbbbbFcRnu(t)+KoffFcRn*CBebbbb(t)-kdeg*CBebbbu(t)))
/VBebbb, diff(CBebbbb(t),t) = (VBebbb*(KonFcRn*CBebbbu(t)*CbbbbFcRnu(t)-
KoffFcRn*CBebbbb(t))-CLupbbb*CBebbbb(t))/VBebbb, diff(CBl(t),t) = ((1-sigmaBBB)
*Qbecf*CBv(t)-(1-sigmaBISF)*QBecf*CBl(t)+CLupbbb*(1-FRb)*CBebbbb(t)-CLupbbb*CBl
(t)-QBecf*CBl(t)+QBecf*CBcsf(t))/VBl, diff(CBebcsfbu(t),t) = (CLupbcsfb*CBv(t)+
CLupbcsfb*CBcsf(t)+Vbebcsfb*(-KonFcRn*CBebcsfbu(t)+KoffFcRn*CBebcsfbb(t)-kdeg*
CBebcsfbu(t)))/Vbebcsfb, diff(CBebcsfbb(t),t) = (Vbebcsfb*(KonFcRn*CBebcsfbu(t)
*CBbcsfbFcRnu(t)-KoffFcRn*CBebcsfbb(t))-CLupbcsfb*CBebcsfbb(t))/Vbebcsfb, diff(
CBcsf(t),t) = ((1-sigmaBCSFB)*QBcsf*CBv(t)-CLupbcsfb*CBcsf(t)+CLupbcsfb*(1-FRb)
*CBebcsfbb(t)+QBecf*CBl(t)-(1-sigmaBCSFB)*QBcsf*CBcsf(t)-QBecf*CBcsf(t))/Vcsf,
diff(CL(t),t) = ((1-sigmaTL)*LT*CTl(t)+(1-sigmaBCSFB)*QBcsf*CBcsf(t)+(1-
sigmaBlsf)*QBecf*CBl(t)-(LT+LB)*CL(t))/VL, diff(CTFcRnU(t),t) = (-VTe*(KonFcRn*
CTeu(t)*CTFcRnU(t)+KoffFcRn*CTeb(t))+CLupt*CTeb(t))/VTe, diff(CbbbbFcRnu(t),t)
= (VBebbb*(-KonFcRn*CBebbbu(t)*CbbbbFcRnu(t)+KoffFcRn*CBebbbb(t))+CLupbbb*
CBebbbb(t))/VBebbb, diff(CBbcsfbFcRnu(t),t) = (Vbebcsfb*(-KonFcRn*CBebcsfbu(t)*
CBbcsfbFcRnu(t)+KoffFcRn*CBebcsfbb(t))+CLupbcsfb*CBebcsfbb(t))/Vbebcsfb, y1(t)
= Cp(t), y2(t) = CBebcsfbu(t), y3(t) = CBebcsfbb(t), y4(t) = CBbcsfbFcRnu(t)]

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [Cp(t), CTv(t), CTeu(t), CTeb(t), CTl(t), CBv(t), CBebbbu(t), CBebbbb(t), CBl(t), CBebcsfbu(t), CBebcsfbb(t), CBcsf(t), CL(t), CTFcRnU(t), CbbbbFcRnu(t), CBbcsfbFcRnu(t)]
Output variables:         [y1(t), y2(t), y3(t), y4(t)]
Input variables:          []
Parameters in equations:  [CLupb, CLupbbb, CLupt, FR, FRb, KonFcRn, LB, LT, Lb, QBcsf, QBecf, QT, Qb, Qbecf, VBebbb, VBl, VBv, VL, VP, VTe, VTl, Vcsf, Vtv, kdeg, sigmaTL, sigmaTv, CLupbcsfb, KoffFcRn, Vbebcsfb, sigmaBBB, sigmaBCSFB, sigmaBISF, sigmaBlsf]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================
Interrupted
