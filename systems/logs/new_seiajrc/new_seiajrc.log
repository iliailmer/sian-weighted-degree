    |\^/|     Maple 2021 (X86 64 LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2021
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
> kernelopts(printbytes=false, assertlevel=1):
> interface(echo=0, prettyprint=0):
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:324|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:490|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:324|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:490|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:324|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:490|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:324|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:490|
Warning, (in WriteScripts) `weights` is implicitly declared local
|imports/create_substitutions.mpl:107|
Warning, (in WriteScripts) `max_degree` is implicitly declared local
|imports/create_substitutions.mpl:108|
Warning, (in WriteScripts) `new_weights` is implicitly declared local
|imports/create_substitutions.mpl:109|
Warning, (in WriteScripts) `each` is implicitly declared local
|imports/create_substitutions.mpl:109|
sigma := [diff(S(t),t) = -b*S(t)*Ninv*A(t)*q-b*S(t)*Ninv*II(t)-b*S(t)*Ninv*J(t)
, diff(A(t),t) = -E(t)*k*r+E(t)*k-A(t)*g1, diff(E(t),t) = b*S(t)*Ninv*A(t)*q+b*
S(t)*Ninv*II(t)+b*S(t)*Ninv*J(t)-E(t)*k, diff(C(t),t) = alpha*II(t), diff(J(t),
t) = alpha*II(t)-g2*J(t), diff(II(t),t) = -alpha*II(t)+E(t)*k*r-g1*II(t), y2(t)
= Ninv, y(t) = C(t)]

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [S(t), A(t), E(t), C(t), J(t), II(t)]
Output variables:         [y2(t), y(t)]
Input variables:          []
Parameters in equations:  [Ninv, alpha, b, g1, g2, k, q, r]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [Ninv, alpha, b, g1, g2, k, C(0), J(0), II(0)]
Nonidentifiable parameter:  [A(0), E(0), S(0), q, r]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters {A(0)}
Number of possible combinations 33
Picked the best choice [q] based on heuristic:
Algebraically independent parameters among nonidentifiable: {q}
Algebraically independent parameters among derivatives: {}

=== Input info ===
State variables:          [q(t), S(t), A(t), E(t), C(t), J(t), II(t)]
Output variables:         [y2(t), y(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [Ninv, alpha, b, g1, g2, k, r]
===================

Transcendence basis substitution turned off.

=======================================================
4. Randomizing the truncated system
=======================================================
States for substitution:	[k = 2, g2 = 4, II_ = 1, alpha = 1, Ninv = 0, g1 = 2, E_ = 2, A_ = 3, b = 3, r = 2, q_ = 0, S_ = 3, J_ = 3, C_ = 0]
NonID parameters:	[A_0, E_0, S_0, q, r]
Substitutions:	[g2 = 5, II_ = 2, E_ = 3, A_ = 4, q_ = 1, z_aux = 3, S_ = 4, J_ = 4]

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [S(t), A(t), E(t), C(t), J(t), II(t)]
Output variables:         [y2(t), y(t)]
Input variables:          []
Parameters in equations:  [Ninv, alpha, b, g1, g2, k, q, r]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [Ninv, alpha, b, g1, g2, k, C(0), J(0), II(0)]
Nonidentifiable parameter:  [A(0), E(0), S(0), q, r]

=======================================================
4. Randomizing the truncated system
=======================================================
States for substitution:	[k = 2, g2 = 4, II_ = 1, alpha = 1, Ninv = 0, g1 = 2, E_ = 2, A_ = 3, b = 3, r = 2, q = 3, S_ = 3, J_ = 3, C_ = 0]
NonID parameters:	[A_0, E_0, S_0, q, r]
Substitutions:	[g2 = 5, II_ = 2, E_ = 3, A_ = 4, z_aux = 3, S_ = 4, J_ = 4]
memory used=2870.7MB, alloc=179.8MB, time=26.32
