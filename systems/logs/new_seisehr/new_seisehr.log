    |\^/|     Maple 2021 (X86 64 LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2021
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
# Ex 38 from  https://arxiv.org/abs/2006.14295
> kernelopts(printbytes=false, assertlevel=1):
> interface(echo=0, prettyprint=0):
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:324|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:490|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:324|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:490|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:324|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:490|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:324|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:490|
Warning, (in WriteScripts) `weights` is implicitly declared local
|imports/create_substitutions.mpl:107|
Warning, (in WriteScripts) `max_degree` is implicitly declared local
|imports/create_substitutions.mpl:108|
Warning, (in WriteScripts) `new_weights` is implicitly declared local
|imports/create_substitutions.mpl:109|
Warning, (in WriteScripts) `each` is implicitly declared local
|imports/create_substitutions.mpl:109|

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [s(t), e(t), i(t), sq(t), eq(t), h(t), r(t)]
Output variables:         [y1(t)]
Input variables:          [sgm(t)]
Parameters in equations:  [alpha, b, c, dlt_i, dlt_q, g_h, g_i, lmb, q, theta0]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [alpha, b, c, dlt_i, dlt_q, g_h, g_i, lmb, q, theta0, s(0), e(0), i(0), sq(0), eq(0), h(0), r(0)]
Nonidentifiable parameter:  []

=======================================================
4. Randomizing the truncated system
=======================================================
States for substitution:	[r_ = 0, (NULL) = 1, eq_ = 2, theta0 = 2, sq_ = 3, e_ = 1, s_ = 2, lmb = 3, h_ = 1, g_h = 1, dlt_i = 1, c = 2, g_i = 2, b = 2, alpha = 1, dlt_q = 2, i_ = 0, q = 2]
NonID parameters:	[]
Substitutions:	[z_aux = 3, eq_ = 3, sq_ = 4, e_ = 2, s_ = 3, lmb = 4, h_ = 2, i_ = 1]

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [s(t), e(t), i(t), sq(t), eq(t), h(t), r(t)]
Output variables:         [y1(t)]
Input variables:          [sgm(t)]
Parameters in equations:  [alpha, b, c, dlt_i, dlt_q, g_h, g_i, lmb, q, theta0]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [alpha, b, c, dlt_i, dlt_q, g_h, g_i, lmb, q, theta0, s(0), e(0), i(0), sq(0), eq(0), h(0), r(0)]
Nonidentifiable parameter:  []

=======================================================
4. Randomizing the truncated system
=======================================================
States for substitution:	[r_ = 0, (NULL) = 1, eq_ = 2, theta0 = 2, sq_ = 3, e_ = 1, s_ = 2, lmb = 3, h_ = 1, g_h = 1, dlt_i = 1, c = 2, g_i = 2, b = 2, alpha = 1, dlt_q = 2, i_ = 0, q = 2]
NonID parameters:	[]
Substitutions:	[z_aux = 3, eq_ = 3, sq_ = 4, e_ = 2, s_ = 3, lmb = 4, h_ = 2, i_ = 1]
memory used=5025.2MB, alloc=187.8MB, time=40.05
