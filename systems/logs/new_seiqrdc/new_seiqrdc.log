    |\^/|     Maple 2021 (X86 64 LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2021
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
# Ex 14 from  https://arxiv.org/abs/2006.14295
> kernelopts(printbytes=false, assertlevel=1):
> interface(echo=0, prettyprint=0):
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in SubsByDepth) `out` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `mem` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `cpu_time` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `real_time` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in WriteScripts) `weights` is implicitly declared local
|imports/create_substitutions.mpl:111|
Warning, (in WriteScripts) `max_degree` is implicitly declared local
|imports/create_substitutions.mpl:112|
Warning, (in WriteScripts) `new_weights` is implicitly declared local
|imports/create_substitutions.mpl:113|
Warning, (in WriteScripts) `each` is implicitly declared local
|imports/create_substitutions.mpl:113|

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [s(t), e(t), i(t), q(t), r(t), d0(t), c(t)]
Output variables:         [y1(t)]
Input variables:          [k(t), l(t)]
Parameters in equations:  [a, b, dlt, g, mu, n, tau0]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [a, b, dlt, g, mu, n, tau0, s(0), e(0), i(0), c(0)]
Nonidentifiable parameter:  [d0(0), q(0), r(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters {d0(0), q(0), r(0)}
Number of possible combinations 1
Picked the best choice [d0_0, q_0, r_0] based on heuristic:

=======================================================
4. Randomizing the truncated system
=======================================================
Prep CPU Time (sub_transc=true):	 2.926
Prep Real Elapsed Time (sub_transc=true):	 2.761
memory used=310.93MiB, alloc change=82.22MiB, cpu time=2.95s, real time=2.79s, gc time=431.66ms


GetPolySystem Usage (real, cpu, memory):	2.788 	2.954 	326033744

States for substitution:	[a = 1, mu = 1, b = 2, s_ = 1, dlt = 3, e_ = 3, i_ = 2, c_ = 0, n = 2, tau0 = 1, g = 3]
NonID parameters:	[d0_0, q_0, r_0]
Substitutions:	[s_ = 2, dlt = 4, e_ = 4, i_ = 3, c_ = 1, z_aux = 3, g = 4]
memory used=316.86MiB, alloc change=82.22MiB, cpu time=3.04s, real time=2.88s, gc time=431.66ms
all_subs, system_vars[1], system_vars[2], alg_indep, original_et_hat := {c_0 =
c_0, c_1 = c_1, c_10 = c_10, c_11 = c_11, c_2 = c_2, c_3 = c_3, c_4 = c_4, c_5
= c_5, c_6 = c_6, c_7 = c_7, c_8 = c_8, c_9 = c_9, dlt = dlt^4, e_0 = e_0^4, 
e_1 = e_1^4, e_2 = e_2^4, e_3 = e_3^4, e_4 = e_4^4, e_5 = e_5^4, e_6 = e_6^4, 
e_7 = e_7^4, e_8 = e_8^4, g = g^4, i_0 = i_0^3, i_1 = i_1^3, i_2 = i_2^3, i_3 =
i_3^3, i_4 = i_4^3, i_5 = i_5^3, i_6 = i_6^3, i_7 = i_7^3, i_8 = i_8^3, i_9 = 
i_9^3, s_0 = s_0^2, s_1 = s_1^2, s_10 = s_10^2, s_2 = s_2^2, s_3 = s_3^2, s_4 =
s_4^2, s_5 = s_5^2, s_6 = s_6^2, s_7 = s_7^2, s_8 = s_8^2, s_9 = s_9^2, z_aux =
z_aux^3}, [6470691126071489189847-c_0, -a*s_0^2+c_0*mu+c_0*tau0+c_1, -c_1+
129682357587361066484699789946782684792879629041785, (mu+tau0)*c_1+c_2-a*s_1^2,
b*i_0^3*n^2*s_0^2+a*s_0^2+mu*s_0^2-mu*n+s_1^2, -c_2-195950092798993009457101437\
4223435966827476373294393313046253216288024972892736368539092567981975369927305\
7656810503758577891787115336658162354031840945, (mu+tau0)*c_2+c_3-a*s_2^2, b*n^
2*s_0^2*i_1^3+(b*i_0^3*n^2+a+mu)*s_1^2+s_2^2, -e_0^4*g^4+dlt^4*i_0^3+i_0^3*mu*
s_0^2+i_1^3, -c_3+2957842957658124647892694402385553248671847279310100603423280\
0789279085775528140042646457425082232316295797387136821229276367281838005903622\
8433083436137231405288009491249801119389356305027613969514734323382750555085530\
4053042766509990305178896964436738, (mu+tau0)*c_3+c_4-a*s_3^2, (b*i_0^3*n^2+a+
mu)*s_2^2+n^2*(2*i_1^3*s_1^2+i_2^3*s_0^2)*b+s_3^2, -e_1^4*g^4+(dlt^4+mu*s_0^2)*
i_1^3+i_2^3+i_0^3*mu*s_1^2, e_0^4*g^4-b*i_0^3*n*s_0^2+e_0^4*mu+e_1^4, -c_4-4464\
8281800725551665358286302941143147883220803662108018815423026707164630327191884\
4656097244712657111628806184858240550878292488806553486528566491728196266655774\
5170448304638598305328497111365088446650918864479233103654173181275625019535564\
9927467553708420047169898060076496168909913141086769814175773428548747334044791\
5236183364487886886072838642469924, (mu+tau0)*c_4+c_5-a*s_4^2, 3*(s_1^2*i_2^3+
s_2^2*i_1^3+1/3*s_3^2*i_0^3+1/3*i_3^3*s_0^2)*n^2*b+(a+mu)*s_3^2+s_4^2, (i_0^3*
s_2^2+2*i_1^3*s_1^2+i_2^3*s_0^2)*mu-e_2^4*g^4+dlt^4*i_2^3+i_3^3, (g^4+mu)*e_1^4
-n*(i_0^3*s_1^2+i_1^3*s_0^2)*b+e_2^4, -c_5+673960415172052202196263378213954948\
3288551725457409184848651433389670801559662449136671960724057258410483211465881\
9362926090812744522514848270839319840620951653058675296017392344546099654341286\
6366108992052961460367682481738663898753800548858185291118438397748122967586672\
8426497958544896706918846217008367478372833239428959753852081558643479588792989\
9959356293355569094530727078438483787549626795464590105050813245354720041789677\
352289425284278820376764, (mu+tau0)*c_5+c_6-a*s_5^2, n^2*(i_0^3*s_4^2+4*i_1^3*
s_3^2+6*i_2^3*s_2^2+4*i_3^3*s_1^2+i_4^3*s_0^2)*b+(a+mu)*s_4^2+s_5^2, (i_0^3*s_3
^2+3*i_1^3*s_2^2+3*i_2^3*s_1^2+i_3^3*s_0^2)*mu-e_3^4*g^4+dlt^4*i_3^3+i_4^3, -n*
(i_0^3*s_2^2+2*i_1^3*s_1^2+i_2^3*s_0^2)*b+(g^4+mu)*e_2^4+e_3^4, -c_6-1017335097\
5658455920125772375580514891280297590901006850198825487225877653355644607939582\
4982276881909302707576925199627479481563339771744621650955989224404409706610767\
7138626284842024150161607124538108592836704570167711262206401252745924865490977\
8090524748538842442543018883977847148908270903815345572806746785530465974496846\
4856270592145030472272612009705047706073355578946905442509644931330727330387091\
2563418657465471280100716412753529994471223244874084608059426769411937867120051\
7298780236477934211161491712042643988805171369155289234208004978151113612, (mu+
tau0)*c_6+c_7-a*s_6^2, n^2*(i_0^3*s_5^2+5*i_1^3*s_4^2+10*i_2^3*s_3^2+10*i_3^3*
s_2^2+5*i_4^3*s_1^2+i_5^3*s_0^2)*b+(a+mu)*s_5^2+s_6^2, (i_0^3*s_4^2+4*i_1^3*s_3
^2+6*i_2^3*s_2^2+4*i_3^3*s_1^2+i_4^3*s_0^2)*mu-e_4^4*g^4+dlt^4*i_4^3+i_5^3, -n*
(i_0^3*s_3^2+3*i_1^3*s_2^2+3*i_2^3*s_1^2+i_3^3*s_0^2)*b+(g^4+mu)*e_3^4+e_4^4, -
c_7+153565502875283222722178077808611062857339802770316081420681660341864611452\
8746301927991015204690608438071016412036203359155634738672983048405555016104276\
2445514609415943070795895209845697170241560393351784783644111158998862895109215\
5419559901462760489111498539882853978970883380897795934333480941112428904533304\
6269328231731991695017374120309329520385070521720223653791232891837394249961530\
0701778370028241450567297173790374945243256222717208898328789594167115560623539\
9297881602882441382327630268844547903140606007165948526664457798620164423683905\
3502197989751275291041809132854106454315743721528510862207808521963294838369098\
002197269989056221869391725520, (mu+tau0)*c_7+c_8-a*s_7^2, 6*(i_5^3*s_1^2+1/6*
i_6^3*s_0^2+5/2*s_2^2*i_4^3+10/3*s_3^2*i_3^3+5/2*s_4^2*i_2^3+s_5^2*i_1^3+1/6*
s_6^2*i_0^3)*n^2*b+(a+mu)*s_6^2+s_7^2, (i_0^3*s_5^2+5*i_1^3*s_4^2+10*i_2^3*s_3^
2+10*i_3^3*s_2^2+5*i_4^3*s_1^2+i_5^3*s_0^2)*mu-e_5^4*g^4+dlt^4*i_5^3+i_6^3, -4*
(i_3^3*s_1^2+1/4*i_4^3*s_0^2+3/2*s_2^2*i_2^3+s_3^2*i_1^3+1/4*s_4^2*i_0^3)*n*b+(
g^4+mu)*e_4^4+e_5^4, -c_8-23180526976572027903719289288163722928114218690659270\
8828782792796237584460342200860677904248812355368967100323916297318254991387629\
5427977073892791033524176886206656751523370889982353160683745925831215788308881\
4677987487220837566755337666072719270352587596062903862099755069752832014146275\
5481504119797994324626175511038173443901454741641404250297298391957138946864130\
9330911492044569642541072760815415873297662199982373660677806536797560122702732\
5957557303721682357679722605870017031285533097744711847712591219828092840371556\
9055762822169054999020380887554369839512226007216581744516166514293657342912199\
0022348457070518820950691991311067064313185979144174115881163857390913634992178\
70591528587064031665201351061615102439776074313798276266174625657930650248, (mu
+tau0)*c_8+c_9-a*s_8^2, 21*(i_5^3*s_2^2+1/3*i_6^3*s_1^2+1/21*i_7^3*s_0^2+5/3*
s_3^2*i_4^3+5/3*s_4^2*i_3^3+s_5^2*i_2^3+1/3*s_6^2*i_1^3+1/21*s_7^2*i_0^3)*n^2*b
+(a+mu)*s_7^2+s_8^2, (i_0^3*s_6^2+6*i_1^3*s_5^2+15*i_2^3*s_4^2+20*i_3^3*s_3^2+
15*i_4^3*s_2^2+6*i_5^3*s_1^2+i_6^3*s_0^2)*mu-e_6^4*g^4+dlt^4*i_6^3+i_7^3, -10*(
i_3^3*s_2^2+1/2*i_4^3*s_1^2+1/10*i_5^3*s_0^2+s_3^2*i_2^3+1/2*s_4^2*i_1^3+1/10*
s_5^2*i_0^3)*n*b+(g^4+mu)*e_5^4+e_6^4, -c_9+34990725185719384454488486690254818\
9505673651962094650798322706971863283370006955608818813444020085880972267731110\
2116490227938905128717069604888643792654205665452355090337825081964171190460756\
0902752553400046431496003162839269477080166096843808576960002839313527220235843\
6590271796820356021600521550592226790858519908448899131694522459080946406014552\
0088801506974873871476217014990625748591812980969330545482802120260612622278274\
8125921403678730734776424902098581372062361516560500334507389229643311167826980\
4988600291224042168860257290702290059381713747831033215556049306345570202157993\
0782751891649049316694058374774812892393980839229369362985347704130830276319174\
2631988933141217751485162117614861104670424646530176373354065275109582917295184\
7276938566118963317587642592945277539702678093944709338344423819218908296361349\
64766668633820113328870482987767392, (mu+tau0)*c_9+c_10-a*s_9^2, 56*(i_5^3*s_3^
2+1/2*i_6^3*s_2^2+1/7*i_7^3*s_1^2+1/56*i_8^3*s_0^2+5/4*s_4^2*i_4^3+s_5^2*i_3^3+
1/2*s_6^2*i_2^3+1/7*s_7^2*i_1^3+1/56*s_8^2*i_0^3)*n^2*b+(a+mu)*s_8^2+s_9^2, (
i_0^3*s_7^2+7*i_1^3*s_6^2+21*i_2^3*s_5^2+35*i_3^3*s_4^2+35*i_4^3*s_3^2+21*i_5^3
*s_2^2+7*i_6^3*s_1^2+i_7^3*s_0^2)*mu-e_7^4*g^4+dlt^4*i_7^3+i_8^3, -20*(s_3^2*
i_3^3+3/4*s_2^2*i_4^3+3/10*i_5^3*s_1^2+1/20*i_6^3*s_0^2+3/4*s_4^2*i_2^3+3/10*
s_5^2*i_1^3+1/20*s_6^2*i_0^3)*n*b+(g^4+mu)*e_6^4+e_7^4, -c_10-52818076580396868\
2864288892025096074963884758515192181479203961240190362608620516676055026474559\
6550995245940141733771612399117832699649094747804997170106785880902661769105159\
9167109575978475048249272751422052503431748257323316084498672072443917480953357\
9074614482331986719004372277940370686278900988687475112268154229833796119209895\
9050832060965203911463187026816905944530358825642717759640249045755636977611122\
4120494048156670751476789255135380342206037453220111102169525297505236250448372\
8181305621142411465458446030064418128193264200380581632971063012318300793563628\
6585838667410698578092414154261543455636879884146393085635716609959715271761719\
3989071763871245660674305142215699123938199087288931981242519925559852369666726\
0049432804431528849346953158823539528035494581007503075050701679371787969732867\
1970222132280090333240433731863106433685484554189938528336513180567304004501248\
290599433403488654918741281548597881526180884398768515663811845088153746024, 
c_11+(mu+tau0)*c_10-a*s_10^2, 126*(i_5^3*s_4^2+2/3*i_6^3*s_3^2+2/7*i_7^3*s_2^2+
1/14*i_8^3*s_1^2+1/126*i_9^3*s_0^2+s_5^2*i_4^3+2/3*s_6^2*i_3^3+2/7*s_7^2*i_2^3+
1/14*s_8^2*i_1^3+1/126*s_9^2*i_0^3)*n^2*b+(a+mu)*s_9^2+s_10^2, (i_0^3*s_8^2+8*
i_1^3*s_7^2+28*i_2^3*s_6^2+56*i_3^3*s_5^2+70*i_4^3*s_4^2+56*i_5^3*s_3^2+28*i_6^
3*s_2^2+8*i_7^3*s_1^2+i_8^3*s_0^2)*mu-e_8^4*g^4+dlt^4*i_8^3+i_9^3, -35*(s_4^2*
i_3^3+s_3^2*i_4^3+3/5*i_5^3*s_2^2+1/5*i_6^3*s_1^2+1/35*i_7^3*s_0^2+3/5*s_5^2*
i_2^3+1/5*s_6^2*i_1^3+1/35*s_7^2*i_0^3)*n*b+(g^4+mu)*e_7^4+e_8^4, -c_11+7972824\
7952724243412359361710089207738287184699552992420888552830651837141442097240907\
2090950567215537193294508599356436121310597816480214883104636692729047028745587\
0847274010049998613703514929090539349927053253756709695788274153130488696024503\
4932467844866327768525749848799869941553082190161446056175366079809000202861371\
6362448463323253928312869159162526873023655240237771604265685530544583092069571\
7540487910253764405508150805297178203755829514116450344521946941761565971201742\
8619600166662642774496822102963357902663747867760712183131214283386392430330070\
5804135405084979563251750244391289797096493621390129883756771724818056091022152\
2908874548722202513463469600399621315127182711003330497214313877374213689233654\
6589491329692825522016116912661686983090184430747450060461901223849542957308112\
3334845393486290915196610501620081902088292243422692924146125904671652959141839\
1326740931115591807739528556060721463286494515624838128493839919575951956216841\
6638398482847377440683145279298755377810385530019693086346915474154165112385618\
2264740231711700570158356248, z_aux^3-1], [c_11, s_10, c_10, s_9, i_9, c_9, s_8
, i_8, e_8, c_8, s_7, i_7, e_7, c_7, s_6, i_6, e_6, c_6, s_5, i_5, e_5, c_5, 
s_4, i_4, e_4, c_4, s_3, i_3, e_3, c_3, s_2, i_2, e_2, c_2, s_1, i_1, e_1, c_1,
s_0, i_0, e_0, c_0, z_aux, w_aux, a, b, dlt, g, mu, n, tau0], [d0_0, q_0, r_0],
[6470691126071489189847-c_0, -a*s_0+c_0*mu+c_0*tau0+c_1, -c_1+
129682357587361066484699789946782684792879629041785, (mu+tau0)*c_1+c_2-a*s_1, b
*i_0*n^2*s_0+a*s_0-mu*n+mu*s_0+s_1, -c_2-19595009279899300945710143742234359668\
2747637329439331304625321628802497289273636853909256798197536992730576568105037\
58577891787115336658162354031840945, (mu+tau0)*c_2+c_3-a*s_2, b*n^2*s_0*i_1+(b*
i_0*n^2+a+mu)*s_1+s_2, i_0*mu*s_0+dlt*i_0-e_0*g+i_1, -c_3+295784295765812464789\
2694402385553248671847279310100603423280078927908577552814004264645742508223231\
6295797387136821229276367281838005903622843308343613723140528800949124980111938\
93563050276139695147343233827505550855304053042766509990305178896964436738, (mu
+tau0)*c_3+c_4-a*s_3, (b*i_0*n^2+a+mu)*s_2+n^2*(2*i_1*s_1+i_2*s_0)*b+s_3, -e_1*
g+(mu*s_0+dlt)*i_1+i_2+i_0*mu*s_1, -b*i_0*n*s_0+e_0*g+e_0*mu+e_1, -c_4-44648281\
8007255516653582863029411431478832208036621080188154230267071646303271918844656\
0972447126571116288061848582405508782924888065534865285664917281962666557745170\
4483046385983053284971113650884466509188644792331036541731812756250195355649927\
4675537084200471698980600764961689099131410867698141757734285487473340447915236\
183364487886886072838642469924, (mu+tau0)*c_4+c_5-a*s_4, 3*(s_1*i_2+s_2*i_1+1/3
*s_3*i_0+1/3*i_3*s_0)*n^2*b+(a+mu)*s_3+s_4, (i_0*s_2+2*i_1*s_1+i_2*s_0)*mu-e_2*
g+dlt*i_2+i_3, (g+mu)*e_1-n*(i_0*s_1+i_1*s_0)*b+e_2, -c_5+673960415172052202196\
2633782139549483288551725457409184848651433389670801559662449136671960724057258\
4104832114658819362926090812744522514848270839319840620951653058675296017392344\
5460996543412866366108992052961460367682481738663898753800548858185291118438397\
7481229675866728426497958544896706918846217008367478372833239428959753852081558\
6434795887929899959356293355569094530727078438483787549626795464590105050813245\
354720041789677352289425284278820376764, (mu+tau0)*c_5+c_6-a*s_5, n^2*(i_0*s_4+
4*i_1*s_3+6*i_2*s_2+4*i_3*s_1+i_4*s_0)*b+(a+mu)*s_4+s_5, (i_0*s_3+3*i_1*s_2+3*
i_2*s_1+i_3*s_0)*mu-e_3*g+dlt*i_3+i_4, -n*(i_0*s_2+2*i_1*s_1+i_2*s_0)*b+(g+mu)*
e_2+e_3, -c_6-10173350975658455920125772375580514891280297590901006850198825487\
2258776533556446079395824982276881909302707576925199627479481563339771744621650\
9559892244044097066107677138626284842024150161607124538108592836704570167711262\
2064012527459248654909778090524748538842442543018883977847148908270903815345572\
8067467855304659744968464856270592145030472272612009705047706073355578946905442\
5096449313307273303870912563418657465471280100716412753529994471223244874084608\
0594267694119378671200517298780236477934211161491712042643988805171369155289234\
208004978151113612, (mu+tau0)*c_6+c_7-a*s_6, n^2*(i_0*s_5+5*i_1*s_4+10*i_2*s_3+
10*i_3*s_2+5*i_4*s_1+i_5*s_0)*b+(a+mu)*s_5+s_6, (i_0*s_4+4*i_1*s_3+6*i_2*s_2+4*
i_3*s_1+i_4*s_0)*mu-e_4*g+dlt*i_4+i_5, -n*(i_0*s_3+3*i_1*s_2+3*i_2*s_1+i_3*s_0)
*b+(g+mu)*e_3+e_4, -c_7+1535655028752832227221780778086110628573398027703160814\
2068166034186461145287463019279910152046906084380710164120362033591556347386729\
8304840555501610427624455146094159430707958952098456971702415603933517847836441\
1115899886289510921554195599014627604891114985398828539789708833808977959343334\
8094111242890453330462693282317319916950173741203093295203850705217202236537912\
3289183739424996153007017783700282414505672971737903749452432562227172088983287\
8959416711556062353992978816028824413823276302688445479031406060071659485266644\
5779862016442368390535021979897512752910418091328541064543157437215285108622078\
08521963294838369098002197269989056221869391725520, (mu+tau0)*c_7+c_8-a*s_7, 6*
(i_5*s_1+1/6*i_6*s_0+5/2*s_2*i_4+10/3*s_3*i_3+5/2*s_4*i_2+s_5*i_1+1/6*s_6*i_0)*
n^2*b+(a+mu)*s_6+s_7, (i_0*s_5+5*i_1*s_4+10*i_2*s_3+10*i_3*s_2+5*i_4*s_1+i_5*
s_0)*mu-e_5*g+dlt*i_5+i_6, -4*(i_3*s_1+1/4*i_4*s_0+3/2*s_2*i_2+s_3*i_1+1/4*s_4*
i_0)*n*b+(g+mu)*e_4+e_5, -c_8-2318052697657202790371928928816372292811421869065\
9270882878279279623758446034220086067790424881235536896710032391629731825499138\
7629542797707389279103352417688620665675152337088998235316068374592583121578830\
8881467798748722083756675533766607271927035258759606290386209975506975283201414\
6275548150411979799432462617551103817344390145474164140425029729839195713894686\
4130933091149204456964254107276081541587329766219998237366067780653679756012270\
2732595755730372168235767972260587001703128553309774471184771259121982809284037\
1556905576282216905499902038088755436983951222600721658174451616651429365734291\
2199002234845707051882095069199131106706431318597914417411588116385739091363499\
217870591528587064031665201351061615102439776074313798276266174625657930650248,
(mu+tau0)*c_8+c_9-a*s_8, 21*(i_5*s_2+1/3*i_6*s_1+1/21*i_7*s_0+5/3*s_3*i_4+5/3*
s_4*i_3+s_5*i_2+1/3*s_6*i_1+1/21*s_7*i_0)*n^2*b+(a+mu)*s_7+s_8, (i_0*s_6+6*i_1*
s_5+15*i_2*s_4+20*i_3*s_3+15*i_4*s_2+6*i_5*s_1+i_6*s_0)*mu-e_6*g+dlt*i_6+i_7, -\
10*(i_3*s_2+1/2*i_4*s_1+1/10*i_5*s_0+s_3*i_2+1/2*s_4*i_1+1/10*s_5*i_0)*n*b+(g+
mu)*e_5+e_6, -c_9+3499072518571938445448848669025481895056736519620946507983227\
0697186328337000695560881881344402008588097226773111021164902279389051287170696\
0488864379265420566545235509033782508196417119046075609027525534000464314960031\
6283926947708016609684380857696000283931352722023584365902717968203560216005215\
5059222679085851990844889913169452245908094640601455200888015069748738714762170\
1499062574859181298096933054548280212026061262227827481259214036787307347764249\
0209858137206236151656050033450738922964331116782698049886002912240421688602572\
9070229005938171374783103321555604930634557020215799307827518916490493166940583\
7477481289239398083922936936298534770413083027631917426319889331412177514851621\
1761486110467042464653017637335406527510958291729518472769385661189633175876425\
9294527753970267809394470933834442381921890829636134964766668633820113328870482\
987767392, (mu+tau0)*c_9+c_10-a*s_9, 56*(i_5*s_3+1/2*i_6*s_2+1/7*i_7*s_1+1/56*
i_8*s_0+5/4*s_4*i_4+s_5*i_3+1/2*s_6*i_2+1/7*s_7*i_1+1/56*s_8*i_0)*n^2*b+(a+mu)*
s_8+s_9, (i_0*s_7+7*i_1*s_6+21*i_2*s_5+35*i_3*s_4+35*i_4*s_3+21*i_5*s_2+7*i_6*
s_1+i_7*s_0)*mu-e_7*g+dlt*i_7+i_8, -20*(s_3*i_3+3/4*s_2*i_4+3/10*i_5*s_1+1/20*
i_6*s_0+3/4*s_4*i_2+3/10*s_5*i_1+1/20*s_6*i_0)*n*b+(g+mu)*e_6+e_7, -c_10-528180\
7658039686828642888920250960749638847585151921814792039612401903626086205166760\
5502647455965509952459401417337716123991178326996490947478049971701067858809026\
6176910515991671095759784750482492727514220525034317482573233160844986720724439\
1748095335790746144823319867190043722779403706862789009886874751122681542298337\
9611920989590508320609652039114631870268169059445303588256427177596402490457556\
3697761112241204940481566707514767892551353803422060374532201111021695252975052\
3625044837281813056211424114654584460300644181281932642003805816329710630123183\
0079356362865858386674106985780924141542615434556368798841463930856357166099597\
1527176171939890717638712456606743051422156991239381990872889319812425199255598\
5236966672600494328044315288493469531588235395280354945810075030750507016793717\
8796973286719702221322800903332404337318631064336854845541899385283365131805673\
0400450124829059943340348865491874128154859788152618088439876851566381184508815\
3746024, c_11+(mu+tau0)*c_10-a*s_10, 126*(i_5*s_4+2/3*i_6*s_3+2/7*i_7*s_2+1/14*
i_8*s_1+1/126*i_9*s_0+s_5*i_4+2/3*s_6*i_3+2/7*s_7*i_2+1/14*s_8*i_1+1/126*s_9*
i_0)*n^2*b+(a+mu)*s_9+s_10, (i_0*s_8+8*i_1*s_7+28*i_2*s_6+56*i_3*s_5+70*i_4*s_4
+56*i_5*s_3+28*i_6*s_2+8*i_7*s_1+i_8*s_0)*mu-e_8*g+dlt*i_8+i_9, -35*(s_4*i_3+
s_3*i_4+3/5*i_5*s_2+1/5*i_6*s_1+1/35*i_7*s_0+3/5*s_5*i_2+1/5*s_6*i_1+1/35*s_7*
i_0)*n*b+(g+mu)*e_7+e_8, -c_11+797282479527242434123593617100892077382871846995\
5299242088855283065183714144209724090720909505672155371932945085993564361213105\
9781648021488310463669272904702874558708472740100499986137035149290905393499270\
5325375670969578827415313048869602450349324678448663277685257498487998699415530\
8219016144605617536607980900020286137163624484633232539283128691591625268730236\
5524023777160426568553054458309206957175404879102537644055081508052971782037558\
2951411645034452194694176156597120174286196001666626427744968221029633579026637\
4786776071218313121428338639243033007058041354050849795632517502443912897970964\
9362139012988375677172481805609102215229088745487222025134634696003996213151271\
8271100333049721431387737421368923365465894913296928255220161169126616869830901\
8443074745006046190122384954295730811233348453934862909151966105016200819020882\
9224342269292414612590467165295914183913267409311155918077395285560607214632864\
9451562483812849383991957595195621684166383984828473774406831452792987553778103\
855300196930863469154741541651123856182264740231711700570158356248, z_aux-1]

SubsByDepth Usage (real, cpu, memory):	2.879 	3.045 	332256344


=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [s(t), e(t), i(t), q(t), r(t), d0(t), c(t)]
Output variables:         [y1(t)]
Input variables:          [k(t), l(t)]
Parameters in equations:  [a, b, dlt, g, mu, n, tau0]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [a, b, dlt, g, mu, n, tau0, s(0), e(0), i(0), c(0)]
Nonidentifiable parameter:  [d0(0), q(0), r(0)]

=======================================================
4. Randomizing the truncated system
=======================================================
Prep CPU Time (sub_transc=false):	 1.914
Prep Real Elapsed Time (sub_transc=false):	 1.753
memory used=187.69MiB, alloc change=0.84MiB, cpu time=1.92s, real time=1.75s, gc time=401.63ms


GetPolySystem Usage (real, cpu, memory):	1.754 	1.916 	196804688

States for substitution:	[a = 1, mu = 1, b = 2, s_ = 1, dlt = 3, e_ = 3, i_ = 2, c_ = 0, n = 2, tau0 = 1, g = 3]
NonID parameters:	[d0_0, q_0, r_0]
Substitutions:	[s_ = 2, dlt = 4, e_ = 4, i_ = 3, c_ = 1, z_aux = 3, g = 4]
memory used=192.92MiB, alloc change=0.84MiB, cpu time=1.97s, real time=1.81s, gc time=401.63ms
all_subs, system_vars[1], system_vars[2], alg_indep, original_et_hat := {c_0 =
c_0, c_1 = c_1, c_10 = c_10, c_11 = c_11, c_2 = c_2, c_3 = c_3, c_4 = c_4, c_5
= c_5, c_6 = c_6, c_7 = c_7, c_8 = c_8, c_9 = c_9, dlt = dlt^4, e_0 = e_0^4, 
e_1 = e_1^4, e_2 = e_2^4, e_3 = e_3^4, e_4 = e_4^4, e_5 = e_5^4, e_6 = e_6^4, 
e_7 = e_7^4, e_8 = e_8^4, g = g^4, i_0 = i_0^3, i_1 = i_1^3, i_2 = i_2^3, i_3 =
i_3^3, i_4 = i_4^3, i_5 = i_5^3, i_6 = i_6^3, i_7 = i_7^3, i_8 = i_8^3, i_9 = 
i_9^3, s_0 = s_0^2, s_1 = s_1^2, s_10 = s_10^2, s_2 = s_2^2, s_3 = s_3^2, s_4 =
s_4^2, s_5 = s_5^2, s_6 = s_6^2, s_7 = s_7^2, s_8 = s_8^2, s_9 = s_9^2, z_aux =
z_aux^3}, [18524179921093253449114958-c_0, -a*s_0^2+c_0*mu+c_0*tau0+c_1, -c_1-\
392767136184255730750843315770066458285714222188887, (mu+tau0)*c_1+c_2-a*s_1^2,
b*i_0^3*n^2*s_0^2+a*s_0^2+mu*s_0^2-mu*n+s_1^2, -c_2-323036455293607677178372846\
1848063175364810109752233094111968263590451385736348117017597896132087705758784\
621449159163926625451303808252695733408726126, (mu+tau0)*c_2+c_3-a*s_2^2, b*n^2
*s_0^2*i_1^3+(b*i_0^3*n^2+a+mu)*s_1^2+s_2^2, -e_0^4*g^4+dlt^4*i_0^3+i_0^3*mu*
s_0^2+i_1^3, -c_3+5044002507576950113422237211103074571536309741129373692623725\
1385461948884482323701107302786938988635880141680918858262950520375549560277314\
1970646599640039493636806860724317537895298261459083296271220578210931368955995\
93659523021654170380893853727737, (mu+tau0)*c_3+c_4-a*s_3^2, (b*i_0^3*n^2+a+mu)
*s_2^2+n^2*(2*i_1^3*s_1^2+i_2^3*s_0^2)*b+s_3^2, -e_1^4*g^4+(dlt^4+mu*s_0^2)*i_1
^3+i_2^3+i_0^3*mu*s_1^2, e_0^4*g^4-b*i_0^3*n*s_0^2+e_0^4*mu+e_1^4, -c_4-7875879\
2945887096340720870024936170472188181586167246432828313132425340682979999642909\
9852287151038874362492416442530062452404080239503830702119588719280205991127580\
6571577891003448089103833144769653763978370862448908436463698563579464248142195\
3451576235526499394412458595902174207369917955138146556258783883879323852077885\
0317092956061295290919986718, (mu+tau0)*c_4+c_5-a*s_4^2, 3*(s_1^2*i_2^3+s_2^2*
i_1^3+1/3*s_3^2*i_0^3+1/3*i_3^3*s_0^2)*n^2*b+(a+mu)*s_3^2+s_4^2, (i_0^3*s_2^2+2
*i_1^3*s_1^2+i_2^3*s_0^2)*mu-e_2^4*g^4+dlt^4*i_2^3+i_3^3, (g^4+mu)*e_1^4-n*(i_0
^3*s_1^2+i_1^3*s_0^2)*b+e_2^4, -c_5+1229766927549150181010326948436447616535378\
6602477534929472013143331269408231808944655808168455157643319611893873668977535\
8150985976444229724616819570930700574096271171544745275354712080096529684060556\
0819355533638469161486203908547653897605960738330969924801730838829888946903258\
1466846703328868428261649366586401844299281763821419096752143423907008445549238\
2205816258266913006069908335001972482651186373298805782625531452482917712701287\
63087602125513, (mu+tau0)*c_5+c_6-a*s_5^2, n^2*(i_0^3*s_4^2+4*i_1^3*s_3^2+6*i_2
^3*s_2^2+4*i_3^3*s_1^2+i_4^3*s_0^2)*b+(a+mu)*s_4^2+s_5^2, (i_0^3*s_3^2+3*i_1^3*
s_2^2+3*i_2^3*s_1^2+i_3^3*s_0^2)*mu-e_3^4*g^4+dlt^4*i_3^3+i_4^3, -n*(i_0^3*s_2^
2+2*i_1^3*s_1^2+i_2^3*s_0^2)*b+(g^4+mu)*e_2^4+e_3^4, -c_6-192020044940601490639\
7581173796473509430259526413848841056477462825513219097470838600083519481485095\
6450386362893333170606102838746186023057284527846887145399546689979753800278347\
5145423838153478911289504335857917846745143031640437105957898215572979674069814\
8032114616616865045701813442323766508944940999035175682149456358723365866495801\
0611633654904158190686768064620201572525401562027044259330713067808407795762374\
8684723955542118745601265036688713380498736531844940379515223512282876435454724\
227850595786169287472477474280452986407195258074833163358, (mu+tau0)*c_6+c_7-a*
s_6^2, n^2*(i_0^3*s_5^2+5*i_1^3*s_4^2+10*i_2^3*s_3^2+10*i_3^3*s_2^2+5*i_4^3*s_1
^2+i_5^3*s_0^2)*b+(a+mu)*s_5^2+s_6^2, (i_0^3*s_4^2+4*i_1^3*s_3^2+6*i_2^3*s_2^2+
4*i_3^3*s_1^2+i_4^3*s_0^2)*mu-e_4^4*g^4+dlt^4*i_4^3+i_5^3, -n*(i_0^3*s_3^2+3*
i_1^3*s_2^2+3*i_2^3*s_1^2+i_3^3*s_0^2)*b+(g^4+mu)*e_3^4+e_4^4, -c_7+29982671376\
9849387965453229457643495223430727728474612330138355511470657685076395025984856\
6776497294044123493428887146315147394748402062980305316019044921533750567798857\
9795946541580960879440661375855078287197321216713671829122337880218375220477487\
1804676992591980025008419953219538788569447155573804921845044439962969621721648\
8459822518166786522290701380431162858009670968033030630337170130182758866806803\
1417448212726986957847792138024636130418217749028303992191177108676270607982308\
6256827381630301215608798621697004618941532363469795974544384485654429716378383\
3639749790349985815921804001075923157509758127780500483532228846627783319288086\
139858969, (mu+tau0)*c_7+c_8-a*s_7^2, 6*(i_5^3*s_1^2+1/6*i_6^3*s_0^2+5/2*s_2^2*
i_4^3+10/3*s_3^2*i_3^3+5/2*s_4^2*i_2^3+s_5^2*i_1^3+1/6*s_6^2*i_0^3)*n^2*b+(a+mu
)*s_6^2+s_7^2, (i_0^3*s_5^2+5*i_1^3*s_4^2+10*i_2^3*s_3^2+10*i_3^3*s_2^2+5*i_4^3
*s_1^2+i_5^3*s_0^2)*mu-e_5^4*g^4+dlt^4*i_5^3+i_6^3, -4*(i_3^3*s_1^2+1/4*i_4^3*
s_0^2+3/2*s_2^2*i_2^3+s_3^2*i_1^3+1/4*s_4^2*i_0^3)*n*b+(g^4+mu)*e_4^4+e_5^4, -
c_8-468159760705374194233222098380148558811236325321436422308741594635587092964\
6554140908971630512698459388991360822237291396342584374413041514713347019880306\
6807741196146737700100445513170915884565153888252289519215277487052722970653848\
6228073930815061887356343656082596579234510449454142461585862632651870506053959\
5472490786938068751960448892397743779340783829399585308708463109364137466673723\
2375355803029158034011882668691799300711207490374242434228247661692929232113461\
9438365133205856675075883666169694419795107779901938234955750567949113673255262\
7405169872894575445469090212109201166816375347863238210859537231195256465017926\
6349406470100047400868737507906545614444826852962473714535582407603629375758180\
690252996429918547349833877360334440215158846, (mu+tau0)*c_8+c_9-a*s_8^2, 21*(
i_5^3*s_2^2+1/3*i_6^3*s_1^2+1/21*i_7^3*s_0^2+5/3*s_3^2*i_4^3+5/3*s_4^2*i_3^3+
s_5^2*i_2^3+1/3*s_6^2*i_1^3+1/21*s_7^2*i_0^3)*n^2*b+(a+mu)*s_7^2+s_8^2, (i_0^3*
s_6^2+6*i_1^3*s_5^2+15*i_2^3*s_4^2+20*i_3^3*s_3^2+15*i_4^3*s_2^2+6*i_5^3*s_1^2+
i_6^3*s_0^2)*mu-e_6^4*g^4+dlt^4*i_6^3+i_7^3, -10*(i_3^3*s_2^2+1/2*i_4^3*s_1^2+1
/10*i_5^3*s_0^2+s_3^2*i_2^3+1/2*s_4^2*i_1^3+1/10*s_5^2*i_0^3)*n*b+(g^4+mu)*e_5^
4+e_6^4, -c_9+73100077971022123235632817089139245125569682952876583673652032453\
4110012788696668442087074016082930980800618202701375824983397966594010040600576\
5878455134105391296561353127119352150759880069495202202008112531228892601710549\
1267264506179730312664412260810465329183077084177537616708449014095195051828208\
4624624521311088373646585625173298507573802783144837276071212731468250342072805\
0395633177132926398235176482189258083473001871703329212097171993267413176146815\
6057878499385495135936762256770858905060843233026336422187545067119229483401241\
6349362063260065516830942555011144105078277648066372612099050971485301993877719\
5670883498831702731103087559818170345302683146763012030262531291853260520246602\
2053214440268235664627507183163267962737846068293572440407433909467911713742206\
7735243654072133454120763766675938569332174597984136832476756452486163454217, (
mu+tau0)*c_9+c_10-a*s_9^2, 56*(i_5^3*s_3^2+1/2*i_6^3*s_2^2+1/7*i_7^3*s_1^2+1/56
*i_8^3*s_0^2+5/4*s_4^2*i_4^3+s_5^2*i_3^3+1/2*s_6^2*i_2^3+1/7*s_7^2*i_1^3+1/56*
s_8^2*i_0^3)*n^2*b+(a+mu)*s_8^2+s_9^2, (i_0^3*s_7^2+7*i_1^3*s_6^2+21*i_2^3*s_5^
2+35*i_3^3*s_4^2+35*i_4^3*s_3^2+21*i_5^3*s_2^2+7*i_6^3*s_1^2+i_7^3*s_0^2)*mu-
e_7^4*g^4+dlt^4*i_7^3+i_8^3, -20*(s_3^2*i_3^3+3/4*s_2^2*i_4^3+3/10*i_5^3*s_1^2+
1/20*i_6^3*s_0^2+3/4*s_4^2*i_2^3+3/10*s_5^2*i_1^3+1/20*s_6^2*i_0^3)*n*b+(g^4+mu
)*e_6^4+e_7^4, -c_10-1141409802354286857350767635874812037938002472856099772440\
4672918215476942267047542232270862022692405016088151108414647484748295379530070\
6839602241525230757715897086894516233075345960572999802810272224585174314806692\
8850987895922279523975943195641292360464552563449330730657013564336237278909455\
9649893326857701434017618258051640714818635038196176927591779298243032063470305\
2587252980415302462008067333308592058521667727484754052898193513109501810793884\
2237948026132835283842403771778621750900040029635865468191763099759352596367270\
1915988040015143626813850280610703247849085404007776989080897174374384531225540\
3175227241725295571008003507900669721785585596448443979717482138607979485123796\
6825981305394171259237753382824786919472721758892226162512512478014502721714408\
8891438627453324384336365177100193454558463120304632874307640944339812516332481\
8913991103116642774534635251543597176238171444519701165880574503253083514897761\
09273717373475975235298110, c_11+(mu+tau0)*c_10-a*s_10^2, 126*(i_5^3*s_4^2+2/3*
i_6^3*s_3^2+2/7*i_7^3*s_2^2+1/14*i_8^3*s_1^2+1/126*i_9^3*s_0^2+s_5^2*i_4^3+2/3*
s_6^2*i_3^3+2/7*s_7^2*i_2^3+1/14*s_8^2*i_1^3+1/126*s_9^2*i_0^3)*n^2*b+(a+mu)*
s_9^2+s_10^2, (i_0^3*s_8^2+8*i_1^3*s_7^2+28*i_2^3*s_6^2+56*i_3^3*s_5^2+70*i_4^3
*s_4^2+56*i_5^3*s_3^2+28*i_6^3*s_2^2+8*i_7^3*s_1^2+i_8^3*s_0^2)*mu-e_8^4*g^4+
dlt^4*i_8^3+i_9^3, -35*(s_4^2*i_3^3+s_3^2*i_4^3+3/5*i_5^3*s_2^2+1/5*i_6^3*s_1^2
+1/35*i_7^3*s_0^2+3/5*s_5^2*i_2^3+1/5*s_6^2*i_1^3+1/35*s_7^2*i_0^3)*n*b+(g^4+mu
)*e_7^4+e_8^4, -c_11+1782236589989557207068967774615114195954762629681761321771\
3752075785809299630236279285738810837652710867761253369992953647475557769597125\
8341811339829681773219255431688040432562179719204639037208786903042512991475046\
3590919553208247878849400500090044047357878875514412171744501689925369147381103\
5009820075073797083019402038009967613900027512142337551706056029366891881736598\
6552758601271932457832963377140443821475882876173775734915287238605565321077799\
1556490480825686601995063471089972285773895474891827219979668997130887728984913\
0226818868493887497104434682787173820820166608992234838873412697930303748848320\
0385093310083567278942788948427499750070056950691409432365641321708265614035386\
1047389226681300274619679566705146517176782372263815031404448348092685930125175\
5501157269950044709994924474478424404424901422965578199762326562575155647433493\
0351061960918399354730155332307980190531713191431662410450351480784856896755342\
2651250030491336192438694422547761091547736684318567479213181446373828494895470\
74446169732887569698950582986262357873327034521, z_aux^3-1], [c_11, s_10, c_10,
s_9, i_9, c_9, s_8, i_8, e_8, c_8, s_7, i_7, e_7, c_7, s_6, i_6, e_6, c_6, s_5,
i_5, e_5, c_5, s_4, i_4, e_4, c_4, s_3, i_3, e_3, c_3, s_2, i_2, e_2, c_2, s_1,
i_1, e_1, c_1, s_0, i_0, e_0, c_0, z_aux, w_aux, a, b, dlt, g, mu, n, tau0], []
, [18524179921093253449114958-c_0, -a*s_0+c_0*mu+c_0*tau0+c_1, -c_1-\
392767136184255730750843315770066458285714222188887, (mu+tau0)*c_1+c_2-a*s_1, b
*i_0*n^2*s_0+a*s_0-mu*n+mu*s_0+s_1, -c_2-32303645529360767717837284618480631753\
6481010975223309411196826359045138573634811701759789613208770575878462144915916\
3926625451303808252695733408726126, (mu+tau0)*c_2+c_3-a*s_2, b*n^2*s_0*i_1+(b*
i_0*n^2+a+mu)*s_1+s_2, i_0*mu*s_0+dlt*i_0-e_0*g+i_1, -c_3+504400250757695011342\
2237211103074571536309741129373692623725138546194888448232370110730278693898863\
5880141680918858262950520375549560277314197064659964003949363680686072431753789\
529826145908329627122057821093136895599593659523021654170380893853727737, (mu+
tau0)*c_3+c_4-a*s_3, (b*i_0*n^2+a+mu)*s_2+n^2*(2*i_1*s_1+i_2*s_0)*b+s_3, -e_1*g
+(mu*s_0+dlt)*i_1+i_2+i_0*mu*s_1, -b*i_0*n*s_0+e_0*g+e_0*mu+e_1, -c_4-787587929\
4588709634072087002493617047218818158616724643282831313242534068297999964290998\
5228715103887436249241644253006245240408023950383070211958871928020599112758065\
7157789100344808910383314476965376397837086244890843646369856357946424814219534\
5157623552649939441245859590217420736991795513814655625878388387932385207788503\
17092956061295290919986718, (mu+tau0)*c_4+c_5-a*s_4, 3*(s_1*i_2+s_2*i_1+1/3*s_3
*i_0+1/3*i_3*s_0)*n^2*b+(a+mu)*s_3+s_4, (i_0*s_2+2*i_1*s_1+i_2*s_0)*mu-e_2*g+
dlt*i_2+i_3, (g+mu)*e_1-n*(i_0*s_1+i_1*s_0)*b+e_2, -c_5+12297669275491501810103\
2694843644761653537866024775349294720131433312694082318089446558081684551576433\
1961189387366897753581509859764442297246168195709307005740962711715447452753547\
1208009652968406055608193555336384691614862039085476538976059607383309699248017\
3083882988894690325814668467033288684282616493665864018442992817638214190967521\
4342390700844554923822058162582669130060699083350019724826511863732988057826255\
3145248291771270128763087602125513, (mu+tau0)*c_5+c_6-a*s_5, n^2*(i_0*s_4+4*i_1
*s_3+6*i_2*s_2+4*i_3*s_1+i_4*s_0)*b+(a+mu)*s_4+s_5, (i_0*s_3+3*i_1*s_2+3*i_2*
s_1+i_3*s_0)*mu-e_3*g+dlt*i_3+i_4, -n*(i_0*s_2+2*i_1*s_1+i_2*s_0)*b+(g+mu)*e_2+
e_3, -c_6-192020044940601490639758117379647350943025952641384884105647746282551\
3219097470838600083519481485095645038636289333317060610283874618602305728452784\
6887145399546689979753800278347514542383815347891128950433585791784674514303164\
0437105957898215572979674069814803211461661686504570181344232376650894494099903\
5175682149456358723365866495801061163365490415819068676806462020157252540156202\
7044259330713067808407795762374868472395554211874560126503668871338049873653184\
4940379515223512282876435454724227850595786169287472477474280452986407195258074\
833163358, (mu+tau0)*c_6+c_7-a*s_6, n^2*(i_0*s_5+5*i_1*s_4+10*i_2*s_3+10*i_3*
s_2+5*i_4*s_1+i_5*s_0)*b+(a+mu)*s_5+s_6, (i_0*s_4+4*i_1*s_3+6*i_2*s_2+4*i_3*s_1
+i_4*s_0)*mu-e_4*g+dlt*i_4+i_5, -n*(i_0*s_3+3*i_1*s_2+3*i_2*s_1+i_3*s_0)*b+(g+
mu)*e_3+e_4, -c_7+2998267137698493879654532294576434952234307277284746123301383\
5551147065768507639502598485667764972940441234934288871463151473947484020629803\
0531601904492153375056779885797959465415809608794406613758550782871973212167136\
7182912233788021837522047748718046769925919800250084199532195387885694471555738\
0492184504443996296962172164884598225181667865222907013804311628580096709680330\
3063033717013018275886680680314174482127269869578477921380246361304182177490283\
0399219117710867627060798230862568273816303012156087986216970046189415323634697\
9597454438448565442971637838336397497903499858159218040010759231575097581277805\
00483532228846627783319288086139858969, (mu+tau0)*c_7+c_8-a*s_7, 6*(i_5*s_1+1/6
*i_6*s_0+5/2*s_2*i_4+10/3*s_3*i_3+5/2*s_4*i_2+s_5*i_1+1/6*s_6*i_0)*n^2*b+(a+mu)
*s_6+s_7, (i_0*s_5+5*i_1*s_4+10*i_2*s_3+10*i_3*s_2+5*i_4*s_1+i_5*s_0)*mu-e_5*g+
dlt*i_5+i_6, -4*(i_3*s_1+1/4*i_4*s_0+3/2*s_2*i_2+s_3*i_1+1/4*s_4*i_0)*n*b+(g+mu
)*e_4+e_5, -c_8-468159760705374194233222098380148558811236325321436422308741594\
6355870929646554140908971630512698459388991360822237291396342584374413041514713\
3470198803066807741196146737700100445513170915884565153888252289519215277487052\
7229706538486228073930815061887356343656082596579234510449454142461585862632651\
8705060539595472490786938068751960448892397743779340783829399585308708463109364\
1374666737232375355803029158034011882668691799300711207490374242434228247661692\
9292321134619438365133205856675075883666169694419795107779901938234955750567949\
1136732552627405169872894575445469090212109201166816375347863238210859537231195\
2564650179266349406470100047400868737507906545614444826852962473714535582407603\
629375758180690252996429918547349833877360334440215158846, (mu+tau0)*c_8+c_9-a*
s_8, 21*(i_5*s_2+1/3*i_6*s_1+1/21*i_7*s_0+5/3*s_3*i_4+5/3*s_4*i_3+s_5*i_2+1/3*
s_6*i_1+1/21*s_7*i_0)*n^2*b+(a+mu)*s_7+s_8, (i_0*s_6+6*i_1*s_5+15*i_2*s_4+20*
i_3*s_3+15*i_4*s_2+6*i_5*s_1+i_6*s_0)*mu-e_6*g+dlt*i_6+i_7, -10*(i_3*s_2+1/2*
i_4*s_1+1/10*i_5*s_0+s_3*i_2+1/2*s_4*i_1+1/10*s_5*i_0)*n*b+(g+mu)*e_5+e_6, -c_9
+731000779710221232356328170891392451255696829528765836736520324534110012788696\
6684420870740160829309808006182027013758249833979665940100406005765878455134105\
3912965613531271193521507598800694952022020081125312288926017105491267264506179\
7303126644122608104653291830770841775376167084490140951950518282084624624521311\
0883736465856251732985075738027831448372760712127314682503420728050395633177132\
9263982351764821892580834730018717033292120971719932674131761468156057878499385\
4951359367622567708589050608432330263364221875450671192294834012416349362063260\
0655168309425550111441050782776480663726120990509714853019938777195670883498831\
7027311030875598181703453026831467630120302625312918532605202466022053214440268\
2356646275071831632679627378460682935724404074339094679117137422067735243654072\
133454120763766675938569332174597984136832476756452486163454217, (mu+tau0)*c_9+
c_10-a*s_9, 56*(i_5*s_3+1/2*i_6*s_2+1/7*i_7*s_1+1/56*i_8*s_0+5/4*s_4*i_4+s_5*
i_3+1/2*s_6*i_2+1/7*s_7*i_1+1/56*s_8*i_0)*n^2*b+(a+mu)*s_8+s_9, (i_0*s_7+7*i_1*
s_6+21*i_2*s_5+35*i_3*s_4+35*i_4*s_3+21*i_5*s_2+7*i_6*s_1+i_7*s_0)*mu-e_7*g+dlt
*i_7+i_8, -20*(s_3*i_3+3/4*s_2*i_4+3/10*i_5*s_1+1/20*i_6*s_0+3/4*s_4*i_2+3/10*
s_5*i_1+1/20*s_6*i_0)*n*b+(g+mu)*e_6+e_7, -c_10-1141409802354286857350767635874\
8120379380024728560997724404672918215476942267047542232270862022692405016088151\
1084146474847482953795300706839602241525230757715897086894516233075345960572999\
8028102722245851743148066928850987895922279523975943195641292360464552563449330\
7306570135643362372789094559649893326857701434017618258051640714818635038196176\
9275917792982430320634703052587252980415302462008067333308592058521667727484754\
0528981935131095018107938842237948026132835283842403771778621750900040029635865\
4681917630997593525963672701915988040015143626813850280610703247849085404007776\
9890808971743743845312255403175227241725295571008003507900669721785585596448443\
9797174821386079794851237966825981305394171259237753382824786919472721758892226\
1625125124780145027217144088891438627453324384336365177100193454558463120304632\
8743076409443398125163324818913991103116642774534635251543597176238171444519701\
16588057450325308351489776109273717373475975235298110, c_11+(mu+tau0)*c_10-a*
s_10, 126*(i_5*s_4+2/3*i_6*s_3+2/7*i_7*s_2+1/14*i_8*s_1+1/126*i_9*s_0+s_5*i_4+2
/3*s_6*i_3+2/7*s_7*i_2+1/14*s_8*i_1+1/126*s_9*i_0)*n^2*b+(a+mu)*s_9+s_10, (i_0*
s_8+8*i_1*s_7+28*i_2*s_6+56*i_3*s_5+70*i_4*s_4+56*i_5*s_3+28*i_6*s_2+8*i_7*s_1+
i_8*s_0)*mu-e_8*g+dlt*i_8+i_9, -35*(s_4*i_3+s_3*i_4+3/5*i_5*s_2+1/5*i_6*s_1+1/
35*i_7*s_0+3/5*s_5*i_2+1/5*s_6*i_1+1/35*s_7*i_0)*n*b+(g+mu)*e_7+e_8, -c_11+1782\
2365899895572070689677746151141959547626296817613217713752075785809299630236279\
2857388108376527108677612533699929536474755577695971258341811339829681773219255\
4316880404325621797192046390372087869030425129914750463590919553208247878849400\
5000900440473578788755144121717445016899253691473811035009820075073797083019402\
0380099676139000275121423375517060560293668918817365986552758601271932457832963\
3771404438214758828761737757349152872386055653210777991556490480825686601995063\
4710899722857738954748918272199796689971308877289849130226818868493887497104434\
6827871738208201666089922348388734126979303037488483200385093310083567278942788\
9484274997500700569506914094323656413217082656140353861047389226681300274619679\
5667051465171767823722638150314044483480926859301251755501157269950044709994924\
4744784244044249014229655781997623265625751556474334930351061960918399354730155\
3323079801905317131914316624104503514807848568967553422651250030491336192438694\
4225477610915477366843185674792131814463738284948954707444616973288756969895058\
2986262357873327034521, z_aux-1]

SubsByDepth Usage (real, cpu, memory):	1.806 	1.968 	202294336

memory used=516.6MB, alloc=123.4MB, time=5.24
