    |\^/|     Maple 2021 (X86 64 LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2021
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
# Ex 4 from  https://arxiv.org/abs/2006.14295
> kernelopts(printbytes=false, assertlevel=1):
> interface(echo=0, prettyprint=0):
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in SubsByDepth) `out` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `mem` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `cpu_time` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `real_time` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in WriteScripts) `weights` is implicitly declared local
|imports/create_substitutions.mpl:111|
Warning, (in WriteScripts) `max_degree` is implicitly declared local
|imports/create_substitutions.mpl:112|
Warning, (in WriteScripts) `new_weights` is implicitly declared local
|imports/create_substitutions.mpl:113|
Warning, (in WriteScripts) `each` is implicitly declared local
|imports/create_substitutions.mpl:113|

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [s(t), e(t), i(t), r(t), p(t)]
Output variables:         [y1(t)]
Input variables:          []
Parameters in equations:  [a_e, a_i, b, k, mu, rho]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [a_e, a_i, k, rho, s(0), e(0), i(0)]
Nonidentifiable parameter:  [b, mu, p(0), r(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters {b, p(0), r(0)}
Number of possible combinations 4
Collection [b, mu, p_0] is not transcendence basis
Collection [b, mu, r_0] is not transcendence basis
Picked the best choice [mu, p_0, r_0] based on heuristic:

=======================================================
4. Randomizing the truncated system
=======================================================
Prep CPU Time (sub_transc=true):	 1.231
Prep Real Elapsed Time (sub_transc=true):	 1.194
memory used=129.61MiB, alloc change=78.21MiB, cpu time=1.26s, real time=1.22s, gc time=120.55ms


GetPolySystem Usage (real, cpu, memory):	1.218,	1.255,	135905744

States for substitution:	[k = 1, rho = 2, mu = 1, b = 1, a_i = 1, s_ = 0, i_ = 0, a_e = 1, e_ = 1]
NonID parameters:	[b, mu, p_0, r_0]
Substitutions:	[z_aux = 2, rho = 3, s_ = 1, i_ = 1, e_ = 2]
memory used=134.77MiB, alloc change=78.21MiB, cpu time=1.34s, real time=1.30s, gc time=120.55ms
all_subs, system_vars[1], system_vars[2], alg_indep, original_et_hat := {e_0 =
e_0^2, e_1 = e_1^2, e_2 = e_2^2, e_3 = e_3^2, e_4 = e_4^2, e_5 = e_5^2, e_6 = 
e_6^2, e_7 = e_7^2, i_0 = i_0, i_1 = i_1, i_2 = i_2, i_3 = i_3, i_4 = i_4, i_5
= i_5, i_6 = i_6, i_7 = i_7, i_8 = i_8, rho = rho^3, s_0 = s_0, s_1 = s_1, s_2
= s_2, s_3 = s_3, s_4 = s_4, s_5 = s_5, s_6 = s_6, s_7 = s_7, s_8 = s_8, z_aux
= z_aux^2}, [1144446512605776-i_0-s_0, -e_0^2*k+b*i_0+46471371738952*i_0+i_1, 
a_e*e_0^2*s_0+a_i*i_0*s_0+s_1, -i_1-s_1-\
698638709135509983566814930611171362091101386, -e_1^2*k+(b+46471371738952)*i_1+
i_2, a_e*s_0*e_1^2+a_i*s_0*i_1+(a_e*e_0^2+a_i*i_0)*s_1+s_2, e_0^2*rho^3-a_e*e_0
^2*s_0-a_i*i_0*s_0+e_0^2*k+e_1^2, -i_2-s_2+
383630000872964813524977583868392761626778568180184409559048644269737687440, -
e_2^2*k+(b+46471371738952)*i_2+i_3, (e_0^2*s_2+2*e_1^2*s_1+e_2^2*s_0)*a_e+(i_0*
s_2+2*i_1*s_1+i_2*s_0)*a_i+s_3, (rho^3-a_e*s_0+k)*e_1^2-a_e*e_0^2*s_1+(-i_0*s_1
-i_1*s_0)*a_i+e_2^2, -i_3-s_3+5964281135053222471729016961634829745040866936235\
42998631294884480833846653500914035291459665315505975368, -e_3^2*k+(b+
46471371738952)*i_3+i_4, (e_0^2*s_3+3*e_1^2*s_2+3*e_2^2*s_1+e_3^2*s_0)*a_e+(i_0
*s_3+3*i_1*s_2+3*i_2*s_1+i_3*s_0)*a_i+s_4, (-e_0^2*s_2-2*e_1^2*s_1-e_2^2*s_0)*
a_e+(-i_0*s_2-2*i_1*s_1-i_2*s_0)*a_i+(rho^3+k)*e_2^2+e_3^2, -i_4-s_4-1657039590\
0360764244709465139146193338279658614925064746410230109358656902843050002228818\
19279349820706923122049617218047430217258944860, -e_4^2*k+(b+46471371738952)*
i_4+i_5, (e_0^2*s_4+4*e_1^2*s_3+6*e_2^2*s_2+4*e_3^2*s_1+e_4^2*s_0)*a_e+(i_0*s_4
+4*i_1*s_3+6*i_2*s_2+4*i_3*s_1+i_4*s_0)*a_i+s_5, (-e_0^2*s_3-3*e_1^2*s_2-3*e_2^
2*s_1-e_3^2*s_0)*a_e+(-i_0*s_3-3*i_1*s_2-3*i_2*s_1-i_3*s_0)*a_i+(rho^3+k)*e_3^2
+e_4^2, -i_5-s_5-11160698889682147391909905318408274593800887923205787712740651\
9455996760807013167556195229902267704043183267085749741509295413026742560877685\
0694306206250281913485548, -e_5^2*k+(b+46471371738952)*i_5+i_6, (e_0^2*s_5+5*
e_1^2*s_4+10*e_2^2*s_3+10*e_3^2*s_2+5*e_4^2*s_1+e_5^2*s_0)*a_e+(i_0*s_5+5*i_1*
s_4+10*i_2*s_3+10*i_3*s_2+5*i_4*s_1+i_5*s_0)*a_i+s_6, (-e_0^2*s_4-4*e_1^2*s_3-6
*e_2^2*s_2-4*e_3^2*s_1-e_4^2*s_0)*a_e+(-i_0*s_4-4*i_1*s_3-6*i_2*s_2-4*i_3*s_1-
i_4*s_0)*a_i+(rho^3+k)*e_4^2+e_5^2, -i_6-s_6+1396751023900896509262788907828101\
5836361176521999709876745371178328052963660860167779719241465350758838595434043\
2474257818928098751564319108492082407332536718163148794470606665598675396502191\
00356, -e_6^2*k+(b+46471371738952)*i_6+i_7, (e_0^2*s_6+6*e_1^2*s_5+15*e_2^2*s_4
+20*e_3^2*s_3+15*e_4^2*s_2+6*e_5^2*s_1+e_6^2*s_0)*a_e+(i_0*s_6+6*i_1*s_5+15*i_2
*s_4+20*i_3*s_3+15*i_4*s_2+6*i_5*s_1+i_6*s_0)*a_i+s_7, (-e_0^2*s_5-5*e_1^2*s_4-\
10*e_2^2*s_3-10*e_3^2*s_2-5*e_4^2*s_1-e_5^2*s_0)*a_e+(-i_0*s_5-5*i_1*s_4-10*i_2
*s_3-10*i_3*s_2-5*i_4*s_1-i_5*s_0)*a_i+(rho^3+k)*e_5^2+e_6^2, -i_7-s_7-98188223\
3054530425667557011599030151763181222608396133739764337757407443446834806283560\
7626356112656649190822348641449399849615306130455421918273725820214159530931501\
835455768347014046415685772978694537446952917491095774713640, -e_7^2*k+(b+
46471371738952)*i_7+i_8, (e_0^2*s_7+7*e_1^2*s_6+21*e_2^2*s_5+35*e_3^2*s_4+35*
e_4^2*s_3+21*e_5^2*s_2+7*e_6^2*s_1+e_7^2*s_0)*a_e+(i_0*s_7+7*i_1*s_6+21*i_2*s_5
+35*i_3*s_4+35*i_4*s_3+21*i_5*s_2+7*i_6*s_1+i_7*s_0)*a_i+s_8, (-e_0^2*s_6-6*e_1
^2*s_5-15*e_2^2*s_4-20*e_3^2*s_3-15*e_4^2*s_2-6*e_5^2*s_1-e_6^2*s_0)*a_e+(-i_0*
s_6-6*i_1*s_5-15*i_2*s_4-20*i_3*s_3-15*i_4*s_2-6*i_5*s_1-i_6*s_0)*a_i+(rho^3+k)
*e_6^2+e_7^2, -i_8-s_8-17962180407570134213178010557173675978977431826804159503\
0516003715321151019960734093228139333533504322572813299129327189267649794870465\
6013959736205892408775641394636790367626989044105616685530037167340579702735795\
13003217023259052551677097757648887565907212, z_aux^2-1], [s_8, i_8, s_7, i_7,
e_7, s_6, i_6, e_6, s_5, i_5, e_5, s_4, i_4, e_4, s_3, i_3, e_3, s_2, i_2, e_2,
s_1, i_1, e_1, s_0, i_0, e_0, z_aux, w_aux, a_e, a_i, b, k, mu, rho], [mu, p_0,
r_0], [1144446512605776-i_0-s_0, b*i_0-e_0*k+46471371738952*i_0+i_1, a_e*e_0*
s_0+a_i*i_0*s_0+s_1, -i_1-s_1-698638709135509983566814930611171362091101386, -
e_1*k+(b+46471371738952)*i_1+i_2, a_e*s_0*e_1+a_i*s_0*i_1+(a_e*e_0+a_i*i_0)*s_1
+s_2, -a_e*e_0*s_0-a_i*i_0*s_0+e_0*k+e_0*rho+e_1, -i_2-s_2+
383630000872964813524977583868392761626778568180184409559048644269737687440, -
e_2*k+(b+46471371738952)*i_2+i_3, (e_0*s_2+2*e_1*s_1+e_2*s_0)*a_e+(i_0*s_2+2*
i_1*s_1+i_2*s_0)*a_i+s_3, (-a_e*s_0+k+rho)*e_1-a_e*e_0*s_1+(-i_0*s_1-i_1*s_0)*
a_i+e_2, -i_3-s_3+5964281135053222471729016961634829745040866936235429986312948\
84480833846653500914035291459665315505975368, -e_3*k+(b+46471371738952)*i_3+i_4
, (e_0*s_3+3*e_1*s_2+3*e_2*s_1+e_3*s_0)*a_e+(i_0*s_3+3*i_1*s_2+3*i_2*s_1+i_3*
s_0)*a_i+s_4, (-e_0*s_2-2*e_1*s_1-e_2*s_0)*a_e+(-i_0*s_2-2*i_1*s_1-i_2*s_0)*a_i
+(k+rho)*e_2+e_3, -i_4-s_4-1657039590036076424470946513914619333827965861492506\
4746410230109358656902843050002228818192793498207069231220496172180474302172589\
44860, -e_4*k+(b+46471371738952)*i_4+i_5, (e_0*s_4+4*e_1*s_3+6*e_2*s_2+4*e_3*
s_1+e_4*s_0)*a_e+(i_0*s_4+4*i_1*s_3+6*i_2*s_2+4*i_3*s_1+i_4*s_0)*a_i+s_5, (-e_0
*s_3-3*e_1*s_2-3*e_2*s_1-e_3*s_0)*a_e+(-i_0*s_3-3*i_1*s_2-3*i_2*s_1-i_3*s_0)*
a_i+(k+rho)*e_3+e_4, -i_5-s_5-1116069888968214739190990531840827459380088792320\
5787712740651945599676080701316755619522990226770404318326708574974150929541302\
67425608776850694306206250281913485548, -e_5*k+(b+46471371738952)*i_5+i_6, (e_0
*s_5+5*e_1*s_4+10*e_2*s_3+10*e_3*s_2+5*e_4*s_1+e_5*s_0)*a_e+(i_0*s_5+5*i_1*s_4+
10*i_2*s_3+10*i_3*s_2+5*i_4*s_1+i_5*s_0)*a_i+s_6, (-e_0*s_4-4*e_1*s_3-6*e_2*s_2
-4*e_3*s_1-e_4*s_0)*a_e+(-i_0*s_4-4*i_1*s_3-6*i_2*s_2-4*i_3*s_1-i_4*s_0)*a_i+(k
+rho)*e_4+e_5, -i_6-s_6+1396751023900896509262788907828101583636117652199970987\
6745371178328052963660860167779719241465350758838595434043247425781892809875156\
431910849208240733253671816314879447060666559867539650219100356, -e_6*k+(b+
46471371738952)*i_6+i_7, (e_0*s_6+6*e_1*s_5+15*e_2*s_4+20*e_3*s_3+15*e_4*s_2+6*
e_5*s_1+e_6*s_0)*a_e+(i_0*s_6+6*i_1*s_5+15*i_2*s_4+20*i_3*s_3+15*i_4*s_2+6*i_5*
s_1+i_6*s_0)*a_i+s_7, (-e_0*s_5-5*e_1*s_4-10*e_2*s_3-10*e_3*s_2-5*e_4*s_1-e_5*
s_0)*a_e+(-i_0*s_5-5*i_1*s_4-10*i_2*s_3-10*i_3*s_2-5*i_4*s_1-i_5*s_0)*a_i+(k+
rho)*e_5+e_6, -i_7-s_7-98188223305453042566755701159903015176318122260839613373\
9764337757407443446834806283560762635611265664919082234864144939984961530613045\
5421918273725820214159530931501835455768347014046415685772978694537446952917491\
095774713640, -e_7*k+(b+46471371738952)*i_7+i_8, (e_0*s_7+7*e_1*s_6+21*e_2*s_5+
35*e_3*s_4+35*e_4*s_3+21*e_5*s_2+7*e_6*s_1+e_7*s_0)*a_e+(i_0*s_7+7*i_1*s_6+21*
i_2*s_5+35*i_3*s_4+35*i_4*s_3+21*i_5*s_2+7*i_6*s_1+i_7*s_0)*a_i+s_8, (-e_0*s_6-\
6*e_1*s_5-15*e_2*s_4-20*e_3*s_3-15*e_4*s_2-6*e_5*s_1-e_6*s_0)*a_e+(-i_0*s_6-6*
i_1*s_5-15*i_2*s_4-20*i_3*s_3-15*i_4*s_2-6*i_5*s_1-i_6*s_0)*a_i+(k+rho)*e_6+e_7
, -i_8-s_8-17962180407570134213178010557173675978977431826804159503051600371532\
1151019960734093228139333533504322572813299129327189267649794870465601395973620\
5892408775641394636790367626989044105616685530037167340579702735795130032170232\
59052551677097757648887565907212, z_aux-1]

SubsByDepth Usage (real, cpu, memory):	1.305,	1.342,	141316832


=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [s(t), e(t), i(t), r(t), p(t)]
Output variables:         [y1(t)]
Input variables:          []
Parameters in equations:  [a_e, a_i, b, k, mu, rho]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [a_e, a_i, k, rho, s(0), e(0), i(0)]
Nonidentifiable parameter:  [b, mu, p(0), r(0)]

=======================================================
4. Randomizing the truncated system
=======================================================
Prep CPU Time (sub_transc=false):	 .844
Prep Real Elapsed Time (sub_transc=false):	 .762
memory used=69.64MiB, alloc change=-3.79MiB, cpu time=845.00ms, real time=764.00ms, gc time=190.81ms


GetPolySystem Usage (real, cpu, memory):	.764,	.845,	73021144

States for substitution:	[k = 1, rho = 2, mu = 1, b = 1, a_i = 1, s_ = 0, i_ = 0, a_e = 1, e_ = 1]
NonID parameters:	[b, mu, p_0, r_0]
Substitutions:	[z_aux = 2, rho = 3, s_ = 1, i_ = 1, e_ = 2]
memory used=73.59MiB, alloc change=-3.79MiB, cpu time=887.00ms, real time=806.00ms, gc time=190.81ms
all_subs, system_vars[1], system_vars[2], alg_indep, original_et_hat := {e_0 =
e_0^2, e_1 = e_1^2, e_2 = e_2^2, e_3 = e_3^2, e_4 = e_4^2, e_5 = e_5^2, e_6 = 
e_6^2, e_7 = e_7^2, i_0 = i_0, i_1 = i_1, i_2 = i_2, i_3 = i_3, i_4 = i_4, i_5
= i_5, i_6 = i_6, i_7 = i_7, i_8 = i_8, rho = rho^3, s_0 = s_0, s_1 = s_1, s_2
= s_2, s_3 = s_3, s_4 = s_4, s_5 = s_5, s_6 = s_6, s_7 = s_7, s_8 = s_8, z_aux
= z_aux^2}, [1211636237396351-i_0-s_0, -e_0^2*k+b*i_0+i_0*mu+i_1, a_e*e_0^2*s_0
+a_i*i_0*s_0+s_1, -i_1-s_1-171771225443658895892932601575806955776970594, -e_1^
2*k+(b+mu)*i_1+i_2, a_e*s_0*e_1^2+a_i*s_0*i_1+(a_e*e_0^2+a_i*i_0)*s_1+s_2, e_0^
2*rho^3-a_e*e_0^2*s_0-a_i*i_0*s_0+e_0^2*k+e_1^2, -i_2-s_2+
30521237616499167668629487305443224351876089846097036051665984479103575428, -
e_2^2*k+(b+mu)*i_2+i_3, (e_0^2*s_2+2*e_1^2*s_1+e_2^2*s_0)*a_e+(i_0*s_2+2*i_1*
s_1+i_2*s_0)*a_i+s_3, (rho^3-a_e*s_0+k)*e_1^2-a_e*e_0^2*s_1+(-i_0*s_1-i_1*s_0)*
a_i+e_2^2, -i_3-s_3-15326822607866830797411737516298112976756609989887615701121\
41891854129296712812313960675365159421205104, -e_3^2*k+(b+mu)*i_3+i_4, (e_0^2*
s_3+3*e_1^2*s_2+3*e_2^2*s_1+e_3^2*s_0)*a_e+(i_0*s_3+3*i_1*s_2+3*i_2*s_1+i_3*s_0
)*a_i+s_4, (-e_0^2*s_2-2*e_1^2*s_1-e_2^2*s_0)*a_e+(-i_0*s_2-2*i_1*s_1-i_2*s_0)*
a_i+(rho^3+k)*e_2^2+e_3^2, -i_4-s_4-1801517584314507886228193737452140002356116\
0321268257718956805454019763655448974626050993421555770691534814338098094399798\
65188225816, -e_4^2*k+(b+mu)*i_4+i_5, (e_0^2*s_4+4*e_1^2*s_3+6*e_2^2*s_2+4*e_3^
2*s_1+e_4^2*s_0)*a_e+(i_0*s_4+4*i_1*s_3+6*i_2*s_2+4*i_3*s_1+i_4*s_0)*a_i+s_5, (
-e_0^2*s_3-3*e_1^2*s_2-3*e_2^2*s_1-e_3^2*s_0)*a_e+(-i_0*s_3-3*i_1*s_2-3*i_2*s_1
-i_3*s_0)*a_i+(rho^3+k)*e_3^2+e_4^2, -i_5-s_5+827453356946739871318680504993848\
6654516198856898561516298479027100513256344162221402134919225224406017462367321\
51837220787817669314370444748613150271059289564904, -e_5^2*k+(b+mu)*i_5+i_6, (
e_0^2*s_5+5*e_1^2*s_4+10*e_2^2*s_3+10*e_3^2*s_2+5*e_4^2*s_1+e_5^2*s_0)*a_e+(i_0
*s_5+5*i_1*s_4+10*i_2*s_3+10*i_3*s_2+5*i_4*s_1+i_5*s_0)*a_i+s_6, (-e_0^2*s_4-4*
e_1^2*s_3-6*e_2^2*s_2-4*e_3^2*s_1-e_4^2*s_0)*a_e+(-i_0*s_4-4*i_1*s_3-6*i_2*s_2-\
4*i_3*s_1-i_4*s_0)*a_i+(rho^3+k)*e_4^2+e_5^2, -i_6-s_6-469292114987405273988693\
8067046018296392154957653291155197734308955108350878561975297841661582814478462\
9503093815655623252317227012155697112051147407954572966864552162567707416849931\
08400120, -e_6^2*k+(b+mu)*i_6+i_7, (e_0^2*s_6+6*e_1^2*s_5+15*e_2^2*s_4+20*e_3^2
*s_3+15*e_4^2*s_2+6*e_5^2*s_1+e_6^2*s_0)*a_e+(i_0*s_6+6*i_1*s_5+15*i_2*s_4+20*
i_3*s_3+15*i_4*s_2+6*i_5*s_1+i_6*s_0)*a_i+s_7, (-e_0^2*s_5-5*e_1^2*s_4-10*e_2^2
*s_3-10*e_3^2*s_2-5*e_4^2*s_1-e_5^2*s_0)*a_e+(-i_0*s_5-5*i_1*s_4-10*i_2*s_3-10*
i_3*s_2-5*i_4*s_1-i_5*s_0)*a_i+(rho^3+k)*e_5^2+e_6^2, -i_7-s_7-2172677238359598\
2151430472789303806010883677548100431414567398808139159181112370047392313171046\
5097500128966255902958245891173225458321002458780328516124519514604384044566209\
385046890062049438178443150140030707831104428104, -e_7^2*k+(b+mu)*i_7+i_8, (e_0
^2*s_7+7*e_1^2*s_6+21*e_2^2*s_5+35*e_3^2*s_4+35*e_4^2*s_3+21*e_5^2*s_2+7*e_6^2*
s_1+e_7^2*s_0)*a_e+(i_0*s_7+7*i_1*s_6+21*i_2*s_5+35*i_3*s_4+35*i_4*s_3+21*i_5*
s_2+7*i_6*s_1+i_7*s_0)*a_i+s_8, (-e_0^2*s_6-6*e_1^2*s_5-15*e_2^2*s_4-20*e_3^2*
s_3-15*e_4^2*s_2-6*e_5^2*s_1-e_6^2*s_0)*a_e+(-i_0*s_6-6*i_1*s_5-15*i_2*s_4-20*
i_3*s_3-15*i_4*s_2-6*i_5*s_1-i_6*s_0)*a_i+(rho^3+k)*e_6^2+e_7^2, -i_8-s_8+12202\
2973938799736907964494974723830853797357163007433395405725283960883727058810975\
5097610558215065144273123899287142200522971104526247041601938461609466326433831\
2141768163062463214570920406775623229763185858827305812987510653316459645385271\
2939909816, z_aux^2-1], [s_8, i_8, s_7, i_7, e_7, s_6, i_6, e_6, s_5, i_5, e_5,
s_4, i_4, e_4, s_3, i_3, e_3, s_2, i_2, e_2, s_1, i_1, e_1, s_0, i_0, e_0, 
z_aux, w_aux, a_e, a_i, b, k, mu, rho], [], [1211636237396351-i_0-s_0, b*i_0-
e_0*k+i_0*mu+i_1, a_e*e_0*s_0+a_i*i_0*s_0+s_1, -i_1-s_1-\
171771225443658895892932601575806955776970594, -e_1*k+(b+mu)*i_1+i_2, a_e*s_0*
e_1+a_i*s_0*i_1+(a_e*e_0+a_i*i_0)*s_1+s_2, -a_e*e_0*s_0-a_i*i_0*s_0+e_0*k+e_0*
rho+e_1, -i_2-s_2+
30521237616499167668629487305443224351876089846097036051665984479103575428, -
e_2*k+(b+mu)*i_2+i_3, (e_0*s_2+2*e_1*s_1+e_2*s_0)*a_e+(i_0*s_2+2*i_1*s_1+i_2*
s_0)*a_i+s_3, (-a_e*s_0+k+rho)*e_1-a_e*e_0*s_1+(-i_0*s_1-i_1*s_0)*a_i+e_2, -i_3
-s_3-15326822607866830797411737516298112976756609989887615701121418918541292967\
12812313960675365159421205104, -e_3*k+(b+mu)*i_3+i_4, (e_0*s_3+3*e_1*s_2+3*e_2*
s_1+e_3*s_0)*a_e+(i_0*s_3+3*i_1*s_2+3*i_2*s_1+i_3*s_0)*a_i+s_4, (-e_0*s_2-2*e_1
*s_1-e_2*s_0)*a_e+(-i_0*s_2-2*i_1*s_1-i_2*s_0)*a_i+(k+rho)*e_2+e_3, -i_4-s_4-18\
0151758431450788622819373745214000235611603212682577189568054540197636554489746\
2605099342155577069153481433809809439979865188225816, -e_4*k+(b+mu)*i_4+i_5, (
e_0*s_4+4*e_1*s_3+6*e_2*s_2+4*e_3*s_1+e_4*s_0)*a_e+(i_0*s_4+4*i_1*s_3+6*i_2*s_2
+4*i_3*s_1+i_4*s_0)*a_i+s_5, (-e_0*s_3-3*e_1*s_2-3*e_2*s_1-e_3*s_0)*a_e+(-i_0*
s_3-3*i_1*s_2-3*i_2*s_1-i_3*s_0)*a_i+(k+rho)*e_3+e_4, -i_5-s_5+8274533569467398\
7131868050499384866545161988568985615162984790271005132563441622214021349192252\
2440601746236732151837220787817669314370444748613150271059289564904, -e_5*k+(b+
mu)*i_5+i_6, (e_0*s_5+5*e_1*s_4+10*e_2*s_3+10*e_3*s_2+5*e_4*s_1+e_5*s_0)*a_e+(
i_0*s_5+5*i_1*s_4+10*i_2*s_3+10*i_3*s_2+5*i_4*s_1+i_5*s_0)*a_i+s_6, (-e_0*s_4-4
*e_1*s_3-6*e_2*s_2-4*e_3*s_1-e_4*s_0)*a_e+(-i_0*s_4-4*i_1*s_3-6*i_2*s_2-4*i_3*
s_1-i_4*s_0)*a_i+(k+rho)*e_4+e_5, -i_6-s_6-469292114987405273988693806704601829\
6392154957653291155197734308955108350878561975297841661582814478462950309381565\
562325231722701215569711205114740795457296686455216256770741684993108400120, -
e_6*k+(b+mu)*i_6+i_7, (e_0*s_6+6*e_1*s_5+15*e_2*s_4+20*e_3*s_3+15*e_4*s_2+6*e_5
*s_1+e_6*s_0)*a_e+(i_0*s_6+6*i_1*s_5+15*i_2*s_4+20*i_3*s_3+15*i_4*s_2+6*i_5*s_1
+i_6*s_0)*a_i+s_7, (-e_0*s_5-5*e_1*s_4-10*e_2*s_3-10*e_3*s_2-5*e_4*s_1-e_5*s_0)
*a_e+(-i_0*s_5-5*i_1*s_4-10*i_2*s_3-10*i_3*s_2-5*i_4*s_1-i_5*s_0)*a_i+(k+rho)*
e_5+e_6, -i_7-s_7-2172677238359598215143047278930380601088367754810043141456739\
8808139159181112370047392313171046509750012896625590295824589117322545832100245\
8780328516124519514604384044566209385046890062049438178443150140030707831104428\
104, -e_7*k+(b+mu)*i_7+i_8, (e_0*s_7+7*e_1*s_6+21*e_2*s_5+35*e_3*s_4+35*e_4*s_3
+21*e_5*s_2+7*e_6*s_1+e_7*s_0)*a_e+(i_0*s_7+7*i_1*s_6+21*i_2*s_5+35*i_3*s_4+35*
i_4*s_3+21*i_5*s_2+7*i_6*s_1+i_7*s_0)*a_i+s_8, (-e_0*s_6-6*e_1*s_5-15*e_2*s_4-\
20*e_3*s_3-15*e_4*s_2-6*e_5*s_1-e_6*s_0)*a_e+(-i_0*s_6-6*i_1*s_5-15*i_2*s_4-20*
i_3*s_3-15*i_4*s_2-6*i_5*s_1-i_6*s_0)*a_i+(k+rho)*e_6+e_7, -i_8-s_8+12202297393\
8799736907964494974723830853797357163007433395405725283960883727058810975509761\
0558215065144273123899287142200522971104526247041601938461609466326433831214176\
8163062463214570920406775623229763185858827305812987510653316459645385271293990\
9816, z_aux-1]

SubsByDepth Usage (real, cpu, memory):	.806,	.887,	77168688

memory used=213.8MB, alloc=114.7MB, time=2.45
