    |\^/|     Maple 2021 (X86 64 LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2021
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
> kernelopts(printbytes=false, assertlevel=1):
> interface(echo=0, prettyprint=0):
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in GetPolySystem) `prep_cpu_start` is implicitly declared local
|imports/generate_poly_system.mpl:22|
Warning, (in GetPolySystem) `prep_real_start` is implicitly declared local
|imports/generate_poly_system.mpl:23|
Warning, (in GetPolySystem) `denom_` is implicitly declared local
|imports/generate_poly_system.mpl:326|
Warning, (in GetPolySystem) `roll` is implicitly declared local
|imports/generate_poly_system.mpl:419|
Warning, (in GetPolySystem) `alg_indep_hat` is implicitly declared local
|imports/generate_poly_system.mpl:420|
Warning, (in GetPolySystem) `prep_cpu_finish` is implicitly declared local
|imports/generate_poly_system.mpl:447|
Warning, (in GetPolySystem) `prep_real_finish` is implicitly declared local
|imports/generate_poly_system.mpl:448|
Warning, (in generate_graph_from_eqs) `new_verts` is implicitly declared local
|imports/generate_poly_system.mpl:519|
Warning, (in SubsByDepth) `out` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `mem` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `cpu_time` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in SubsByDepth) `real_time` is implicitly declared local
|imports/create_substitutions.mpl:53|
Warning, (in WriteScripts) `weights` is implicitly declared local
|imports/create_substitutions.mpl:111|
Warning, (in WriteScripts) `max_degree` is implicitly declared local
|imports/create_substitutions.mpl:112|
Warning, (in WriteScripts) `new_weights` is implicitly declared local
|imports/create_substitutions.mpl:113|
Warning, (in WriteScripts) `each` is implicitly declared local
|imports/create_substitutions.mpl:113|

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [s(t), i(t), r(t), x1(t), x2(t)]
Output variables:         [y1(t), y2(t)]
Input variables:          []
Parameters in equations:  [M, b0, b1, g, mu, nu]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [M, b0, g, mu, nu, s(0), i(0), r(0)]
Nonidentifiable parameter:  [b1, x1(0), x2(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters {b1}
Number of possible combinations 14
Picked the best choice [b1] based on heuristic:

=======================================================
4. Randomizing the truncated system
=======================================================
Prep CPU Time (sub_transc=true):	 2.824
Prep Real Elapsed Time (sub_transc=true):	 2.663
memory used=258.42MiB, alloc change=76.14MiB, cpu time=2.85s, real time=2.69s, gc time=502.12ms


GetPolySystem Usage (real, cpu, memory):	2.689,	2.850,	270968696

States for substitution:	[b1 = 1, g = 1, s_ = 1, b0 = 1, i_ = 0, r_ = 0, x1_ = 1, x2_ = 2, mu = 1, M = 2, nu = 1]
NonID parameters:	[b1, x1_0, x2_0]
Substitutions:	[z_aux = 2, s_ = 2, i_ = 1, r_ = 1, x1_ = 2, x2_ = 3, M = 3]
memory used=266.00MiB, alloc change=76.14MiB, cpu time=2.97s, real time=2.81s, gc time=502.12ms
all_subs, system_vars[1], system_vars[2], alg_indep, original_et_hat := {M = M^
3, i_0 = i_0, i_1 = i_1, i_2 = i_2, i_3 = i_3, i_4 = i_4, i_5 = i_5, i_6 = i_6,
i_7 = i_7, r_0 = r_0, r_1 = r_1, r_2 = r_2, r_3 = r_3, r_4 = r_4, r_5 = r_5, 
s_0 = s_0^2, s_1 = s_1^2, s_2 = s_2^2, s_3 = s_3^2, s_4 = s_4^2, s_5 = s_5^2, 
s_6 = s_6^2, x1_0 = x1_0^2, x1_1 = x1_1^2, x1_2 = x1_2^2, x1_3 = x1_3^2, x1_4 =
x1_4^2, x1_5 = x1_5^2, x1_6 = x1_6^2, x2_0 = x2_0^3, x2_1 = x2_1^3, x2_2 = x2_2
^3, x2_3 = x2_3^3, x2_4 = x2_4^3, x2_5 = x2_5^3, z_aux = z_aux^2}, [
18226875430137600797-i_0, -1446626178410617871*b0*i_0*s_0^2*x1_0^2-b0*i_0*s_0^2
+i_0*mu+i_0*nu+i_1, 1455593645336227458-r_0, g*r_0-i_0*nu+mu*r_0+r_1, -i_1+3314\
7294102284143009977374648684856289721717421695946475627540632071277323122299114\
44764075943617, ((-1446626178410617871*x1_0^2-1)*s_0^2*i_1-(1446626178410617871
*s_0^2*x1_1^2+1446626178410617871*s_1^2*x1_0^2+s_1^2)*i_0)*b0+(nu+mu)*i_1+i_2,
1446626178410617871*b0*i_0*s_0^2*x1_0^2+b0*i_0*s_0^2+mu*s_0^2-g*r_0+s_1^2-mu, M
^3*x2_0^3+x1_1^2, -r_1+495542424234271135800600774112145608625, -nu*i_1+(mu+g)*
r_1+r_2, -i_2+28410370897773168063630855483675701579663197139009355774404780518\
6576417403443183810759098440869774019147126454962290831046133132629818505465645\
178194914156511865022835536949, (1446626178410617871*(-s_0^2*x1_2^2-2*s_1^2*
x1_1^2-s_2^2*x1_0^2)*i_0-1446626178410617871*x1_0^2*i_2*s_0^2-\
2893252356821235742*i_1*(s_0^2*x1_1^2+s_1^2*x1_0^2)-2*s_1^2*i_1-s_2^2*i_0-i_2*
s_0^2)*b0+(nu+mu)*i_2+i_3, ((1446626178410617871*s_0^2*x1_1^2+
1446626178410617871*s_1^2*x1_0^2+s_1^2)*i_0+i_1*s_0^2*(1446626178410617871*x1_0
^2+1))*b0-g*r_1+mu*s_1^2+s_2^2, M^3*x2_1^3+x1_2^2, -M^3*x1_0^2+x2_1^3, -r_2+101\
6243895427489244604907441358410990613230442223330101949811870210255413543936738\
87479859832973778308695723766727556, -nu*i_2+(mu+g)*r_2+r_3, -i_3-9157087974708\
8053152082938781772987030703333658426435284621881879863595863933745621223577253\
7869783573425011267835002139302162529737548069539834182474649991192238605013381\
3145261935262245038421998544669441821232149720975449189570511651651585178295778\
3, (1446626178410617871*(-s_0^2*x1_3^2-3*s_1^2*x1_2^2-3*s_2^2*x1_1^2-s_3^2*x1_0
^2)*i_0+1446626178410617871*(-3*i_1*x1_2^2-3*i_2*x1_1^2-i_3*x1_0^2)*s_0^2+
1446626178410617871*(-3*i_1*s_2^2-3*i_2*s_1^2)*x1_0^2-8679757070463707226*s_1^2
*x1_1^2*i_1-s_0^2*i_3-3*s_1^2*i_2-3*s_2^2*i_1-s_3^2*i_0)*b0+(nu+mu)*i_3+i_4, (
1446626178410617871*(s_0^2*x1_2^2+2*s_1^2*x1_1^2+s_2^2*x1_0^2)*i_0+
1446626178410617871*(2*i_1*x1_1^2+i_2*x1_0^2)*s_0^2+2893252356821235742*s_1^2*
x1_0^2*i_1+2*s_1^2*i_1+s_2^2*i_0+i_2*s_0^2)*b0-g*r_2+mu*s_2^2+s_3^2, M^3*x2_2^3
+x1_3^2, -M^3*x1_1^2+x2_2^3, -i_4-376551415847644063632641353906405700089724228\
6013345780536554046246003771289948724845014615310454457262388939382518702974827\
3330452142904163716166241525707006296521403280826714731023850141163280867153994\
4360166724083617910782021156055976352326865575747246727147297118096958665477229\
50898010377511237461787564844682020604969966723, (1446626178410617871*(-s_0^2*
x1_4^2-4*s_1^2*x1_3^2-6*s_2^2*x1_2^2-4*s_3^2*x1_1^2-s_4^2*x1_0^2)*i_0+
1446626178410617871*(-4*i_1*x1_3^2-6*i_2*x1_2^2-4*i_3*x1_1^2-i_4*x1_0^2)*s_0^2+
1446626178410617871*(-4*i_1*s_3^2-6*i_2*s_2^2-4*i_3*s_1^2)*x1_0^2+
1446626178410617871*(-12*s_1^2*x1_2^2-12*s_2^2*x1_1^2)*i_1-17359514140927414452
*s_1^2*x1_1^2*i_2-s_0^2*i_4-4*s_1^2*i_3-6*s_2^2*i_2-4*s_3^2*i_1-s_4^2*i_0)*b0+(
nu+mu)*i_4+i_5, (1446626178410617871*(s_0^2*x1_3^2+3*s_1^2*x1_2^2+3*s_2^2*x1_1^
2+s_3^2*x1_0^2)*i_0+1446626178410617871*(3*i_1*x1_2^2+3*i_2*x1_1^2+i_3*x1_0^2)*
s_0^2+1446626178410617871*(3*i_1*s_2^2+3*i_2*s_1^2)*x1_0^2+8679757070463707226*
s_1^2*x1_1^2*i_1+s_0^2*i_3+3*s_1^2*i_2+3*s_2^2*i_1+s_3^2*i_0)*b0-g*r_3+mu*s_3^2
+s_4^2, M^3*x2_3^3+x1_4^2, -M^3*x1_2^2+x2_3^3, -i_5+702739154718182551467919985\
5338668990030819556689831115163682048095652000836906093690917861401721907184406\
5975047032248966432338659390147379365423471497639647893259679717914420288240607\
0709443044483978443372821784563710944914089527854472872485166356616634083693727\
3264942145443623773188623737024498352298760006950506681561924102807748034764493\
580708874095450290456862887658922479707601090117667096962434225, (
1446626178410617871*(-s_0^2*x1_5^2-5*s_1^2*x1_4^2-10*s_2^2*x1_3^2-10*s_3^2*x1_2
^2-5*s_4^2*x1_1^2-s_5^2*x1_0^2)*i_0+1446626178410617871*(-5*i_1*x1_4^2-10*i_2*
x1_3^2-10*i_3*x1_2^2-5*i_4*x1_1^2-i_5*x1_0^2)*s_0^2+1446626178410617871*(-5*i_1
*s_4^2-10*i_2*s_3^2-10*i_3*s_2^2-5*i_4*s_1^2)*x1_0^2+1446626178410617871*(-20*
s_1^2*x1_3^2-30*s_2^2*x1_2^2-20*s_3^2*x1_1^2)*i_1+1446626178410617871*(-30*i_2*
x1_2^2-20*i_3*x1_1^2)*s_1^2-43398785352318536130*s_2^2*x1_1^2*i_2-i_5*s_0^2-5*
s_1^2*i_4-10*s_2^2*i_3-10*s_3^2*i_2-5*s_4^2*i_1-s_5^2*i_0)*b0+(nu+mu)*i_5+i_6,
(1446626178410617871*(s_0^2*x1_4^2+4*s_1^2*x1_3^2+6*s_2^2*x1_2^2+4*s_3^2*x1_1^2
+s_4^2*x1_0^2)*i_0+1446626178410617871*(4*i_1*x1_3^2+6*i_2*x1_2^2+4*i_3*x1_1^2+
i_4*x1_0^2)*s_0^2+1446626178410617871*(4*i_1*s_3^2+6*i_2*s_2^2+4*i_3*s_1^2)*
x1_0^2+1446626178410617871*(12*s_1^2*x1_2^2+12*s_2^2*x1_1^2)*i_1+
17359514140927414452*s_1^2*x1_1^2*i_2+s_0^2*i_4+4*s_1^2*i_3+6*s_2^2*i_2+4*s_3^2
*i_1+s_4^2*i_0)*b0-g*r_4+mu*s_4^2+s_5^2, M^3*x2_4^3+x1_5^2, -nu*i_3+(mu+g)*r_3+
r_4, -M^3*x1_3^2+x2_4^3, -i_6+9931349278961686331452412182877640875429095525966\
5441442719529939896637663825005567267879160950285127616511195809639810137901831\
9556746232414065250656430514260000403517684207848615134404277574270977170742605\
5405243458575164116713891198211415586650188862683243940903482461051365335015469\
3031422502914943919283804880457738609119710222144871967694177825121406840296690\
9038262529234689466840883103069213804674829383437555403207649897707111322722389\
5486812024248480385712331258378293167157, (1446626178410617871*(-s_0^2*x1_6^2-6
*s_1^2*x1_5^2-15*s_2^2*x1_4^2-20*s_3^2*x1_3^2-15*s_4^2*x1_2^2-6*s_5^2*x1_1^2-
s_6^2*x1_0^2)*i_0+1446626178410617871*(-6*i_1*x1_5^2-15*i_2*x1_4^2-20*i_3*x1_3^
2-15*i_4*x1_2^2-6*i_5*x1_1^2-i_6*x1_0^2)*s_0^2+1446626178410617871*(-6*i_1*s_5^
2-15*i_2*s_4^2-20*i_3*s_3^2-15*i_4*s_2^2-6*i_5*s_1^2)*x1_0^2+
1446626178410617871*(-30*s_1^2*x1_4^2-60*s_2^2*x1_3^2-60*s_3^2*x1_2^2-30*s_4^2*
x1_1^2)*i_1+1446626178410617871*(-60*i_2*x1_3^2-60*i_3*x1_2^2-30*i_4*x1_1^2)*
s_1^2+1446626178410617871*(-60*i_2*s_3^2-60*i_3*s_2^2)*x1_1^2-\
130196356056955608390*s_2^2*x1_2^2*i_2-6*i_5*s_1^2-i_6*s_0^2-15*s_2^2*i_4-20*
s_3^2*i_3-15*s_4^2*i_2-6*s_5^2*i_1-s_6^2*i_0)*b0+(nu+mu)*i_6+i_7, (
1446626178410617871*(s_0^2*x1_5^2+5*s_1^2*x1_4^2+10*s_2^2*x1_3^2+10*s_3^2*x1_2^
2+5*s_4^2*x1_1^2+s_5^2*x1_0^2)*i_0+1446626178410617871*(5*i_1*x1_4^2+10*i_2*
x1_3^2+10*i_3*x1_2^2+5*i_4*x1_1^2+i_5*x1_0^2)*s_0^2+1446626178410617871*(5*i_1*
s_4^2+10*i_2*s_3^2+10*i_3*s_2^2+5*i_4*s_1^2)*x1_0^2+1446626178410617871*(20*s_1
^2*x1_3^2+30*s_2^2*x1_2^2+20*s_3^2*x1_1^2)*i_1+1446626178410617871*(30*i_2*x1_2
^2+20*i_3*x1_1^2)*s_1^2+43398785352318536130*s_2^2*x1_1^2*i_2+i_5*s_0^2+5*s_1^2
*i_4+10*s_2^2*i_3+10*s_3^2*i_2+5*s_4^2*i_1+s_5^2*i_0)*b0-g*r_5+mu*s_5^2+s_6^2,
M^3*x2_5^3+x1_6^2, -nu*i_4+(mu+g)*r_4+r_5, -M^3*x1_4^2+x2_5^3, -i_7+18499623370\
1445650468209589245233159110123228279328103894802386180430333161659769429137561\
5999707616400387312607954990009452151664140454931048401134615416958505763847187\
4691687919622372162438240617274905062588850010760063127660548928878074002877977\
4152613252118227484357651682050504860895086549074612041388677886526299101415171\
3245048360412867356129914591546909478427544450271356498302536971567159177699839\
8581773597767547217700726164877042960061630521679753104758220526258922880861905\
9006081321438560534977398282752409166595578727949231829575393899229964865809, -
r_3+871017281308137037310645766642851498875989470908904952974369287103385963569\
0097458164995319701732840513257222202240506097994029934866317641834528494718649\
076306558260402118713374582628184157835, -r_4-280741912913761480983851503380849\
2049013033207695974516015602292314516531617925823247658832323400523495153301328\
9831135693988879788230224423902028729572965759201341042835790471156424291079077\
4833469423682389471952938237628077408238735503712830033280738478031218838331791\
4, -r_5-11544474082527809723563835943603846610636809242192320699137398628108968\
1707562449735566714167459878166202235476773489479273575937843670704005089188632\
9164119640882946203055316289728453432558899423314436757320125301533237396204438\
2985027288243737150528549957831968801660619492908886749402731331146920314320822\
20572643493327910065382465637046672774571, z_aux^2-1], [i_7, x1_6, s_6, i_6, 
x2_5, x1_5, s_5, r_5, i_5, x2_4, x1_4, s_4, r_4, i_4, x2_3, x1_3, s_3, r_3, i_3
, x2_2, x1_2, s_2, r_2, i_2, x2_1, x1_1, s_1, r_1, i_1, x2_0, x1_0, s_0, r_0, 
i_0, z_aux, w_aux, M, b0, b1, g, mu, nu], [b1], [18226875430137600797-i_0, -\
1446626178410617871*b0*i_0*s_0*x1_0-b0*i_0*s_0+i_0*mu+i_0*nu+i_1, 
1455593645336227458-r_0, g*r_0-i_0*nu+mu*r_0+r_1, -i_1+331472941022841430099773\
7464868485628972171742169594647562754063207127732312229911444764075943617, ((-\
1446626178410617871*x1_0-1)*s_0*i_1-(1446626178410617871*s_0*x1_1+
1446626178410617871*s_1*x1_0+s_1)*i_0)*b0+(nu+mu)*i_1+i_2, 1446626178410617871*
b0*i_0*s_0*x1_0+b0*i_0*s_0-g*r_0+mu*s_0-mu+s_1, M*x2_0+x1_1, -r_1+
495542424234271135800600774112145608625, -nu*i_1+(mu+g)*r_1+r_2, -i_2+284103708\
9777316806363085548367570157966319713900935577440478051865764174034431838107590\
9844086977401914712645496229083104613313262981850546564517819491415651186502283\
5536949, (1446626178410617871*(-s_0*x1_2-2*s_1*x1_1-s_2*x1_0)*i_0-\
1446626178410617871*x1_0*i_2*s_0-2893252356821235742*i_1*(s_0*x1_1+s_1*x1_0)-2*
s_1*i_1-s_2*i_0-i_2*s_0)*b0+(nu+mu)*i_2+i_3, ((1446626178410617871*s_0*x1_1+
1446626178410617871*s_1*x1_0+s_1)*i_0+i_1*s_0*(1446626178410617871*x1_0+1))*b0-
g*r_1+mu*s_1+s_2, M*x2_1+x1_2, -M*x1_0+x2_1, -r_2+10162438954274892446049074413\
5841099061323044222333010194981187021025541354393673887479859832973778308695723\
766727556, -nu*i_2+(mu+g)*r_2+r_3, -i_3-915708797470880531520829387817729870307\
0333365842643528462188187986359586393374562122357725378697835734250112678350021\
3930216252973754806953983418247464999119223860501338131452619352622450384219985\
446694418212321497209754491895705116516515851782957783, (1446626178410617871*(-
s_0*x1_3-3*s_1*x1_2-3*s_2*x1_1-s_3*x1_0)*i_0+1446626178410617871*(-3*i_1*x1_2-3
*i_2*x1_1-i_3*x1_0)*s_0+1446626178410617871*(-3*i_1*s_2-3*i_2*s_1)*x1_0-\
8679757070463707226*s_1*x1_1*i_1-s_0*i_3-3*s_1*i_2-3*s_2*i_1-s_3*i_0)*b0+(nu+mu
)*i_3+i_4, (1446626178410617871*(s_0*x1_2+2*s_1*x1_1+s_2*x1_0)*i_0+
1446626178410617871*(2*i_1*x1_1+i_2*x1_0)*s_0+2893252356821235742*s_1*x1_0*i_1+
2*s_1*i_1+s_2*i_0+i_2*s_0)*b0-g*r_2+mu*s_2+s_3, M*x2_2+x1_3, -M*x1_1+x2_2, -i_4
-376551415847644063632641353906405700089724228601334578053655404624600377128994\
8724845014615310454457262388939382518702974827333045214290416371616624152570700\
6296521403280826714731023850141163280867153994436016672408361791078202115605597\
6352326865575747246727147297118096958665477229508980103775112374617875648446820\
20604969966723, (1446626178410617871*(-s_0*x1_4-4*s_1*x1_3-6*s_2*x1_2-4*s_3*
x1_1-s_4*x1_0)*i_0+1446626178410617871*(-4*i_1*x1_3-6*i_2*x1_2-4*i_3*x1_1-i_4*
x1_0)*s_0+1446626178410617871*(-4*i_1*s_3-6*i_2*s_2-4*i_3*s_1)*x1_0+
1446626178410617871*(-12*s_1*x1_2-12*s_2*x1_1)*i_1-17359514140927414452*s_1*
x1_1*i_2-s_0*i_4-4*s_1*i_3-6*s_2*i_2-4*s_3*i_1-s_4*i_0)*b0+(nu+mu)*i_4+i_5, (
1446626178410617871*(s_0*x1_3+3*s_1*x1_2+3*s_2*x1_1+s_3*x1_0)*i_0+
1446626178410617871*(3*i_1*x1_2+3*i_2*x1_1+i_3*x1_0)*s_0+1446626178410617871*(3
*i_1*s_2+3*i_2*s_1)*x1_0+8679757070463707226*s_1*x1_1*i_1+s_0*i_3+3*s_1*i_2+3*
s_2*i_1+s_3*i_0)*b0-g*r_3+mu*s_3+s_4, M*x2_3+x1_4, -M*x1_2+x2_3, -i_5+702739154\
7181825514679199855338668990030819556689831115163682048095652000836906093690917\
8614017219071844065975047032248966432338659390147379365423471497639647893259679\
7179144202882406070709443044483978443372821784563710944914089527854472872485166\
3566166340836937273264942145443623773188623737024498352298760006950506681561924\
1028077480347644935807088740954502904568628876589224797076010901176670969624342\
25, (1446626178410617871*(-s_0*x1_5-5*s_1*x1_4-10*s_2*x1_3-10*s_3*x1_2-5*s_4*
x1_1-s_5*x1_0)*i_0+1446626178410617871*(-5*i_1*x1_4-10*i_2*x1_3-10*i_3*x1_2-5*
i_4*x1_1-i_5*x1_0)*s_0+1446626178410617871*(-5*i_1*s_4-10*i_2*s_3-10*i_3*s_2-5*
i_4*s_1)*x1_0+1446626178410617871*(-20*s_1*x1_3-30*s_2*x1_2-20*s_3*x1_1)*i_1+
1446626178410617871*(-30*i_2*x1_2-20*i_3*x1_1)*s_1-43398785352318536130*s_2*
x1_1*i_2-i_5*s_0-5*s_1*i_4-10*s_2*i_3-10*s_3*i_2-5*s_4*i_1-s_5*i_0)*b0+(nu+mu)*
i_5+i_6, (1446626178410617871*(s_0*x1_4+4*s_1*x1_3+6*s_2*x1_2+4*s_3*x1_1+s_4*
x1_0)*i_0+1446626178410617871*(4*i_1*x1_3+6*i_2*x1_2+4*i_3*x1_1+i_4*x1_0)*s_0+
1446626178410617871*(4*i_1*s_3+6*i_2*s_2+4*i_3*s_1)*x1_0+1446626178410617871*(
12*s_1*x1_2+12*s_2*x1_1)*i_1+17359514140927414452*s_1*x1_1*i_2+s_0*i_4+4*s_1*
i_3+6*s_2*i_2+4*s_3*i_1+s_4*i_0)*b0-g*r_4+mu*s_4+s_5, M*x2_4+x1_5, -nu*i_3+(mu+
g)*r_3+r_4, -M*x1_3+x2_4, -i_6+993134927896168633145241218287764087542909552596\
6544144271952993989663766382500556726787916095028512761651119580963981013790183\
1955674623241406525065643051426000040351768420784861513440427757427097717074260\
5540524345857516411671389119821141558665018886268324394090348246105136533501546\
9303142250291494391928380488045773860911971022214487196769417782512140684029669\
0903826252923468946684088310306921380467482938343755540320764989770711132272238\
95486812024248480385712331258378293167157, (1446626178410617871*(-s_0*x1_6-6*
s_1*x1_5-15*s_2*x1_4-20*s_3*x1_3-15*s_4*x1_2-6*s_5*x1_1-s_6*x1_0)*i_0+
1446626178410617871*(-6*i_1*x1_5-15*i_2*x1_4-20*i_3*x1_3-15*i_4*x1_2-6*i_5*x1_1
-i_6*x1_0)*s_0+1446626178410617871*(-6*i_1*s_5-15*i_2*s_4-20*i_3*s_3-15*i_4*s_2
-6*i_5*s_1)*x1_0+1446626178410617871*(-30*s_1*x1_4-60*s_2*x1_3-60*s_3*x1_2-30*
s_4*x1_1)*i_1+1446626178410617871*(-60*i_2*x1_3-60*i_3*x1_2-30*i_4*x1_1)*s_1+
1446626178410617871*(-60*i_2*s_3-60*i_3*s_2)*x1_1-130196356056955608390*s_2*
x1_2*i_2-6*i_5*s_1-i_6*s_0-15*s_2*i_4-20*s_3*i_3-15*s_4*i_2-6*s_5*i_1-s_6*i_0)*
b0+(nu+mu)*i_6+i_7, (1446626178410617871*(s_0*x1_5+5*s_1*x1_4+10*s_2*x1_3+10*
s_3*x1_2+5*s_4*x1_1+s_5*x1_0)*i_0+1446626178410617871*(5*i_1*x1_4+10*i_2*x1_3+
10*i_3*x1_2+5*i_4*x1_1+i_5*x1_0)*s_0+1446626178410617871*(5*i_1*s_4+10*i_2*s_3+
10*i_3*s_2+5*i_4*s_1)*x1_0+1446626178410617871*(20*s_1*x1_3+30*s_2*x1_2+20*s_3*
x1_1)*i_1+1446626178410617871*(30*i_2*x1_2+20*i_3*x1_1)*s_1+
43398785352318536130*s_2*x1_1*i_2+i_5*s_0+5*s_1*i_4+10*s_2*i_3+10*s_3*i_2+5*s_4
*i_1+s_5*i_0)*b0-g*r_5+mu*s_5+s_6, M*x2_5+x1_6, -nu*i_4+(mu+g)*r_4+r_5, -M*x1_4
+x2_5, -i_7+1849962337014456504682095892452331591101232282793281038948023861804\
3033316165976942913756159997076164003873126079549900094521516641404549310484011\
3461541695850576384718746916879196223721624382406172749050625888500107600631276\
6054892887807400287797741526132521182274843576516820505048608950865490746120413\
8867788652629910141517132450483604128673561299145915469094784275444502713564983\
0253697156715917769983985817735977675472177007261648770429600616305216797531047\
5822052625892288086190590060813214385605349773982827524091665955787279492318295\
75393899229964865809, -r_3+8710172813081370373106457666428514988759894709089049\
5297436928710338596356900974581649953197017328405132572222022405060979940299348\
66317641834528494718649076306558260402118713374582628184157835, -r_4-2807419129\
1376148098385150338084920490130332076959745160156022923145165316179258232476588\
3232340052349515330132898311356939888797882302244239020287295729657592013410428\
3579047115642429107907748334694236823894719529382376280774082387355037128300332\
807384780312188383317914, -r_5-115444740825278097235638359436038466106368092421\
9232069913739862810896817075624497355667141674598781662022354767734894792735759\
3784367070400508918863291641196408829462030553162897284534325588994233144367573\
2012530153323739620443829850272882437371505285499578319688016606194929088867494\
0273133114692031432082220572643493327910065382465637046672774571, z_aux-1]

SubsByDepth Usage (real, cpu, memory):	2.811,	2.972,	278922328


=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [s(t), i(t), r(t), x1(t), x2(t)]
Output variables:         [y1(t), y2(t)]
Input variables:          []
Parameters in equations:  [M, b0, b1, g, mu, nu]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================

=======================================================
3. Assessing local identifiability
=======================================================

=======================================================
Creating Truncated system (old)
=======================================================
Locally identifiable paramters:  [M, b0, g, mu, nu, s(0), i(0), r(0)]
Nonidentifiable parameter:  [b1, x1(0), x2(0)]

=======================================================
4. Randomizing the truncated system
=======================================================
Prep CPU Time (sub_transc=false):	 1.186
Prep Real Elapsed Time (sub_transc=false):	 1.129
memory used=127.99MiB, alloc change=1.75MiB, cpu time=1.19s, real time=1.13s, gc time=172.29ms


GetPolySystem Usage (real, cpu, memory):	1.130,	1.187,	134212128

States for substitution:	[b1 = 1, g = 1, s_ = 1, b0 = 1, i_ = 0, r_ = 0, x1_ = 1, x2_ = 2, mu = 1, M = 2, nu = 1]
NonID parameters:	[b1, x1_0, x2_0]
Substitutions:	[z_aux = 2, s_ = 2, i_ = 1, r_ = 1, x1_ = 2, x2_ = 3, M = 3]
memory used=135.03MiB, alloc change=1.75MiB, cpu time=1.26s, real time=1.20s, gc time=172.29ms
all_subs, system_vars[1], system_vars[2], alg_indep, original_et_hat := {M = M^
3, i_0 = i_0, i_1 = i_1, i_2 = i_2, i_3 = i_3, i_4 = i_4, i_5 = i_5, i_6 = i_6,
i_7 = i_7, r_0 = r_0, r_1 = r_1, r_2 = r_2, r_3 = r_3, r_4 = r_4, r_5 = r_5, 
s_0 = s_0^2, s_1 = s_1^2, s_2 = s_2^2, s_3 = s_3^2, s_4 = s_4^2, s_5 = s_5^2, 
s_6 = s_6^2, x1_0 = x1_0^2, x1_1 = x1_1^2, x1_2 = x1_2^2, x1_3 = x1_3^2, x1_4 =
x1_4^2, x1_5 = x1_5^2, x1_6 = x1_6^2, x2_0 = x2_0^3, x2_1 = x2_1^3, x2_2 = x2_2
^3, x2_3 = x2_3^3, x2_4 = x2_4^3, x2_5 = x2_5^3, z_aux = z_aux^2}, [
5730236033498019066-i_0, -b0*b1*i_0*s_0^2*x1_0^2-b0*i_0*s_0^2+i_0*mu+i_0*nu+i_1
, 2170662932315392975-r_0, g*r_0-i_0*nu+mu*r_0+r_1, -i_1+2061941299656136810257\
66281767162012764882778742653651681748131777088113146955230458336201510298, ((-
b1*x1_0^2-1)*s_0^2*i_1-(b1*s_0^2*x1_1^2+b1*s_1^2*x1_0^2+s_1^2)*i_0)*b0+(nu+mu)*
i_1+i_2, b0*b1*i_0*s_0^2*x1_0^2+b0*i_0*s_0^2+mu*s_0^2-g*r_0+s_1^2-mu, M^3*x2_0^
3+x1_1^2, -r_1-56960015138778093273313345235665038612, -nu*i_1+(mu+g)*r_1+r_2,
-i_2+57048490315178788065448013622112679754175791284962609003002711842824416955\
9739209092229069524336131218628974165832686851373002769589614654169605289829087\
1369525570804142010, (((-s_0^2*x1_2^2-2*s_1^2*x1_1^2-s_2^2*x1_0^2)*i_0-x1_0^2*
i_2*s_0^2-2*i_1*(s_0^2*x1_1^2+s_1^2*x1_0^2))*b1-2*s_1^2*i_1-s_2^2*i_0-i_2*s_0^2
)*b0+(nu+mu)*i_2+i_3, ((b1*s_0^2*x1_1^2+b1*s_1^2*x1_0^2+s_1^2)*i_0+i_1*s_0^2*(
b1*x1_0^2+1))*b0-g*r_1+mu*s_1^2+s_2^2, M^3*x2_1^3+x1_2^2, -M^3*x1_0^2+x2_1^3, -
r_2+538202810604531172831684110236917715574095213726207036025630799720702997112\
923033755626332915387437167074793074142, -nu*i_2+(mu+g)*r_2+r_3, -i_3+344330731\
4530154585556967805656074614650065008550129553213915605737496894223713263690293\
2398032434354653523828931064590641855379819402019529047750239931462038427995347\
8496965137233159664588340681987134145894391669244488646678376526196348752131966\
34, (((-s_0^2*x1_3^2-3*s_1^2*x1_2^2-3*s_2^2*x1_1^2-s_3^2*x1_0^2)*i_0+(-3*i_1*
x1_2^2-3*i_2*x1_1^2-i_3*x1_0^2)*s_0^2+(-3*i_1*s_2^2-3*i_2*s_1^2)*x1_0^2-6*s_1^2
*x1_1^2*i_1)*b1-s_0^2*i_3-3*s_1^2*i_2-3*s_2^2*i_1-s_3^2*i_0)*b0+(nu+mu)*i_3+i_4
, (((s_0^2*x1_2^2+2*s_1^2*x1_1^2+s_2^2*x1_0^2)*i_0+(2*i_1*x1_1^2+i_2*x1_0^2)*
s_0^2+2*s_1^2*x1_0^2*i_1)*b1+2*s_1^2*i_1+s_2^2*i_0+i_2*s_0^2)*b0-g*r_2+mu*s_2^2
+s_3^2, M^3*x2_2^3+x1_3^2, -M^3*x1_1^2+x2_2^3, -i_4-929020976432177943340487142\
6855685829729457327634862775410631066964759260651389061980835581511826825043691\
9976008983572498539726842865019315416590412796784613449489793602504973542799293\
2461126971635413463366247697296746523062833229576580853177662840920227316393191\
4787119290788897033956701190241769572560093321986041606419590, (((-s_0^2*x1_4^2
-4*s_1^2*x1_3^2-6*s_2^2*x1_2^2-4*s_3^2*x1_1^2-s_4^2*x1_0^2)*i_0+(-4*i_1*x1_3^2-\
6*i_2*x1_2^2-4*i_3*x1_1^2-i_4*x1_0^2)*s_0^2+(-4*i_1*s_3^2-6*i_2*s_2^2-4*i_3*s_1
^2)*x1_0^2+(-12*s_1^2*x1_2^2-12*s_2^2*x1_1^2)*i_1-12*s_1^2*x1_1^2*i_2)*b1-s_0^2
*i_4-4*s_1^2*i_3-6*s_2^2*i_2-4*s_3^2*i_1-s_4^2*i_0)*b0+(nu+mu)*i_4+i_5, (((s_0^
2*x1_3^2+3*s_1^2*x1_2^2+3*s_2^2*x1_1^2+s_3^2*x1_0^2)*i_0+(3*i_1*x1_2^2+3*i_2*
x1_1^2+i_3*x1_0^2)*s_0^2+(3*i_1*s_2^2+3*i_2*s_1^2)*x1_0^2+6*s_1^2*x1_1^2*i_1)*
b1+s_0^2*i_3+3*s_1^2*i_2+3*s_2^2*i_1+s_3^2*i_0)*b0-g*r_3+mu*s_3^2+s_4^2, M^3*
x2_3^3+x1_4^2, -M^3*x1_2^2+x2_3^3, -i_5-622860636925926885029086896406190970180\
9291822129245549782684705542856007024307098847882304097473405822867793987438974\
7308069834289687637081562092976194160270004896761727803157389641093342674292822\
5333661774440330980300161927174514521345555443844708423374814086055710678722206\
1413414513242133997580565073956695999246129161830621988072173699067919872282641\
63195476513033089066392619030028378851592465638, (((-s_0^2*x1_5^2-5*s_1^2*x1_4^
2-10*s_2^2*x1_3^2-10*s_3^2*x1_2^2-5*s_4^2*x1_1^2-s_5^2*x1_0^2)*i_0+(-5*i_1*x1_4
^2-10*i_2*x1_3^2-10*i_3*x1_2^2-5*i_4*x1_1^2-i_5*x1_0^2)*s_0^2+(-5*i_1*s_4^2-10*
i_2*s_3^2-10*i_3*s_2^2-5*i_4*s_1^2)*x1_0^2+(-20*s_1^2*x1_3^2-30*s_2^2*x1_2^2-20
*s_3^2*x1_1^2)*i_1+(-30*i_2*x1_2^2-20*i_3*x1_1^2)*s_1^2-30*s_2^2*x1_1^2*i_2)*b1
-i_5*s_0^2-5*s_1^2*i_4-10*s_2^2*i_3-10*s_3^2*i_2-5*s_4^2*i_1-s_5^2*i_0)*b0+(nu+
mu)*i_5+i_6, (((s_0^2*x1_4^2+4*s_1^2*x1_3^2+6*s_2^2*x1_2^2+4*s_3^2*x1_1^2+s_4^2
*x1_0^2)*i_0+(4*i_1*x1_3^2+6*i_2*x1_2^2+4*i_3*x1_1^2+i_4*x1_0^2)*s_0^2+(4*i_1*
s_3^2+6*i_2*s_2^2+4*i_3*s_1^2)*x1_0^2+(12*s_1^2*x1_2^2+12*s_2^2*x1_1^2)*i_1+12*
s_1^2*x1_1^2*i_2)*b1+s_0^2*i_4+4*s_1^2*i_3+6*s_2^2*i_2+4*s_3^2*i_1+s_4^2*i_0)*
b0-g*r_4+mu*s_4^2+s_5^2, M^3*x2_4^3+x1_5^2, -nu*i_3+(mu+g)*r_3+r_4, -M^3*x1_3^2
+x2_4^3, -i_6+48659169775568233872589003670377187682121342481477754434514888430\
1496628329361665363420134648124001361671526189710518891918294857525103626688928\
0438505232362796934474870567149820675786111759953933385116862607286108878086423\
6533621842148367130865508699778577851238817009283956274223635789700098594899967\
1391935068744059450422050877336687119013809745715224172075263081706517836930042\
6516850881622445900543465401181282086828472126953284281607427687301867507599125\
359278928402938682, (((-s_0^2*x1_6^2-6*s_1^2*x1_5^2-15*s_2^2*x1_4^2-20*s_3^2*
x1_3^2-15*s_4^2*x1_2^2-6*s_5^2*x1_1^2-s_6^2*x1_0^2)*i_0+(-6*i_1*x1_5^2-15*i_2*
x1_4^2-20*i_3*x1_3^2-15*i_4*x1_2^2-6*i_5*x1_1^2-i_6*x1_0^2)*s_0^2+(-6*i_1*s_5^2
-15*i_2*s_4^2-20*i_3*s_3^2-15*i_4*s_2^2-6*i_5*s_1^2)*x1_0^2+(-30*s_1^2*x1_4^2-\
60*s_2^2*x1_3^2-60*s_3^2*x1_2^2-30*s_4^2*x1_1^2)*i_1+(-60*i_2*x1_3^2-60*i_3*
x1_2^2-30*i_4*x1_1^2)*s_1^2+(-60*i_2*s_3^2-60*i_3*s_2^2)*x1_1^2-90*s_2^2*x1_2^2
*i_2)*b1-6*i_5*s_1^2-i_6*s_0^2-15*s_2^2*i_4-20*s_3^2*i_3-15*s_4^2*i_2-6*s_5^2*
i_1-s_6^2*i_0)*b0+(nu+mu)*i_6+i_7, (((s_0^2*x1_5^2+5*s_1^2*x1_4^2+10*s_2^2*x1_3
^2+10*s_3^2*x1_2^2+5*s_4^2*x1_1^2+s_5^2*x1_0^2)*i_0+(5*i_1*x1_4^2+10*i_2*x1_3^2
+10*i_3*x1_2^2+5*i_4*x1_1^2+i_5*x1_0^2)*s_0^2+(5*i_1*s_4^2+10*i_2*s_3^2+10*i_3*
s_2^2+5*i_4*s_1^2)*x1_0^2+(20*s_1^2*x1_3^2+30*s_2^2*x1_2^2+20*s_3^2*x1_1^2)*i_1
+(30*i_2*x1_2^2+20*i_3*x1_1^2)*s_1^2+30*s_2^2*x1_1^2*i_2)*b1+i_5*s_0^2+5*s_1^2*
i_4+10*s_2^2*i_3+10*s_3^2*i_2+5*s_4^2*i_1+s_5^2*i_0)*b0-g*r_5+mu*s_5^2+s_6^2, M
^3*x2_5^3+x1_6^2, -nu*i_4+(mu+g)*r_4+r_5, -M^3*x1_4^2+x2_5^3, -i_7+464436629089\
7658097517482734894622309227818838200999536220103895686882720708267559206481116\
7589522867530132436597144482570007177734343534028864283841423888162397586817625\
7347181278952715355931895627989125539527974036989403563816162586479608335775294\
9796951216565395329836157671304945302462644805907904509902069147412490998164810\
3215671224253806380362926284460601179162148081752118268738326883401375750654061\
7963461836231958751020096016190623696141139160184529698627453774179313224703081\
8927948948981490233264304578178481697437834178267134832499326024083674, -r_3+14\
8906556328712890570669552593252037345384248679693505520887924880229359785595368\
4974904136104947142742727950280145703805619280621423339936750285596294706582041\
5240606049896250640129272052882, -r_4+89876354616124199886830698311209589283140\
3939861643582608474633872133250113703582548339156393900483435625658379299011993\
5358637421467249602004478629549455692914549325434924601882705319234603535095703\
3498836596557133997617572409384695565244148179237888407584967552954, -r_5-24249\
0754081965247107326043724540063743386421372510213368817298426984161450940456151\
5959999624302045424594735428600559569388556429487710080134739248512044207957917\
0567253862706677846006936974489396979675015709488767935900973902115678839668791\
3044744674105510686454666831283201278786278941777600971151034177069087227034356\
55671176922299244527446, z_aux^2-1], [i_7, x1_6, s_6, i_6, x2_5, x1_5, s_5, r_5
, i_5, x2_4, x1_4, s_4, r_4, i_4, x2_3, x1_3, s_3, r_3, i_3, x2_2, x1_2, s_2, 
r_2, i_2, x2_1, x1_1, s_1, r_1, i_1, x2_0, x1_0, s_0, r_0, i_0, z_aux, w_aux, M
, b0, b1, g, mu, nu], [], [5730236033498019066-i_0, -b0*b1*i_0*s_0*x1_0-b0*i_0*
s_0+i_0*mu+i_0*nu+i_1, 2170662932315392975-r_0, g*r_0-i_0*nu+mu*r_0+r_1, -i_1+
2061941299656136810257662817671620127648827787426536516817481317770881131469552\
30458336201510298, ((-b1*x1_0-1)*s_0*i_1-(b1*s_0*x1_1+b1*s_1*x1_0+s_1)*i_0)*b0+
(nu+mu)*i_1+i_2, b0*b1*i_0*s_0*x1_0+b0*i_0*s_0-g*r_0+mu*s_0-mu+s_1, M*x2_0+x1_1
, -r_1-56960015138778093273313345235665038612, -nu*i_1+(mu+g)*r_1+r_2, -i_2+570\
4849031517878806544801362211267975417579128496260900300271184282441695597392090\
9222906952433613121862897416583268685137300276958961465416960528982908713695255\
70804142010, (((-s_0*x1_2-2*s_1*x1_1-s_2*x1_0)*i_0-x1_0*i_2*s_0-2*i_1*(s_0*x1_1
+s_1*x1_0))*b1-2*s_1*i_1-s_2*i_0-i_2*s_0)*b0+(nu+mu)*i_2+i_3, ((b1*s_0*x1_1+b1*
s_1*x1_0+s_1)*i_0+i_1*s_0*(b1*x1_0+1))*b0-g*r_1+mu*s_1+s_2, M*x2_1+x1_2, -M*
x1_0+x2_1, -r_2+538202810604531172831684110236917715574095213726207036025630799\
720702997112923033755626332915387437167074793074142, -nu*i_2+(mu+g)*r_2+r_3, -
i_3+344330731453015458555696780565607461465006500855012955321391560573749689422\
3713263690293239803243435465352382893106459064185537981940201952904775023993146\
2038427995347849696513723315966458834068198713414589439166924448864667837652619\
634875213196634, (((-s_0*x1_3-3*s_1*x1_2-3*s_2*x1_1-s_3*x1_0)*i_0+(-3*i_1*x1_2-\
3*i_2*x1_1-i_3*x1_0)*s_0+(-3*i_1*s_2-3*i_2*s_1)*x1_0-6*s_1*x1_1*i_1)*b1-s_0*i_3
-3*s_1*i_2-3*s_2*i_1-s_3*i_0)*b0+(nu+mu)*i_3+i_4, (((s_0*x1_2+2*s_1*x1_1+s_2*
x1_0)*i_0+(2*i_1*x1_1+i_2*x1_0)*s_0+2*s_1*x1_0*i_1)*b1+2*s_1*i_1+s_2*i_0+i_2*
s_0)*b0-g*r_2+mu*s_2+s_3, M*x2_2+x1_3, -M*x1_1+x2_2, -i_4-929020976432177943340\
4871426855685829729457327634862775410631066964759260651389061980835581511826825\
0436919976008983572498539726842865019315416590412796784613449489793602504973542\
7992932461126971635413463366247697296746523062833229576580853177662840920227316\
3931914787119290788897033956701190241769572560093321986041606419590, (((-s_0*
x1_4-4*s_1*x1_3-6*s_2*x1_2-4*s_3*x1_1-s_4*x1_0)*i_0+(-4*i_1*x1_3-6*i_2*x1_2-4*
i_3*x1_1-i_4*x1_0)*s_0+(-4*i_1*s_3-6*i_2*s_2-4*i_3*s_1)*x1_0+(-12*s_1*x1_2-12*
s_2*x1_1)*i_1-12*s_1*x1_1*i_2)*b1-s_0*i_4-4*s_1*i_3-6*s_2*i_2-4*s_3*i_1-s_4*i_0
)*b0+(nu+mu)*i_4+i_5, (((s_0*x1_3+3*s_1*x1_2+3*s_2*x1_1+s_3*x1_0)*i_0+(3*i_1*
x1_2+3*i_2*x1_1+i_3*x1_0)*s_0+(3*i_1*s_2+3*i_2*s_1)*x1_0+6*s_1*x1_1*i_1)*b1+s_0
*i_3+3*s_1*i_2+3*s_2*i_1+s_3*i_0)*b0-g*r_3+mu*s_3+s_4, M*x2_3+x1_4, -M*x1_2+
x2_3, -i_5-62286063692592688502908689640619097018092918221292455497826847055428\
5600702430709884788230409747340582286779398743897473080698342896876370815620929\
7619416027000489676172780315738964109334267429282253336617744403309803001619271\
7451452134555544384470842337481408605571067872220614134145132421339975805650739\
5669599924612916183062198807217369906791987228264163195476513033089066392619030\
028378851592465638, (((-s_0*x1_5-5*s_1*x1_4-10*s_2*x1_3-10*s_3*x1_2-5*s_4*x1_1-
s_5*x1_0)*i_0+(-5*i_1*x1_4-10*i_2*x1_3-10*i_3*x1_2-5*i_4*x1_1-i_5*x1_0)*s_0+(-5
*i_1*s_4-10*i_2*s_3-10*i_3*s_2-5*i_4*s_1)*x1_0+(-20*s_1*x1_3-30*s_2*x1_2-20*s_3
*x1_1)*i_1+(-30*i_2*x1_2-20*i_3*x1_1)*s_1-30*s_2*x1_1*i_2)*b1-i_5*s_0-5*s_1*i_4
-10*s_2*i_3-10*s_3*i_2-5*s_4*i_1-s_5*i_0)*b0+(nu+mu)*i_5+i_6, (((s_0*x1_4+4*s_1
*x1_3+6*s_2*x1_2+4*s_3*x1_1+s_4*x1_0)*i_0+(4*i_1*x1_3+6*i_2*x1_2+4*i_3*x1_1+i_4
*x1_0)*s_0+(4*i_1*s_3+6*i_2*s_2+4*i_3*s_1)*x1_0+(12*s_1*x1_2+12*s_2*x1_1)*i_1+
12*s_1*x1_1*i_2)*b1+s_0*i_4+4*s_1*i_3+6*s_2*i_2+4*s_3*i_1+s_4*i_0)*b0-g*r_4+mu*
s_4+s_5, M*x2_4+x1_5, -nu*i_3+(mu+g)*r_3+r_4, -M*x1_3+x2_4, -i_6+48659169775568\
2338725890036703771876821213424814777544345148884301496628329361665363420134648\
1240013616715261897105188919182948575251036266889280438505232362796934474870567\
1498206757861117599539333851168626072861088780864236533621842148367130865508699\
7785778512388170092839562742236357897000985948999671391935068744059450422050877\
3366871190138097457152241720752630817065178369300426516850881622445900543465401\
181282086828472126953284281607427687301867507599125359278928402938682, (((-s_0*
x1_6-6*s_1*x1_5-15*s_2*x1_4-20*s_3*x1_3-15*s_4*x1_2-6*s_5*x1_1-s_6*x1_0)*i_0+(-\
6*i_1*x1_5-15*i_2*x1_4-20*i_3*x1_3-15*i_4*x1_2-6*i_5*x1_1-i_6*x1_0)*s_0+(-6*i_1
*s_5-15*i_2*s_4-20*i_3*s_3-15*i_4*s_2-6*i_5*s_1)*x1_0+(-30*s_1*x1_4-60*s_2*x1_3
-60*s_3*x1_2-30*s_4*x1_1)*i_1+(-60*i_2*x1_3-60*i_3*x1_2-30*i_4*x1_1)*s_1+(-60*
i_2*s_3-60*i_3*s_2)*x1_1-90*s_2*x1_2*i_2)*b1-6*i_5*s_1-i_6*s_0-15*s_2*i_4-20*
s_3*i_3-15*s_4*i_2-6*s_5*i_1-s_6*i_0)*b0+(nu+mu)*i_6+i_7, (((s_0*x1_5+5*s_1*
x1_4+10*s_2*x1_3+10*s_3*x1_2+5*s_4*x1_1+s_5*x1_0)*i_0+(5*i_1*x1_4+10*i_2*x1_3+
10*i_3*x1_2+5*i_4*x1_1+i_5*x1_0)*s_0+(5*i_1*s_4+10*i_2*s_3+10*i_3*s_2+5*i_4*s_1
)*x1_0+(20*s_1*x1_3+30*s_2*x1_2+20*s_3*x1_1)*i_1+(30*i_2*x1_2+20*i_3*x1_1)*s_1+
30*s_2*x1_1*i_2)*b1+i_5*s_0+5*s_1*i_4+10*s_2*i_3+10*s_3*i_2+5*s_4*i_1+s_5*i_0)*
b0-g*r_5+mu*s_5+s_6, M*x2_5+x1_6, -nu*i_4+(mu+g)*r_4+r_5, -M*x1_4+x2_5, -i_7+46\
4436629089765809751748273489462230922781883820099953622010389568688272070826755\
9206481116758952286753013243659714448257000717773434353402886428384142388816239\
7586817625734718127895271535593189562798912553952797403698940356381616258647960\
8335775294979695121656539532983615767130494530246264480590790450990206914741249\
0998164810321567122425380638036292628446060117916214808175211826873832688340137\
5750654061796346183623195875102009601619062369614113916018452969862745377417931\
3224703081892794894898149023326430457817848169743783417826713483249932602408367\
4, -r_3+14890655632871289057066955259325203734538424867969350552088792488022935\
9785595368497490413610494714274272795028014570380561928062142333993675028559629\
47065820415240606049896250640129272052882, -r_4+8987635461612419988683069831120\
9589283140393986164358260847463387213325011370358254833915639390048343562565837\
9299011993535863742146724960200447862954945569291454932543492460188270531923460\
35350957033498836596557133997617572409384695565244148179237888407584967552954,
-r_5-24249075408196524710732604372454006374338642137251021336881729842698416145\
0940456151595999962430204542459473542860055956938855642948771008013473924851204\
4207957917056725386270667784600693697448939697967501570948876793590097390211567\
8839668791304474467410551068645466683128320127878627894177760097115103417706908\
722703435655671176922299244527446, z_aux-1]

SubsByDepth Usage (real, cpu, memory):	1.200,	1.257,	141593904

memory used=407.3MB, alloc=118.2MB, time=4.47
